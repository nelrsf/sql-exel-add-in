/*! For license information please see taskpane.js.LICENSE.txt */
!function(){var e={67526:function(e,t){"use strict";t.byteLength=function(e){var t=o(e),n=t[0],a=t[1];return 3*(n+a)/4-a},t.toByteArray=function(e){var t,n,r=o(e),s=r[0],c=r[1],h=new i(function(e,t,n){return 3*(t+n)/4-n}(0,s,c)),l=0,u=c>0?s-4:s;for(n=0;n<u;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],h[l++]=t>>16&255,h[l++]=t>>8&255,h[l++]=255&t;return 2===c&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,h[l++]=255&t),1===c&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,h[l++]=t>>8&255,h[l++]=255&t),h},t.fromByteArray=function(e){for(var t,a=e.length,i=a%3,r=[],s=16383,o=0,h=a-i;o<h;o+=s)r.push(c(e,o,o+s>h?h:o+s));return 1===i?(t=e[a-1],r.push(n[t>>2]+n[t<<4&63]+"==")):2===i&&(t=(e[a-2]<<8)+e[a-1],r.push(n[t>>10]+n[t>>4&63]+n[t<<2&63]+"=")),r.join("")};for(var n=[],a=[],i="undefined"!=typeof Uint8Array?Uint8Array:Array,r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",s=0;s<64;++s)n[s]=r[s],a[r.charCodeAt(s)]=s;function o(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function c(e,t,a){for(var i,r,s=[],o=t;o<a;o+=3)i=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),s.push(n[(r=i)>>18&63]+n[r>>12&63]+n[r>>6&63]+n[63&r]);return s.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},48287:function(e,t,n){"use strict";var a=n(67526),i=n(251),r="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.Buffer=c,t.SlowBuffer=function(e){return+e!=e&&(e=0),c.alloc(+e)},t.INSPECT_MAX_BYTES=50;var s=2147483647;function o(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');var t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return u(e)}return h(e,t,n)}function h(e,t,n){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);var n=0|y(e,t),a=o(n),i=a.write(e,t);return i!==n&&(a=a.slice(0,i)),a}(e,t);if(ArrayBuffer.isView(e))return function(e){if(F(e,Uint8Array)){var t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return p(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(F(e,ArrayBuffer)||e&&F(e.buffer,ArrayBuffer))return d(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(F(e,SharedArrayBuffer)||e&&F(e.buffer,SharedArrayBuffer)))return d(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');var a=e.valueOf&&e.valueOf();if(null!=a&&a!==e)return c.from(a,t,n);var i=function(e){if(c.isBuffer(e)){var t=0|m(e.length),n=o(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||k(e.length)?o(0):p(e):"Buffer"===e.type&&Array.isArray(e.data)?p(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function u(e){return l(e),o(e<0?0:0|m(e))}function p(e){for(var t=e.length<0?0:0|m(e.length),n=o(t),a=0;a<t;a+=1)n[a]=255&e[a];return n}function d(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');var a;return a=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(a,c.prototype),a}function m(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function y(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||F(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);var n=e.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===n)return 0;for(var i=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return B(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return j(e).length;default:if(i)return a?-1:B(e).length;t=(""+t).toLowerCase(),i=!0}}function f(e,t,n){var a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return x(this,t,n);case"utf8":case"utf-8":return v(this,t,n);case"ascii":return S(this,t,n);case"latin1":case"binary":return O(this,t,n);case"base64":return M(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,n);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function g(e,t,n){var a=e[t];e[t]=e[n],e[n]=a}function E(e,t,n,a,i){if(0===e.length)return-1;if("string"==typeof n?(a=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),k(n=+n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=c.from(t,a)),c.isBuffer(t))return 0===t.length?-1:b(e,t,n,a,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):b(e,[t],n,a,i);throw new TypeError("val must be string, number or Buffer")}function b(e,t,n,a,i){var r,s=1,o=e.length,c=t.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||t.length<2)return-1;s=2,o/=2,c/=2,n/=2}function h(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){var l=-1;for(r=n;r<o;r++)if(h(e,r)===h(t,-1===l?0:r-l)){if(-1===l&&(l=r),r-l+1===c)return l*s}else-1!==l&&(r-=r-l),l=-1}else for(n+c>o&&(n=o-c),r=n;r>=0;r--){for(var u=!0,p=0;p<c;p++)if(h(e,r+p)!==h(t,p)){u=!1;break}if(u)return r}return-1}function T(e,t,n,a){n=Number(n)||0;var i=e.length-n;a?(a=Number(a))>i&&(a=i):a=i;var r=t.length;a>r/2&&(a=r/2);for(var s=0;s<a;++s){var o=parseInt(t.substr(2*s,2),16);if(k(o))return s;e[n+s]=o}return s}function w(e,t,n,a){return U(B(t,e.length-n),e,n,a)}function N(e,t,n,a){return U(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,a)}function A(e,t,n,a){return U(j(t),e,n,a)}function C(e,t,n,a){return U(function(e,t){for(var n,a,i,r=[],s=0;s<e.length&&!((t-=2)<0);++s)a=(n=e.charCodeAt(s))>>8,i=n%256,r.push(i),r.push(a);return r}(t,e.length-n),e,n,a)}function M(e,t,n){return 0===t&&n===e.length?a.fromByteArray(e):a.fromByteArray(e.slice(t,n))}function v(e,t,n){n=Math.min(e.length,n);for(var a=[],i=t;i<n;){var r,s,o,c,h=e[i],l=null,u=h>239?4:h>223?3:h>191?2:1;if(i+u<=n)switch(u){case 1:h<128&&(l=h);break;case 2:128==(192&(r=e[i+1]))&&(c=(31&h)<<6|63&r)>127&&(l=c);break;case 3:r=e[i+1],s=e[i+2],128==(192&r)&&128==(192&s)&&(c=(15&h)<<12|(63&r)<<6|63&s)>2047&&(c<55296||c>57343)&&(l=c);break;case 4:r=e[i+1],s=e[i+2],o=e[i+3],128==(192&r)&&128==(192&s)&&128==(192&o)&&(c=(15&h)<<18|(63&r)<<12|(63&s)<<6|63&o)>65535&&c<1114112&&(l=c)}null===l?(l=65533,u=1):l>65535&&(l-=65536,a.push(l>>>10&1023|55296),l=56320|1023&l),a.push(l),i+=u}return function(e){var t=e.length;if(t<=R)return String.fromCharCode.apply(String,e);for(var n="",a=0;a<t;)n+=String.fromCharCode.apply(String,e.slice(a,a+=R));return n}(a)}t.kMaxLength=s,c.TYPED_ARRAY_SUPPORT=function(){try{var e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,n){return h(e,t,n)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,n){return function(e,t,n){return l(e),e<=0?o(e):void 0!==t?"string"==typeof n?o(e).fill(t,n):o(e).fill(t):o(e)}(e,t,n)},c.allocUnsafe=function(e){return u(e)},c.allocUnsafeSlow=function(e){return u(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(F(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),F(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;for(var n=e.length,a=t.length,i=0,r=Math.min(n,a);i<r;++i)if(e[i]!==t[i]){n=e[i],a=t[i];break}return n<a?-1:a<n?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var a=c.allocUnsafe(t),i=0;for(n=0;n<e.length;++n){var r=e[n];if(F(r,Uint8Array))i+r.length>a.length?c.from(r).copy(a,i):Uint8Array.prototype.set.call(a,r,i);else{if(!c.isBuffer(r))throw new TypeError('"list" argument must be an Array of Buffers');r.copy(a,i)}i+=r.length}return a},c.byteLength=y,c.prototype._isBuffer=!0,c.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)g(this,t,t+1);return this},c.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},c.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},c.prototype.toString=function(){var e=this.length;return 0===e?"":0===arguments.length?v(this,0,e):f.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},r&&(c.prototype[r]=c.prototype.inspect),c.prototype.compare=function(e,t,n,a,i){if(F(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===a&&(a=0),void 0===i&&(i=this.length),t<0||n>e.length||a<0||i>this.length)throw new RangeError("out of range index");if(a>=i&&t>=n)return 0;if(a>=i)return-1;if(t>=n)return 1;if(this===e)return 0;for(var r=(i>>>=0)-(a>>>=0),s=(n>>>=0)-(t>>>=0),o=Math.min(r,s),h=this.slice(a,i),l=e.slice(t,n),u=0;u<o;++u)if(h[u]!==l[u]){r=h[u],s=l[u];break}return r<s?-1:s<r?1:0},c.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},c.prototype.indexOf=function(e,t,n){return E(this,e,t,n,!0)},c.prototype.lastIndexOf=function(e,t,n){return E(this,e,t,n,!1)},c.prototype.write=function(e,t,n,a){if(void 0===t)a="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)a=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===a&&(a="utf8")):(a=n,n=void 0)}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");for(var r=!1;;)switch(a){case"hex":return T(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":case"latin1":case"binary":return N(this,e,t,n);case"base64":return A(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,t,n);default:if(r)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),r=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var R=4096;function S(e,t,n){var a="";n=Math.min(e.length,n);for(var i=t;i<n;++i)a+=String.fromCharCode(127&e[i]);return a}function O(e,t,n){var a="";n=Math.min(e.length,n);for(var i=t;i<n;++i)a+=String.fromCharCode(e[i]);return a}function x(e,t,n){var a=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>a)&&(n=a);for(var i="",r=t;r<n;++r)i+=V[e[r]];return i}function P(e,t,n){for(var a=e.slice(t,n),i="",r=0;r<a.length-1;r+=2)i+=String.fromCharCode(a[r]+256*a[r+1]);return i}function I(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function $(e,t,n,a,i,r){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<r)throw new RangeError('"value" argument is out of bounds');if(n+a>e.length)throw new RangeError("Index out of range")}function q(e,t,n,a,i,r){if(n+a>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function D(e,t,n,a,r){return t=+t,n>>>=0,r||q(e,0,n,4),i.write(e,t,n,a,23,4),n+4}function L(e,t,n,a,r){return t=+t,n>>>=0,r||q(e,0,n,8),i.write(e,t,n,a,52,8),n+8}c.prototype.slice=function(e,t){var n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);var a=this.subarray(e,t);return Object.setPrototypeOf(a,c.prototype),a},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);for(var a=this[e],i=1,r=0;++r<t&&(i*=256);)a+=this[e+r]*i;return a},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);for(var a=this[e+--t],i=1;t>0&&(i*=256);)a+=this[e+--t]*i;return a},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||I(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||I(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||I(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||I(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||I(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);for(var a=this[e],i=1,r=0;++r<t&&(i*=256);)a+=this[e+r]*i;return a>=(i*=128)&&(a-=Math.pow(2,8*t)),a},c.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);for(var a=t,i=1,r=this[e+--a];a>0&&(i*=256);)r+=this[e+--a]*i;return r>=(i*=128)&&(r-=Math.pow(2,8*t)),r},c.prototype.readInt8=function(e,t){return e>>>=0,t||I(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||I(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(e,t){e>>>=0,t||I(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||I(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||I(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readFloatLE=function(e,t){return e>>>=0,t||I(e,4,this.length),i.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||I(e,4,this.length),i.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||I(e,8,this.length),i.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||I(e,8,this.length),i.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,n,a){e=+e,t>>>=0,n>>>=0,a||$(this,e,t,n,Math.pow(2,8*n)-1,0);var i=1,r=0;for(this[t]=255&e;++r<n&&(i*=256);)this[t+r]=e/i&255;return t+n},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,n,a){e=+e,t>>>=0,n>>>=0,a||$(this,e,t,n,Math.pow(2,8*n)-1,0);var i=n-1,r=1;for(this[t+i]=255&e;--i>=0&&(r*=256);)this[t+i]=e/r&255;return t+n},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeIntLE=function(e,t,n,a){if(e=+e,t>>>=0,!a){var i=Math.pow(2,8*n-1);$(this,e,t,n,i-1,-i)}var r=0,s=1,o=0;for(this[t]=255&e;++r<n&&(s*=256);)e<0&&0===o&&0!==this[t+r-1]&&(o=1),this[t+r]=(e/s|0)-o&255;return t+n},c.prototype.writeIntBE=function(e,t,n,a){if(e=+e,t>>>=0,!a){var i=Math.pow(2,8*n-1);$(this,e,t,n,i-1,-i)}var r=n-1,s=1,o=0;for(this[t+r]=255&e;--r>=0&&(s*=256);)e<0&&0===o&&0!==this[t+r+1]&&(o=1),this[t+r]=(e/s|0)-o&255;return t+n},c.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeFloatLE=function(e,t,n){return D(this,e,t,!0,n)},c.prototype.writeFloatBE=function(e,t,n){return D(this,e,t,!1,n)},c.prototype.writeDoubleLE=function(e,t,n){return L(this,e,t,!0,n)},c.prototype.writeDoubleBE=function(e,t,n){return L(this,e,t,!1,n)},c.prototype.copy=function(e,t,n,a){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<n&&(a=n),a===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-t<a-n&&(a=e.length-t+n);var i=a-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,a):Uint8Array.prototype.set.call(e,this.subarray(n,a),t),i},c.prototype.fill=function(e,t,n,a){if("string"==typeof e){if("string"==typeof t?(a=t,t=0,n=this.length):"string"==typeof n&&(a=n,n=this.length),void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!c.isEncoding(a))throw new TypeError("Unknown encoding: "+a);if(1===e.length){var i=e.charCodeAt(0);("utf8"===a&&i<128||"latin1"===a)&&(e=i)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var r;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(r=t;r<n;++r)this[r]=e;else{var s=c.isBuffer(e)?e:c.from(e,a),o=s.length;if(0===o)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(r=0;r<n-t;++r)this[r+t]=s[r%o]}return this};var _=/[^+/0-9A-Za-z-_]/g;function B(e,t){var n;t=t||1/0;for(var a=e.length,i=null,r=[],s=0;s<a;++s){if((n=e.charCodeAt(s))>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&r.push(239,191,189);continue}if(s+1===a){(t-=3)>-1&&r.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&r.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&r.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;r.push(n)}else if(n<2048){if((t-=2)<0)break;r.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;r.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;r.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return r}function j(e){return a.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(_,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function U(e,t,n,a){for(var i=0;i<a&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function F(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function k(e){return e!=e}var V=function(){for(var e="0123456789abcdef",t=new Array(256),n=0;n<16;++n)for(var a=16*n,i=0;i<16;++i)t[a+i]=e[n]+e[i];return t}()},74353:function(e){e.exports=function(){"use strict";var e=6e4,t=36e5,n="millisecond",a="second",i="minute",r="hour",s="day",o="week",c="month",h="quarter",l="year",u="date",p="Invalid Date",d=/^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/,m=/\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,y={name:"en",weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),ordinal:function(e){var t=["th","st","nd","rd"],n=e%100;return"["+e+(t[(n-20)%10]||t[n]||t[0])+"]"}},f=function(e,t,n){var a=String(e);return!a||a.length>=t?e:""+Array(t+1-a.length).join(n)+e},g={s:f,z:function(e){var t=-e.utcOffset(),n=Math.abs(t),a=Math.floor(n/60),i=n%60;return(t<=0?"+":"-")+f(a,2,"0")+":"+f(i,2,"0")},m:function e(t,n){if(t.date()<n.date())return-e(n,t);var a=12*(n.year()-t.year())+(n.month()-t.month()),i=t.clone().add(a,c),r=n-i<0,s=t.clone().add(a+(r?-1:1),c);return+(-(a+(n-i)/(r?i-s:s-i))||0)},a:function(e){return e<0?Math.ceil(e)||0:Math.floor(e)},p:function(e){return{M:c,y:l,w:o,d:s,D:u,h:r,m:i,s:a,ms:n,Q:h}[e]||String(e||"").toLowerCase().replace(/s$/,"")},u:function(e){return void 0===e}},E="en",b={};b[E]=y;var T="$isDayjsObject",w=function(e){return e instanceof M||!(!e||!e[T])},N=function e(t,n,a){var i;if(!t)return E;if("string"==typeof t){var r=t.toLowerCase();b[r]&&(i=r),n&&(b[r]=n,i=r);var s=t.split("-");if(!i&&s.length>1)return e(s[0])}else{var o=t.name;b[o]=t,i=o}return!a&&i&&(E=i),i||!a&&E},A=function(e,t){if(w(e))return e.clone();var n="object"==typeof t?t:{};return n.date=e,n.args=arguments,new M(n)},C=g;C.l=N,C.i=w,C.w=function(e,t){return A(e,{locale:t.$L,utc:t.$u,x:t.$x,$offset:t.$offset})};var M=function(){function y(e){this.$L=N(e.locale,null,!0),this.parse(e),this.$x=this.$x||e.x||{},this[T]=!0}var f=y.prototype;return f.parse=function(e){this.$d=function(e){var t=e.date,n=e.utc;if(null===t)return new Date(NaN);if(C.u(t))return new Date;if(t instanceof Date)return new Date(t);if("string"==typeof t&&!/Z$/i.test(t)){var a=t.match(d);if(a){var i=a[2]-1||0,r=(a[7]||"0").substring(0,3);return n?new Date(Date.UTC(a[1],i,a[3]||1,a[4]||0,a[5]||0,a[6]||0,r)):new Date(a[1],i,a[3]||1,a[4]||0,a[5]||0,a[6]||0,r)}}return new Date(t)}(e),this.init()},f.init=function(){var e=this.$d;this.$y=e.getFullYear(),this.$M=e.getMonth(),this.$D=e.getDate(),this.$W=e.getDay(),this.$H=e.getHours(),this.$m=e.getMinutes(),this.$s=e.getSeconds(),this.$ms=e.getMilliseconds()},f.$utils=function(){return C},f.isValid=function(){return!(this.$d.toString()===p)},f.isSame=function(e,t){var n=A(e);return this.startOf(t)<=n&&n<=this.endOf(t)},f.isAfter=function(e,t){return A(e)<this.startOf(t)},f.isBefore=function(e,t){return this.endOf(t)<A(e)},f.$g=function(e,t,n){return C.u(e)?this[t]:this.set(n,e)},f.unix=function(){return Math.floor(this.valueOf()/1e3)},f.valueOf=function(){return this.$d.getTime()},f.startOf=function(e,t){var n=this,h=!!C.u(t)||t,p=C.p(e),d=function(e,t){var a=C.w(n.$u?Date.UTC(n.$y,t,e):new Date(n.$y,t,e),n);return h?a:a.endOf(s)},m=function(e,t){return C.w(n.toDate()[e].apply(n.toDate("s"),(h?[0,0,0,0]:[23,59,59,999]).slice(t)),n)},y=this.$W,f=this.$M,g=this.$D,E="set"+(this.$u?"UTC":"");switch(p){case l:return h?d(1,0):d(31,11);case c:return h?d(1,f):d(0,f+1);case o:var b=this.$locale().weekStart||0,T=(y<b?y+7:y)-b;return d(h?g-T:g+(6-T),f);case s:case u:return m(E+"Hours",0);case r:return m(E+"Minutes",1);case i:return m(E+"Seconds",2);case a:return m(E+"Milliseconds",3);default:return this.clone()}},f.endOf=function(e){return this.startOf(e,!1)},f.$set=function(e,t){var o,h=C.p(e),p="set"+(this.$u?"UTC":""),d=(o={},o[s]=p+"Date",o[u]=p+"Date",o[c]=p+"Month",o[l]=p+"FullYear",o[r]=p+"Hours",o[i]=p+"Minutes",o[a]=p+"Seconds",o[n]=p+"Milliseconds",o)[h],m=h===s?this.$D+(t-this.$W):t;if(h===c||h===l){var y=this.clone().set(u,1);y.$d[d](m),y.init(),this.$d=y.set(u,Math.min(this.$D,y.daysInMonth())).$d}else d&&this.$d[d](m);return this.init(),this},f.set=function(e,t){return this.clone().$set(e,t)},f.get=function(e){return this[C.p(e)]()},f.add=function(n,h){var u,p=this;n=Number(n);var d=C.p(h),m=function(e){var t=A(p);return C.w(t.date(t.date()+Math.round(e*n)),p)};if(d===c)return this.set(c,this.$M+n);if(d===l)return this.set(l,this.$y+n);if(d===s)return m(1);if(d===o)return m(7);var y=(u={},u[i]=e,u[r]=t,u[a]=1e3,u)[d]||1,f=this.$d.getTime()+n*y;return C.w(f,this)},f.subtract=function(e,t){return this.add(-1*e,t)},f.format=function(e){var t=this,n=this.$locale();if(!this.isValid())return n.invalidDate||p;var a=e||"YYYY-MM-DDTHH:mm:ssZ",i=C.z(this),r=this.$H,s=this.$m,o=this.$M,c=n.weekdays,h=n.months,l=n.meridiem,u=function(e,n,i,r){return e&&(e[n]||e(t,a))||i[n].slice(0,r)},d=function(e){return C.s(r%12||12,e,"0")},y=l||function(e,t,n){var a=e<12?"AM":"PM";return n?a.toLowerCase():a};return a.replace(m,(function(e,a){return a||function(e){switch(e){case"YY":return String(t.$y).slice(-2);case"YYYY":return C.s(t.$y,4,"0");case"M":return o+1;case"MM":return C.s(o+1,2,"0");case"MMM":return u(n.monthsShort,o,h,3);case"MMMM":return u(h,o);case"D":return t.$D;case"DD":return C.s(t.$D,2,"0");case"d":return String(t.$W);case"dd":return u(n.weekdaysMin,t.$W,c,2);case"ddd":return u(n.weekdaysShort,t.$W,c,3);case"dddd":return c[t.$W];case"H":return String(r);case"HH":return C.s(r,2,"0");case"h":return d(1);case"hh":return d(2);case"a":return y(r,s,!0);case"A":return y(r,s,!1);case"m":return String(s);case"mm":return C.s(s,2,"0");case"s":return String(t.$s);case"ss":return C.s(t.$s,2,"0");case"SSS":return C.s(t.$ms,3,"0");case"Z":return i}return null}(e)||i.replace(":","")}))},f.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},f.diff=function(n,u,p){var d,m=this,y=C.p(u),f=A(n),g=(f.utcOffset()-this.utcOffset())*e,E=this-f,b=function(){return C.m(m,f)};switch(y){case l:d=b()/12;break;case c:d=b();break;case h:d=b()/3;break;case o:d=(E-g)/6048e5;break;case s:d=(E-g)/864e5;break;case r:d=E/t;break;case i:d=E/e;break;case a:d=E/1e3;break;default:d=E}return p?d:C.a(d)},f.daysInMonth=function(){return this.endOf(c).$D},f.$locale=function(){return b[this.$L]},f.locale=function(e,t){if(!e)return this.$L;var n=this.clone(),a=N(e,t,!0);return a&&(n.$L=a),n},f.clone=function(){return C.w(this.$d,this)},f.toDate=function(){return new Date(this.valueOf())},f.toJSON=function(){return this.isValid()?this.toISOString():null},f.toISOString=function(){return this.$d.toISOString()},f.toString=function(){return this.$d.toUTCString()},y}(),v=M.prototype;return A.prototype=v,[["$ms",n],["$s",a],["$m",i],["$H",r],["$W",s],["$M",c],["$y",l],["$D",u]].forEach((function(e){v[e[1]]=function(t){return this.$g(t,e[0],e[1])}})),A.extend=function(e,t){return e.$i||(e(t,M,A),e.$i=!0),A},A.locale=N,A.isDayjs=w,A.unix=function(e){return A(1e3*e)},A.en=b[E],A.Ls=b,A.p={},A}()},17833:function(e,t,n){t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;const n="color: "+this.color;t.splice(1,0,n,"color: inherit");let a=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{"%%"!==e&&(a++,"%c"===e&&(i=a))})),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem("debug")}catch(e){}return!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG),e},t.useColors=function(){return!("undefined"==typeof window||!window.process||"renderer"!==window.process.type&&!window.process.__nwjs)||("undefined"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))&&("undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`."))}})(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],t.log=console.debug||console.log||(()=>{}),e.exports=n(40736)(t);const{formatters:a}=e.exports;a.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}},40736:function(e,t,n){e.exports=function(e){function t(e){let n,i,r,s=null;function o(...e){if(!o.enabled)return;const a=o,i=Number(new Date),r=i-(n||i);a.diff=r,a.prev=n,a.curr=i,n=i,e[0]=t.coerce(e[0]),"string"!=typeof e[0]&&e.unshift("%O");let s=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((n,i)=>{if("%%"===n)return"%";s++;const r=t.formatters[i];if("function"==typeof r){const t=e[s];n=r.call(a,t),e.splice(s,1),s--}return n})),t.formatArgs.call(a,e),(a.log||t.log).apply(a,e)}return o.namespace=e,o.useColors=t.useColors(),o.color=t.selectColor(e),o.extend=a,o.destroy=t.destroy,Object.defineProperty(o,"enabled",{enumerable:!0,configurable:!1,get:()=>null!==s?s:(i!==t.namespaces&&(i=t.namespaces,r=t.enabled(e)),r),set:e=>{s=e}}),"function"==typeof t.init&&t.init(o),o}function a(e,n){const a=t(this.namespace+(void 0===n?":":n)+e);return a.log=this.log,a}function i(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return t.debug=t,t.default=t,t.coerce=function(e){return e instanceof Error?e.stack||e.message:e},t.disable=function(){const e=[...t.names.map(i),...t.skips.map(i).map((e=>"-"+e))].join(",");return t.enable(""),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const a=("string"==typeof e?e:"").split(/[\s,]+/),i=a.length;for(n=0;n<i;n++)a[n]&&("-"===(e=a[n].replace(/\*/g,".*?"))[0]?t.skips.push(new RegExp("^"+e.slice(1)+"$")):t.names.push(new RegExp("^"+e+"$")))},t.enabled=function(e){if("*"===e[e.length-1])return!0;let n,a;for(n=0,a=t.skips.length;n<a;n++)if(t.skips[n].test(e))return!1;for(n=0,a=t.names.length;n<a;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=n(6585),t.destroy=function(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t}},14385:function(e){"use strict";e.exports=function(e,t){return t||(t={}),e?(e=String(e.__esModule?e.default:e),t.hash&&(e+=t.hash),t.maybeNeedQuotes&&/[\t\n\f\r "'=<>`]/.test(e)?'"'.concat(e,'"'):e):e}},251:function(e,t){t.read=function(e,t,n,a,i){var r,s,o=8*i-a-1,c=(1<<o)-1,h=c>>1,l=-7,u=n?i-1:0,p=n?-1:1,d=e[t+u];for(u+=p,r=d&(1<<-l)-1,d>>=-l,l+=o;l>0;r=256*r+e[t+u],u+=p,l-=8);for(s=r&(1<<-l)-1,r>>=-l,l+=a;l>0;s=256*s+e[t+u],u+=p,l-=8);if(0===r)r=1-h;else{if(r===c)return s?NaN:1/0*(d?-1:1);s+=Math.pow(2,a),r-=h}return(d?-1:1)*s*Math.pow(2,r-a)},t.write=function(e,t,n,a,i,r){var s,o,c,h=8*r-i-1,l=(1<<h)-1,u=l>>1,p=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,d=a?0:r-1,m=a?1:-1,y=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,s=l):(s=Math.floor(Math.log(t)/Math.LN2),t*(c=Math.pow(2,-s))<1&&(s--,c*=2),(t+=s+u>=1?p/c:p*Math.pow(2,1-u))*c>=2&&(s++,c/=2),s+u>=l?(o=0,s=l):s+u>=1?(o=(t*c-1)*Math.pow(2,i),s+=u):(o=t*Math.pow(2,u-1)*Math.pow(2,i),s=0));i>=8;e[n+d]=255&o,d+=m,o/=256,i-=8);for(s=s<<i|o,h+=i;h>0;e[n+d]=255&s,d+=m,s/=256,h-=8);e[n+d-m]|=128*y}},56698:function(e){"function"==typeof Object.create?e.exports=function(e,t){t&&(e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}))}:e.exports=function(e,t){if(t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}}},6585:function(e){var t=1e3,n=60*t,a=60*n,i=24*a,r=7*i;function s(e,t,n,a){var i=t>=1.5*n;return Math.round(e/n)+" "+a+(i?"s":"")}e.exports=function(e,o){o=o||{};var c,h,l=typeof e;if("string"===l&&e.length>0)return function(e){if(!((e=String(e)).length>100)){var s=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(s){var o=parseFloat(s[1]);switch((s[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return 315576e5*o;case"weeks":case"week":case"w":return o*r;case"days":case"day":case"d":return o*i;case"hours":case"hour":case"hrs":case"hr":case"h":return o*a;case"minutes":case"minute":case"mins":case"min":case"m":return o*n;case"seconds":case"second":case"secs":case"sec":case"s":return o*t;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return o;default:return}}}}(e);if("number"===l&&isFinite(e))return o.long?(c=e,(h=Math.abs(c))>=i?s(c,h,i,"day"):h>=a?s(c,h,a,"hour"):h>=n?s(c,h,n,"minute"):h>=t?s(c,h,t,"second"):c+" ms"):function(e){var r=Math.abs(e);return r>=i?Math.round(e/i)+"d":r>=a?Math.round(e/a)+"h":r>=n?Math.round(e/n)+"m":r>=t?Math.round(e/t)+"s":e+"ms"}(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))}},92861:function(e,t,n){var a=n(48287),i=a.Buffer;function r(e,t){for(var n in e)t[n]=e[n]}function s(e,t,n){return i(e,t,n)}i.from&&i.alloc&&i.allocUnsafe&&i.allocUnsafeSlow?e.exports=a:(r(a,t),t.Buffer=s),s.prototype=Object.create(i.prototype),r(i,s),s.from=function(e,t,n){if("number"==typeof e)throw new TypeError("Argument must not be a number");return i(e,t,n)},s.alloc=function(e,t,n){if("number"!=typeof e)throw new TypeError("Argument must be a number");var a=i(e);return void 0!==t?"string"==typeof n?a.fill(t,n):a.fill(t):a.fill(0),a},s.allocUnsafe=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return i(e)},s.allocUnsafeSlow=function(e){if("number"!=typeof e)throw new TypeError("Argument must be a number");return a.SlowBuffer(e)}},90392:function(e,t,n){var a=n(92861).Buffer;function i(e,t){this._block=a.alloc(e),this._finalSize=t,this._blockSize=e,this._len=0}i.prototype.update=function(e,t){"string"==typeof e&&(t=t||"utf8",e=a.from(e,t));for(var n=this._block,i=this._blockSize,r=e.length,s=this._len,o=0;o<r;){for(var c=s%i,h=Math.min(r-o,i-c),l=0;l<h;l++)n[c+l]=e[o+l];o+=h,(s+=h)%i==0&&this._update(n)}return this._len+=r,this},i.prototype.digest=function(e){var t=this._len%this._blockSize;this._block[t]=128,this._block.fill(0,t+1),t>=this._finalSize&&(this._update(this._block),this._block.fill(0));var n=8*this._len;if(n<=4294967295)this._block.writeUInt32BE(n,this._blockSize-4);else{var a=(4294967295&n)>>>0,i=(n-a)/4294967296;this._block.writeUInt32BE(i,this._blockSize-8),this._block.writeUInt32BE(a,this._blockSize-4)}this._update(this._block);var r=this._hash();return e?r.toString(e):r},i.prototype._update=function(){throw new Error("_update must be implemented by subclass")},e.exports=i},62802:function(e,t,n){var a=e.exports=function(e){e=e.toLowerCase();var t=a[e];if(!t)throw new Error(e+" is not supported (we accept pull requests)");return new t};a.sha=n(27816),a.sha1=n(63737),a.sha224=n(26710),a.sha256=n(24107),a.sha384=n(32827),a.sha512=n(82890)},27816:function(e,t,n){var a=n(56698),i=n(90392),r=n(92861).Buffer,s=[1518500249,1859775393,-1894007588,-899497514],o=new Array(80);function c(){this.init(),this._w=o,i.call(this,64,56)}function h(e){return e<<30|e>>>2}function l(e,t,n,a){return 0===e?t&n|~t&a:2===e?t&n|t&a|n&a:t^n^a}a(c,i),c.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},c.prototype._update=function(e){for(var t,n=this._w,a=0|this._a,i=0|this._b,r=0|this._c,o=0|this._d,c=0|this._e,u=0;u<16;++u)n[u]=e.readInt32BE(4*u);for(;u<80;++u)n[u]=n[u-3]^n[u-8]^n[u-14]^n[u-16];for(var p=0;p<80;++p){var d=~~(p/20),m=0|((t=a)<<5|t>>>27)+l(d,i,r,o)+c+n[p]+s[d];c=o,o=r,r=h(i),i=a,a=m}this._a=a+this._a|0,this._b=i+this._b|0,this._c=r+this._c|0,this._d=o+this._d|0,this._e=c+this._e|0},c.prototype._hash=function(){var e=r.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=c},63737:function(e,t,n){var a=n(56698),i=n(90392),r=n(92861).Buffer,s=[1518500249,1859775393,-1894007588,-899497514],o=new Array(80);function c(){this.init(),this._w=o,i.call(this,64,56)}function h(e){return e<<5|e>>>27}function l(e){return e<<30|e>>>2}function u(e,t,n,a){return 0===e?t&n|~t&a:2===e?t&n|t&a|n&a:t^n^a}a(c,i),c.prototype.init=function(){return this._a=1732584193,this._b=4023233417,this._c=2562383102,this._d=271733878,this._e=3285377520,this},c.prototype._update=function(e){for(var t,n=this._w,a=0|this._a,i=0|this._b,r=0|this._c,o=0|this._d,c=0|this._e,p=0;p<16;++p)n[p]=e.readInt32BE(4*p);for(;p<80;++p)n[p]=(t=n[p-3]^n[p-8]^n[p-14]^n[p-16])<<1|t>>>31;for(var d=0;d<80;++d){var m=~~(d/20),y=h(a)+u(m,i,r,o)+c+n[d]+s[m]|0;c=o,o=r,r=l(i),i=a,a=y}this._a=a+this._a|0,this._b=i+this._b|0,this._c=r+this._c|0,this._d=o+this._d|0,this._e=c+this._e|0},c.prototype._hash=function(){var e=r.allocUnsafe(20);return e.writeInt32BE(0|this._a,0),e.writeInt32BE(0|this._b,4),e.writeInt32BE(0|this._c,8),e.writeInt32BE(0|this._d,12),e.writeInt32BE(0|this._e,16),e},e.exports=c},26710:function(e,t,n){var a=n(56698),i=n(24107),r=n(90392),s=n(92861).Buffer,o=new Array(64);function c(){this.init(),this._w=o,r.call(this,64,56)}a(c,i),c.prototype.init=function(){return this._a=3238371032,this._b=914150663,this._c=812702999,this._d=4144912697,this._e=4290775857,this._f=1750603025,this._g=1694076839,this._h=3204075428,this},c.prototype._hash=function(){var e=s.allocUnsafe(28);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e},e.exports=c},24107:function(e,t,n){var a=n(56698),i=n(90392),r=n(92861).Buffer,s=[1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298],o=new Array(64);function c(){this.init(),this._w=o,i.call(this,64,56)}function h(e,t,n){return n^e&(t^n)}function l(e,t,n){return e&t|n&(e|t)}function u(e){return(e>>>2|e<<30)^(e>>>13|e<<19)^(e>>>22|e<<10)}function p(e){return(e>>>6|e<<26)^(e>>>11|e<<21)^(e>>>25|e<<7)}function d(e){return(e>>>7|e<<25)^(e>>>18|e<<14)^e>>>3}a(c,i),c.prototype.init=function(){return this._a=1779033703,this._b=3144134277,this._c=1013904242,this._d=2773480762,this._e=1359893119,this._f=2600822924,this._g=528734635,this._h=1541459225,this},c.prototype._update=function(e){for(var t,n=this._w,a=0|this._a,i=0|this._b,r=0|this._c,o=0|this._d,c=0|this._e,m=0|this._f,y=0|this._g,f=0|this._h,g=0;g<16;++g)n[g]=e.readInt32BE(4*g);for(;g<64;++g)n[g]=0|(((t=n[g-2])>>>17|t<<15)^(t>>>19|t<<13)^t>>>10)+n[g-7]+d(n[g-15])+n[g-16];for(var E=0;E<64;++E){var b=f+p(c)+h(c,m,y)+s[E]+n[E]|0,T=u(a)+l(a,i,r)|0;f=y,y=m,m=c,c=o+b|0,o=r,r=i,i=a,a=b+T|0}this._a=a+this._a|0,this._b=i+this._b|0,this._c=r+this._c|0,this._d=o+this._d|0,this._e=c+this._e|0,this._f=m+this._f|0,this._g=y+this._g|0,this._h=f+this._h|0},c.prototype._hash=function(){var e=r.allocUnsafe(32);return e.writeInt32BE(this._a,0),e.writeInt32BE(this._b,4),e.writeInt32BE(this._c,8),e.writeInt32BE(this._d,12),e.writeInt32BE(this._e,16),e.writeInt32BE(this._f,20),e.writeInt32BE(this._g,24),e.writeInt32BE(this._h,28),e},e.exports=c},32827:function(e,t,n){var a=n(56698),i=n(82890),r=n(90392),s=n(92861).Buffer,o=new Array(160);function c(){this.init(),this._w=o,r.call(this,128,112)}a(c,i),c.prototype.init=function(){return this._ah=3418070365,this._bh=1654270250,this._ch=2438529370,this._dh=355462360,this._eh=1731405415,this._fh=2394180231,this._gh=3675008525,this._hh=1203062813,this._al=3238371032,this._bl=914150663,this._cl=812702999,this._dl=4144912697,this._el=4290775857,this._fl=1750603025,this._gl=1694076839,this._hl=3204075428,this},c.prototype._hash=function(){var e=s.allocUnsafe(48);function t(t,n,a){e.writeInt32BE(t,a),e.writeInt32BE(n,a+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),e},e.exports=c},82890:function(e,t,n){var a=n(56698),i=n(90392),r=n(92861).Buffer,s=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591],o=new Array(160);function c(){this.init(),this._w=o,i.call(this,128,112)}function h(e,t,n){return n^e&(t^n)}function l(e,t,n){return e&t|n&(e|t)}function u(e,t){return(e>>>28|t<<4)^(t>>>2|e<<30)^(t>>>7|e<<25)}function p(e,t){return(e>>>14|t<<18)^(e>>>18|t<<14)^(t>>>9|e<<23)}function d(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^e>>>7}function m(e,t){return(e>>>1|t<<31)^(e>>>8|t<<24)^(e>>>7|t<<25)}function y(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^e>>>6}function f(e,t){return(e>>>19|t<<13)^(t>>>29|e<<3)^(e>>>6|t<<26)}function g(e,t){return e>>>0<t>>>0?1:0}a(c,i),c.prototype.init=function(){return this._ah=1779033703,this._bh=3144134277,this._ch=1013904242,this._dh=2773480762,this._eh=1359893119,this._fh=2600822924,this._gh=528734635,this._hh=1541459225,this._al=4089235720,this._bl=2227873595,this._cl=4271175723,this._dl=1595750129,this._el=2917565137,this._fl=725511199,this._gl=4215389547,this._hl=327033209,this},c.prototype._update=function(e){for(var t=this._w,n=0|this._ah,a=0|this._bh,i=0|this._ch,r=0|this._dh,o=0|this._eh,c=0|this._fh,E=0|this._gh,b=0|this._hh,T=0|this._al,w=0|this._bl,N=0|this._cl,A=0|this._dl,C=0|this._el,M=0|this._fl,v=0|this._gl,R=0|this._hl,S=0;S<32;S+=2)t[S]=e.readInt32BE(4*S),t[S+1]=e.readInt32BE(4*S+4);for(;S<160;S+=2){var O=t[S-30],x=t[S-30+1],P=d(O,x),I=m(x,O),$=y(O=t[S-4],x=t[S-4+1]),q=f(x,O),D=t[S-14],L=t[S-14+1],_=t[S-32],B=t[S-32+1],j=I+L|0,U=P+D+g(j,I)|0;U=(U=U+$+g(j=j+q|0,q)|0)+_+g(j=j+B|0,B)|0,t[S]=U,t[S+1]=j}for(var F=0;F<160;F+=2){U=t[F],j=t[F+1];var k=l(n,a,i),V=l(T,w,N),Q=u(n,T),W=u(T,n),K=p(o,C),H=p(C,o),G=s[F],z=s[F+1],J=h(o,c,E),Y=h(C,M,v),X=R+H|0,Z=b+K+g(X,R)|0;Z=(Z=(Z=Z+J+g(X=X+Y|0,Y)|0)+G+g(X=X+z|0,z)|0)+U+g(X=X+j|0,j)|0;var ee=W+V|0,te=Q+k+g(ee,W)|0;b=E,R=v,E=c,v=M,c=o,M=C,o=r+Z+g(C=A+X|0,A)|0,r=i,A=N,i=a,N=w,a=n,w=T,n=Z+te+g(T=X+ee|0,X)|0}this._al=this._al+T|0,this._bl=this._bl+w|0,this._cl=this._cl+N|0,this._dl=this._dl+A|0,this._el=this._el+C|0,this._fl=this._fl+M|0,this._gl=this._gl+v|0,this._hl=this._hl+R|0,this._ah=this._ah+n+g(this._al,T)|0,this._bh=this._bh+a+g(this._bl,w)|0,this._ch=this._ch+i+g(this._cl,N)|0,this._dh=this._dh+r+g(this._dl,A)|0,this._eh=this._eh+o+g(this._el,C)|0,this._fh=this._fh+c+g(this._fl,M)|0,this._gh=this._gh+E+g(this._gl,v)|0,this._hh=this._hh+b+g(this._hl,R)|0},c.prototype._hash=function(){var e=r.allocUnsafe(64);function t(t,n,a){e.writeInt32BE(t,a),e.writeInt32BE(n,a+4)}return t(this._ah,this._al,0),t(this._bh,this._bl,8),t(this._ch,this._cl,16),t(this._dh,this._dl,24),t(this._eh,this._el,32),t(this._fh,this._fl,40),t(this._gh,this._gl,48),t(this._hh,this._hl,56),e},e.exports=c},72293:function(e,t,n){"use strict";const a=n(67526),i=n(251),r="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("nodejs.util.inspect.custom"):null;t.hp=c,t.IS=50;const s=2147483647;function o(e){if(e>s)throw new RangeError('The value "'+e+'" is invalid for option "size"');const t=new Uint8Array(e);return Object.setPrototypeOf(t,c.prototype),t}function c(e,t,n){if("number"==typeof e){if("string"==typeof t)throw new TypeError('The "string" argument must be of type string. Received type number');return u(e)}return h(e,t,n)}function h(e,t,n){if("string"==typeof e)return function(e,t){if("string"==typeof t&&""!==t||(t="utf8"),!c.isEncoding(t))throw new TypeError("Unknown encoding: "+t);const n=0|y(e,t);let a=o(n);const i=a.write(e,t);return i!==n&&(a=a.slice(0,i)),a}(e,t);if(ArrayBuffer.isView(e))return function(e){if(z(e,Uint8Array)){const t=new Uint8Array(e);return d(t.buffer,t.byteOffset,t.byteLength)}return p(e)}(e);if(null==e)throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e);if(z(e,ArrayBuffer)||e&&z(e.buffer,ArrayBuffer))return d(e,t,n);if("undefined"!=typeof SharedArrayBuffer&&(z(e,SharedArrayBuffer)||e&&z(e.buffer,SharedArrayBuffer)))return d(e,t,n);if("number"==typeof e)throw new TypeError('The "value" argument must not be of type number. Received type number');const a=e.valueOf&&e.valueOf();if(null!=a&&a!==e)return c.from(a,t,n);const i=function(e){if(c.isBuffer(e)){const t=0|m(e.length),n=o(t);return 0===n.length||e.copy(n,0,0,t),n}return void 0!==e.length?"number"!=typeof e.length||J(e.length)?o(0):p(e):"Buffer"===e.type&&Array.isArray(e.data)?p(e.data):void 0}(e);if(i)return i;if("undefined"!=typeof Symbol&&null!=Symbol.toPrimitive&&"function"==typeof e[Symbol.toPrimitive])return c.from(e[Symbol.toPrimitive]("string"),t,n);throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type "+typeof e)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be of type number');if(e<0)throw new RangeError('The value "'+e+'" is invalid for option "size"')}function u(e){return l(e),o(e<0?0:0|m(e))}function p(e){const t=e.length<0?0:0|m(e.length),n=o(t);for(let a=0;a<t;a+=1)n[a]=255&e[a];return n}function d(e,t,n){if(t<0||e.byteLength<t)throw new RangeError('"offset" is outside of buffer bounds');if(e.byteLength<t+(n||0))throw new RangeError('"length" is outside of buffer bounds');let a;return a=void 0===t&&void 0===n?new Uint8Array(e):void 0===n?new Uint8Array(e,t):new Uint8Array(e,t,n),Object.setPrototypeOf(a,c.prototype),a}function m(e){if(e>=s)throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+s.toString(16)+" bytes");return 0|e}function y(e,t){if(c.isBuffer(e))return e.length;if(ArrayBuffer.isView(e)||z(e,ArrayBuffer))return e.byteLength;if("string"!=typeof e)throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type '+typeof e);const n=e.length,a=arguments.length>2&&!0===arguments[2];if(!a&&0===n)return 0;let i=!1;for(;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":return K(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return H(e).length;default:if(i)return a?-1:K(e).length;t=(""+t).toLowerCase(),i=!0}}function f(e,t,n){let a=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return x(this,t,n);case"utf8":case"utf-8":return v(this,t,n);case"ascii":return S(this,t,n);case"latin1":case"binary":return O(this,t,n);case"base64":return M(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return P(this,t,n);default:if(a)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),a=!0}}function g(e,t,n){const a=e[t];e[t]=e[n],e[n]=a}function E(e,t,n,a,i){if(0===e.length)return-1;if("string"==typeof n?(a=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),J(n=+n)&&(n=i?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(i)return-1;n=e.length-1}else if(n<0){if(!i)return-1;n=0}if("string"==typeof t&&(t=c.from(t,a)),c.isBuffer(t))return 0===t.length?-1:b(e,t,n,a,i);if("number"==typeof t)return t&=255,"function"==typeof Uint8Array.prototype.indexOf?i?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):b(e,[t],n,a,i);throw new TypeError("val must be string, number or Buffer")}function b(e,t,n,a,i){let r,s=1,o=e.length,c=t.length;if(void 0!==a&&("ucs2"===(a=String(a).toLowerCase())||"ucs-2"===a||"utf16le"===a||"utf-16le"===a)){if(e.length<2||t.length<2)return-1;s=2,o/=2,c/=2,n/=2}function h(e,t){return 1===s?e[t]:e.readUInt16BE(t*s)}if(i){let a=-1;for(r=n;r<o;r++)if(h(e,r)===h(t,-1===a?0:r-a)){if(-1===a&&(a=r),r-a+1===c)return a*s}else-1!==a&&(r-=r-a),a=-1}else for(n+c>o&&(n=o-c),r=n;r>=0;r--){let n=!0;for(let a=0;a<c;a++)if(h(e,r+a)!==h(t,a)){n=!1;break}if(n)return r}return-1}function T(e,t,n,a){n=Number(n)||0;const i=e.length-n;a?(a=Number(a))>i&&(a=i):a=i;const r=t.length;let s;for(a>r/2&&(a=r/2),s=0;s<a;++s){const a=parseInt(t.substr(2*s,2),16);if(J(a))return s;e[n+s]=a}return s}function w(e,t,n,a){return G(K(t,e.length-n),e,n,a)}function N(e,t,n,a){return G(function(e){const t=[];for(let n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,a)}function A(e,t,n,a){return G(H(t),e,n,a)}function C(e,t,n,a){return G(function(e,t){let n,a,i;const r=[];for(let s=0;s<e.length&&!((t-=2)<0);++s)n=e.charCodeAt(s),a=n>>8,i=n%256,r.push(i),r.push(a);return r}(t,e.length-n),e,n,a)}function M(e,t,n){return 0===t&&n===e.length?a.fromByteArray(e):a.fromByteArray(e.slice(t,n))}function v(e,t,n){n=Math.min(e.length,n);const a=[];let i=t;for(;i<n;){const t=e[i];let r=null,s=t>239?4:t>223?3:t>191?2:1;if(i+s<=n){let n,a,o,c;switch(s){case 1:t<128&&(r=t);break;case 2:n=e[i+1],128==(192&n)&&(c=(31&t)<<6|63&n,c>127&&(r=c));break;case 3:n=e[i+1],a=e[i+2],128==(192&n)&&128==(192&a)&&(c=(15&t)<<12|(63&n)<<6|63&a,c>2047&&(c<55296||c>57343)&&(r=c));break;case 4:n=e[i+1],a=e[i+2],o=e[i+3],128==(192&n)&&128==(192&a)&&128==(192&o)&&(c=(15&t)<<18|(63&n)<<12|(63&a)<<6|63&o,c>65535&&c<1114112&&(r=c))}}null===r?(r=65533,s=1):r>65535&&(r-=65536,a.push(r>>>10&1023|55296),r=56320|1023&r),a.push(r),i+=s}return function(e){const t=e.length;if(t<=R)return String.fromCharCode.apply(String,e);let n="",a=0;for(;a<t;)n+=String.fromCharCode.apply(String,e.slice(a,a+=R));return n}(a)}c.TYPED_ARRAY_SUPPORT=function(){try{const e=new Uint8Array(1),t={foo:function(){return 42}};return Object.setPrototypeOf(t,Uint8Array.prototype),Object.setPrototypeOf(e,t),42===e.foo()}catch(e){return!1}}(),c.TYPED_ARRAY_SUPPORT||"undefined"==typeof console||"function"!=typeof console.error||console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),Object.defineProperty(c.prototype,"parent",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.buffer}}),Object.defineProperty(c.prototype,"offset",{enumerable:!0,get:function(){if(c.isBuffer(this))return this.byteOffset}}),c.poolSize=8192,c.from=function(e,t,n){return h(e,t,n)},Object.setPrototypeOf(c.prototype,Uint8Array.prototype),Object.setPrototypeOf(c,Uint8Array),c.alloc=function(e,t,n){return function(e,t,n){return l(e),e<=0?o(e):void 0!==t?"string"==typeof n?o(e).fill(t,n):o(e).fill(t):o(e)}(e,t,n)},c.allocUnsafe=function(e){return u(e)},c.allocUnsafeSlow=function(e){return u(e)},c.isBuffer=function(e){return null!=e&&!0===e._isBuffer&&e!==c.prototype},c.compare=function(e,t){if(z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),z(t,Uint8Array)&&(t=c.from(t,t.offset,t.byteLength)),!c.isBuffer(e)||!c.isBuffer(t))throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,a=t.length;for(let i=0,r=Math.min(n,a);i<r;++i)if(e[i]!==t[i]){n=e[i],a=t[i];break}return n<a?-1:a<n?1:0},c.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},c.concat=function(e,t){if(!Array.isArray(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return c.alloc(0);let n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;const a=c.allocUnsafe(t);let i=0;for(n=0;n<e.length;++n){let t=e[n];if(z(t,Uint8Array))i+t.length>a.length?(c.isBuffer(t)||(t=c.from(t)),t.copy(a,i)):Uint8Array.prototype.set.call(a,t,i);else{if(!c.isBuffer(t))throw new TypeError('"list" argument must be an Array of Buffers');t.copy(a,i)}i+=t.length}return a},c.byteLength=y,c.prototype._isBuffer=!0,c.prototype.swap16=function(){const e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(let t=0;t<e;t+=2)g(this,t,t+1);return this},c.prototype.swap32=function(){const e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(let t=0;t<e;t+=4)g(this,t,t+3),g(this,t+1,t+2);return this},c.prototype.swap64=function(){const e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(let t=0;t<e;t+=8)g(this,t,t+7),g(this,t+1,t+6),g(this,t+2,t+5),g(this,t+3,t+4);return this},c.prototype.toString=function(){const e=this.length;return 0===e?"":0===arguments.length?v(this,0,e):f.apply(this,arguments)},c.prototype.toLocaleString=c.prototype.toString,c.prototype.equals=function(e){if(!c.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===c.compare(this,e)},c.prototype.inspect=function(){let e="";const n=t.IS;return e=this.toString("hex",0,n).replace(/(.{2})/g,"$1 ").trim(),this.length>n&&(e+=" ... "),"<Buffer "+e+">"},r&&(c.prototype[r]=c.prototype.inspect),c.prototype.compare=function(e,t,n,a,i){if(z(e,Uint8Array)&&(e=c.from(e,e.offset,e.byteLength)),!c.isBuffer(e))throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type '+typeof e);if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===a&&(a=0),void 0===i&&(i=this.length),t<0||n>e.length||a<0||i>this.length)throw new RangeError("out of range index");if(a>=i&&t>=n)return 0;if(a>=i)return-1;if(t>=n)return 1;if(this===e)return 0;let r=(i>>>=0)-(a>>>=0),s=(n>>>=0)-(t>>>=0);const o=Math.min(r,s),h=this.slice(a,i),l=e.slice(t,n);for(let e=0;e<o;++e)if(h[e]!==l[e]){r=h[e],s=l[e];break}return r<s?-1:s<r?1:0},c.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},c.prototype.indexOf=function(e,t,n){return E(this,e,t,n,!0)},c.prototype.lastIndexOf=function(e,t,n){return E(this,e,t,n,!1)},c.prototype.write=function(e,t,n,a){if(void 0===t)a="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)a=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t>>>=0,isFinite(n)?(n>>>=0,void 0===a&&(a="utf8")):(a=n,n=void 0)}const i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");a||(a="utf8");let r=!1;for(;;)switch(a){case"hex":return T(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":case"latin1":case"binary":return N(this,e,t,n);case"base64":return A(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,t,n);default:if(r)throw new TypeError("Unknown encoding: "+a);a=(""+a).toLowerCase(),r=!0}},c.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};const R=4096;function S(e,t,n){let a="";n=Math.min(e.length,n);for(let i=t;i<n;++i)a+=String.fromCharCode(127&e[i]);return a}function O(e,t,n){let a="";n=Math.min(e.length,n);for(let i=t;i<n;++i)a+=String.fromCharCode(e[i]);return a}function x(e,t,n){const a=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>a)&&(n=a);let i="";for(let a=t;a<n;++a)i+=Y[e[a]];return i}function P(e,t,n){const a=e.slice(t,n);let i="";for(let e=0;e<a.length-1;e+=2)i+=String.fromCharCode(a[e]+256*a[e+1]);return i}function I(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function $(e,t,n,a,i,r){if(!c.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>i||t<r)throw new RangeError('"value" argument is out of bounds');if(n+a>e.length)throw new RangeError("Index out of range")}function q(e,t,n,a,i){k(t,a,i,e,n,7);let r=Number(t&BigInt(4294967295));e[n++]=r,r>>=8,e[n++]=r,r>>=8,e[n++]=r,r>>=8,e[n++]=r;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,s>>=8,e[n++]=s,n}function D(e,t,n,a,i){k(t,a,i,e,n,7);let r=Number(t&BigInt(4294967295));e[n+7]=r,r>>=8,e[n+6]=r,r>>=8,e[n+5]=r,r>>=8,e[n+4]=r;let s=Number(t>>BigInt(32)&BigInt(4294967295));return e[n+3]=s,s>>=8,e[n+2]=s,s>>=8,e[n+1]=s,s>>=8,e[n]=s,n+8}function L(e,t,n,a,i,r){if(n+a>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function _(e,t,n,a,r){return t=+t,n>>>=0,r||L(e,0,n,4),i.write(e,t,n,a,23,4),n+4}function B(e,t,n,a,r){return t=+t,n>>>=0,r||L(e,0,n,8),i.write(e,t,n,a,52,8),n+8}c.prototype.slice=function(e,t){const n=this.length;(e=~~e)<0?(e+=n)<0&&(e=0):e>n&&(e=n),(t=void 0===t?n:~~t)<0?(t+=n)<0&&(t=0):t>n&&(t=n),t<e&&(t=e);const a=this.subarray(e,t);return Object.setPrototypeOf(a,c.prototype),a},c.prototype.readUintLE=c.prototype.readUIntLE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);let a=this[e],i=1,r=0;for(;++r<t&&(i*=256);)a+=this[e+r]*i;return a},c.prototype.readUintBE=c.prototype.readUIntBE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);let a=this[e+--t],i=1;for(;t>0&&(i*=256);)a+=this[e+--t]*i;return a},c.prototype.readUint8=c.prototype.readUInt8=function(e,t){return e>>>=0,t||I(e,1,this.length),this[e]},c.prototype.readUint16LE=c.prototype.readUInt16LE=function(e,t){return e>>>=0,t||I(e,2,this.length),this[e]|this[e+1]<<8},c.prototype.readUint16BE=c.prototype.readUInt16BE=function(e,t){return e>>>=0,t||I(e,2,this.length),this[e]<<8|this[e+1]},c.prototype.readUint32LE=c.prototype.readUInt32LE=function(e,t){return e>>>=0,t||I(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},c.prototype.readUint32BE=c.prototype.readUInt32BE=function(e,t){return e>>>=0,t||I(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},c.prototype.readBigUInt64LE=X((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Q(e,this.length-8);const a=t+256*this[++e]+65536*this[++e]+this[++e]*2**24,i=this[++e]+256*this[++e]+65536*this[++e]+n*2**24;return BigInt(a)+(BigInt(i)<<BigInt(32))})),c.prototype.readBigUInt64BE=X((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Q(e,this.length-8);const a=t*2**24+65536*this[++e]+256*this[++e]+this[++e],i=this[++e]*2**24+65536*this[++e]+256*this[++e]+n;return(BigInt(a)<<BigInt(32))+BigInt(i)})),c.prototype.readIntLE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);let a=this[e],i=1,r=0;for(;++r<t&&(i*=256);)a+=this[e+r]*i;return i*=128,a>=i&&(a-=Math.pow(2,8*t)),a},c.prototype.readIntBE=function(e,t,n){e>>>=0,t>>>=0,n||I(e,t,this.length);let a=t,i=1,r=this[e+--a];for(;a>0&&(i*=256);)r+=this[e+--a]*i;return i*=128,r>=i&&(r-=Math.pow(2,8*t)),r},c.prototype.readInt8=function(e,t){return e>>>=0,t||I(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},c.prototype.readInt16LE=function(e,t){e>>>=0,t||I(e,2,this.length);const n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt16BE=function(e,t){e>>>=0,t||I(e,2,this.length);const n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},c.prototype.readInt32LE=function(e,t){return e>>>=0,t||I(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},c.prototype.readInt32BE=function(e,t){return e>>>=0,t||I(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},c.prototype.readBigInt64LE=X((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Q(e,this.length-8);const a=this[e+4]+256*this[e+5]+65536*this[e+6]+(n<<24);return(BigInt(a)<<BigInt(32))+BigInt(t+256*this[++e]+65536*this[++e]+this[++e]*2**24)})),c.prototype.readBigInt64BE=X((function(e){V(e>>>=0,"offset");const t=this[e],n=this[e+7];void 0!==t&&void 0!==n||Q(e,this.length-8);const a=(t<<24)+65536*this[++e]+256*this[++e]+this[++e];return(BigInt(a)<<BigInt(32))+BigInt(this[++e]*2**24+65536*this[++e]+256*this[++e]+n)})),c.prototype.readFloatLE=function(e,t){return e>>>=0,t||I(e,4,this.length),i.read(this,e,!0,23,4)},c.prototype.readFloatBE=function(e,t){return e>>>=0,t||I(e,4,this.length),i.read(this,e,!1,23,4)},c.prototype.readDoubleLE=function(e,t){return e>>>=0,t||I(e,8,this.length),i.read(this,e,!0,52,8)},c.prototype.readDoubleBE=function(e,t){return e>>>=0,t||I(e,8,this.length),i.read(this,e,!1,52,8)},c.prototype.writeUintLE=c.prototype.writeUIntLE=function(e,t,n,a){e=+e,t>>>=0,n>>>=0,a||$(this,e,t,n,Math.pow(2,8*n)-1,0);let i=1,r=0;for(this[t]=255&e;++r<n&&(i*=256);)this[t+r]=e/i&255;return t+n},c.prototype.writeUintBE=c.prototype.writeUIntBE=function(e,t,n,a){e=+e,t>>>=0,n>>>=0,a||$(this,e,t,n,Math.pow(2,8*n)-1,0);let i=n-1,r=1;for(this[t+i]=255&e;--i>=0&&(r*=256);)this[t+i]=e/r&255;return t+n},c.prototype.writeUint8=c.prototype.writeUInt8=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,1,255,0),this[t]=255&e,t+1},c.prototype.writeUint16LE=c.prototype.writeUInt16LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,65535,0),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeUint16BE=c.prototype.writeUInt16BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,65535,0),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeUint32LE=c.prototype.writeUInt32LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e,t+4},c.prototype.writeUint32BE=c.prototype.writeUInt32BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigUInt64LE=X((function(e,t=0){return q(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeBigUInt64BE=X((function(e,t=0){return D(this,e,t,BigInt(0),BigInt("0xffffffffffffffff"))})),c.prototype.writeIntLE=function(e,t,n,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*n-1);$(this,e,t,n,a-1,-a)}let i=0,r=1,s=0;for(this[t]=255&e;++i<n&&(r*=256);)e<0&&0===s&&0!==this[t+i-1]&&(s=1),this[t+i]=(e/r|0)-s&255;return t+n},c.prototype.writeIntBE=function(e,t,n,a){if(e=+e,t>>>=0,!a){const a=Math.pow(2,8*n-1);$(this,e,t,n,a-1,-a)}let i=n-1,r=1,s=0;for(this[t+i]=255&e;--i>=0&&(r*=256);)e<0&&0===s&&0!==this[t+i+1]&&(s=1),this[t+i]=(e/r|0)-s&255;return t+n},c.prototype.writeInt8=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,1,127,-128),e<0&&(e=255+e+1),this[t]=255&e,t+1},c.prototype.writeInt16LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,32767,-32768),this[t]=255&e,this[t+1]=e>>>8,t+2},c.prototype.writeInt16BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=255&e,t+2},c.prototype.writeInt32LE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,2147483647,-2147483648),this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24,t+4},c.prototype.writeInt32BE=function(e,t,n){return e=+e,t>>>=0,n||$(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e,t+4},c.prototype.writeBigInt64LE=X((function(e,t=0){return q(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeBigInt64BE=X((function(e,t=0){return D(this,e,t,-BigInt("0x8000000000000000"),BigInt("0x7fffffffffffffff"))})),c.prototype.writeFloatLE=function(e,t,n){return _(this,e,t,!0,n)},c.prototype.writeFloatBE=function(e,t,n){return _(this,e,t,!1,n)},c.prototype.writeDoubleLE=function(e,t,n){return B(this,e,t,!0,n)},c.prototype.writeDoubleBE=function(e,t,n){return B(this,e,t,!1,n)},c.prototype.copy=function(e,t,n,a){if(!c.isBuffer(e))throw new TypeError("argument should be a Buffer");if(n||(n=0),a||0===a||(a=this.length),t>=e.length&&(t=e.length),t||(t=0),a>0&&a<n&&(a=n),a===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("Index out of range");if(a<0)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),e.length-t<a-n&&(a=e.length-t+n);const i=a-n;return this===e&&"function"==typeof Uint8Array.prototype.copyWithin?this.copyWithin(t,n,a):Uint8Array.prototype.set.call(e,this.subarray(n,a),t),i},c.prototype.fill=function(e,t,n,a){if("string"==typeof e){if("string"==typeof t?(a=t,t=0,n=this.length):"string"==typeof n&&(a=n,n=this.length),void 0!==a&&"string"!=typeof a)throw new TypeError("encoding must be a string");if("string"==typeof a&&!c.isEncoding(a))throw new TypeError("Unknown encoding: "+a);if(1===e.length){const t=e.charCodeAt(0);("utf8"===a&&t<128||"latin1"===a)&&(e=t)}}else"number"==typeof e?e&=255:"boolean"==typeof e&&(e=Number(e));if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;let i;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(i=t;i<n;++i)this[i]=e;else{const r=c.isBuffer(e)?e:c.from(e,a),s=r.length;if(0===s)throw new TypeError('The value "'+e+'" is invalid for argument "value"');for(i=0;i<n-t;++i)this[i+t]=r[i%s]}return this};const j={};function U(e,t,n){j[e]=class extends n{constructor(){super(),Object.defineProperty(this,"message",{value:t.apply(this,arguments),writable:!0,configurable:!0}),this.name=`${this.name} [${e}]`,this.stack,delete this.name}get code(){return e}set code(e){Object.defineProperty(this,"code",{configurable:!0,enumerable:!0,value:e,writable:!0})}toString(){return`${this.name} [${e}]: ${this.message}`}}}function F(e){let t="",n=e.length;const a="-"===e[0]?1:0;for(;n>=a+4;n-=3)t=`_${e.slice(n-3,n)}${t}`;return`${e.slice(0,n)}${t}`}function k(e,t,n,a,i,r){if(e>n||e<t){const a="bigint"==typeof t?"n":"";let i;throw i=r>3?0===t||t===BigInt(0)?`>= 0${a} and < 2${a} ** ${8*(r+1)}${a}`:`>= -(2${a} ** ${8*(r+1)-1}${a}) and < 2 ** ${8*(r+1)-1}${a}`:`>= ${t}${a} and <= ${n}${a}`,new j.ERR_OUT_OF_RANGE("value",i,e)}!function(e,t,n){V(t,"offset"),void 0!==e[t]&&void 0!==e[t+n]||Q(t,e.length-(n+1))}(a,i,r)}function V(e,t){if("number"!=typeof e)throw new j.ERR_INVALID_ARG_TYPE(t,"number",e)}function Q(e,t,n){if(Math.floor(e)!==e)throw V(e,n),new j.ERR_OUT_OF_RANGE(n||"offset","an integer",e);if(t<0)throw new j.ERR_BUFFER_OUT_OF_BOUNDS;throw new j.ERR_OUT_OF_RANGE(n||"offset",`>= ${n?1:0} and <= ${t}`,e)}U("ERR_BUFFER_OUT_OF_BOUNDS",(function(e){return e?`${e} is outside of buffer bounds`:"Attempt to access memory outside buffer bounds"}),RangeError),U("ERR_INVALID_ARG_TYPE",(function(e,t){return`The "${e}" argument must be of type number. Received type ${typeof t}`}),TypeError),U("ERR_OUT_OF_RANGE",(function(e,t,n){let a=`The value of "${e}" is out of range.`,i=n;return Number.isInteger(n)&&Math.abs(n)>2**32?i=F(String(n)):"bigint"==typeof n&&(i=String(n),(n>BigInt(2)**BigInt(32)||n<-(BigInt(2)**BigInt(32)))&&(i=F(i)),i+="n"),a+=` It must be ${t}. Received ${i}`,a}),RangeError);const W=/[^+/0-9A-Za-z-_]/g;function K(e,t){let n;t=t||1/0;const a=e.length;let i=null;const r=[];for(let s=0;s<a;++s){if(n=e.charCodeAt(s),n>55295&&n<57344){if(!i){if(n>56319){(t-=3)>-1&&r.push(239,191,189);continue}if(s+1===a){(t-=3)>-1&&r.push(239,191,189);continue}i=n;continue}if(n<56320){(t-=3)>-1&&r.push(239,191,189),i=n;continue}n=65536+(i-55296<<10|n-56320)}else i&&(t-=3)>-1&&r.push(239,191,189);if(i=null,n<128){if((t-=1)<0)break;r.push(n)}else if(n<2048){if((t-=2)<0)break;r.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;r.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;r.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return r}function H(e){return a.toByteArray(function(e){if((e=(e=e.split("=")[0]).trim().replace(W,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function G(e,t,n,a){let i;for(i=0;i<a&&!(i+n>=t.length||i>=e.length);++i)t[i+n]=e[i];return i}function z(e,t){return e instanceof t||null!=e&&null!=e.constructor&&null!=e.constructor.name&&e.constructor.name===t.name}function J(e){return e!=e}const Y=function(){const e="0123456789abcdef",t=new Array(256);for(let n=0;n<16;++n){const a=16*n;for(let i=0;i<16;++i)t[a+i]=e[n]+e[i]}return t}();function X(e){return"undefined"==typeof BigInt?Z:e}function Z(){throw new Error("BigInt not supported")}},75198:function(e,t,n){"use strict";e.exports=n.p+"assets/Imagen de WhatsApp 2024-06-07 a las 21.48.42_e68d0866.jpg"},58394:function(e,t,n){"use strict";e.exports=n.p+"5376f196978dd8a46a6f.css"},38630:function(e,t,n){var a;!function(e){!function(t){var a="object"==typeof globalThis?globalThis:"object"==typeof n.g?n.g:"object"==typeof self?self:"object"==typeof this?this:function(){try{return Function("return this;")()}catch(e){}}()||function(){try{return(0,eval)("(function() { return this; })()")}catch(e){}}(),i=r(e);function r(e,t){return function(n,a){Object.defineProperty(e,n,{configurable:!0,writable:!0,value:a}),t&&t(n,a)}}void 0!==a.Reflect&&(i=r(a.Reflect,i)),function(e,t){var n=Object.prototype.hasOwnProperty,a="function"==typeof Symbol,i=a&&void 0!==Symbol.toPrimitive?Symbol.toPrimitive:"@@toPrimitive",r=a&&void 0!==Symbol.iterator?Symbol.iterator:"@@iterator",s="function"==typeof Object.create,o={__proto__:[]}instanceof Array,c=!s&&!o,h={create:s?function(){return k(Object.create(null))}:o?function(){return k({__proto__:null})}:function(){return k({})},has:c?function(e,t){return n.call(e,t)}:function(e,t){return t in e},get:c?function(e,t){return n.call(e,t)?e[t]:void 0}:function(e,t){return e[t]}},l=Object.getPrototypeOf(Function),u="function"==typeof Map&&"function"==typeof Map.prototype.entries?Map:function(){var e={},t=[],n=function(){function e(e,t,n){this._index=0,this._keys=e,this._values=t,this._selector=n}return e.prototype["@@iterator"]=function(){return this},e.prototype[r]=function(){return this},e.prototype.next=function(){var e=this._index;if(e>=0&&e<this._keys.length){var n=this._selector(this._keys[e],this._values[e]);return e+1>=this._keys.length?(this._index=-1,this._keys=t,this._values=t):this._index++,{value:n,done:!1}}return{value:void 0,done:!0}},e.prototype.throw=function(e){throw this._index>=0&&(this._index=-1,this._keys=t,this._values=t),e},e.prototype.return=function(e){return this._index>=0&&(this._index=-1,this._keys=t,this._values=t),{value:e,done:!0}},e}();return function(){function t(){this._keys=[],this._values=[],this._cacheKey=e,this._cacheIndex=-2}return Object.defineProperty(t.prototype,"size",{get:function(){return this._keys.length},enumerable:!0,configurable:!0}),t.prototype.has=function(e){return this._find(e,!1)>=0},t.prototype.get=function(e){var t=this._find(e,!1);return t>=0?this._values[t]:void 0},t.prototype.set=function(e,t){var n=this._find(e,!0);return this._values[n]=t,this},t.prototype.delete=function(t){var n=this._find(t,!1);if(n>=0){for(var a=this._keys.length,i=n+1;i<a;i++)this._keys[i-1]=this._keys[i],this._values[i-1]=this._values[i];return this._keys.length--,this._values.length--,q(t,this._cacheKey)&&(this._cacheKey=e,this._cacheIndex=-2),!0}return!1},t.prototype.clear=function(){this._keys.length=0,this._values.length=0,this._cacheKey=e,this._cacheIndex=-2},t.prototype.keys=function(){return new n(this._keys,this._values,a)},t.prototype.values=function(){return new n(this._keys,this._values,i)},t.prototype.entries=function(){return new n(this._keys,this._values,s)},t.prototype["@@iterator"]=function(){return this.entries()},t.prototype[r]=function(){return this.entries()},t.prototype._find=function(e,t){if(!q(this._cacheKey,e)){this._cacheIndex=-1;for(var n=0;n<this._keys.length;n++)if(q(this._keys[n],e)){this._cacheIndex=n;break}}return this._cacheIndex<0&&t&&(this._cacheIndex=this._keys.length,this._keys.push(e),this._values.push(void 0)),this._cacheIndex},t}();function a(e,t){return e}function i(e,t){return t}function s(e,t){return[e,t]}}(),p="function"==typeof Set&&"function"==typeof Set.prototype.entries?Set:function(){function e(){this._map=new u}return Object.defineProperty(e.prototype,"size",{get:function(){return this._map.size},enumerable:!0,configurable:!0}),e.prototype.has=function(e){return this._map.has(e)},e.prototype.add=function(e){return this._map.set(e,e),this},e.prototype.delete=function(e){return this._map.delete(e)},e.prototype.clear=function(){this._map.clear()},e.prototype.keys=function(){return this._map.keys()},e.prototype.values=function(){return this._map.keys()},e.prototype.entries=function(){return this._map.entries()},e.prototype["@@iterator"]=function(){return this.keys()},e.prototype[r]=function(){return this.keys()},e}(),d="function"==typeof WeakMap?WeakMap:function(){var e=16,t=h.create(),a=i();return function(){function e(){this._key=i()}return e.prototype.has=function(e){var t=r(e,!1);return void 0!==t&&h.has(t,this._key)},e.prototype.get=function(e){var t=r(e,!1);return void 0!==t?h.get(t,this._key):void 0},e.prototype.set=function(e,t){return r(e,!0)[this._key]=t,this},e.prototype.delete=function(e){var t=r(e,!1);return void 0!==t&&delete t[this._key]},e.prototype.clear=function(){this._key=i()},e}();function i(){var e;do{e="@@WeakMap@@"+o()}while(h.has(t,e));return t[e]=!0,e}function r(e,t){if(!n.call(e,a)){if(!t)return;Object.defineProperty(e,a,{value:h.create()})}return e[a]}function s(e,t){for(var n=0;n<t;++n)e[n]=255*Math.random()|0;return e}function o(){var t=function(e){if("function"==typeof Uint8Array){var t=new Uint8Array(e);return"undefined"!=typeof crypto?crypto.getRandomValues(t):"undefined"!=typeof msCrypto?msCrypto.getRandomValues(t):s(t,e),t}return s(new Array(e),e)}(e);t[6]=79&t[6]|64,t[8]=191&t[8]|128;for(var n="",a=0;a<e;++a){var i=t[a];4!==a&&6!==a&&8!==a||(n+="-"),i<16&&(n+="0"),n+=i.toString(16).toLowerCase()}return n}}(),m=a?Symbol.for("@reflect-metadata:registry"):void 0,y=function(){var e;return!M(m)&&R(t.Reflect)&&Object.isExtensible(t.Reflect)&&(e=t.Reflect[m]),M(e)&&(e=function(){var e,n,a,i;M(m)||void 0===t.Reflect||m in t.Reflect||"function"!=typeof t.Reflect.defineMetadata||(e=function(e){var t=e.defineMetadata,n=e.hasOwnMetadata,a=e.getOwnMetadata,i=e.getOwnMetadataKeys,r=e.deleteMetadata,s=new d;return{isProviderFor:function(e,t){var n=s.get(e);return!(M(n)||!n.has(t))||!!i(e,t).length&&(M(n)&&(n=new p,s.set(e,n)),n.add(t),!0)},OrdinaryDefineOwnMetadata:t,OrdinaryHasOwnMetadata:n,OrdinaryGetOwnMetadata:a,OrdinaryOwnMetadataKeys:i,OrdinaryDeleteMetadata:r}}(t.Reflect));var r=new d,s={registerProvider:o,getProvider:h,setProvider:y};return s;function o(t){if(!Object.isExtensible(s))throw new Error("Cannot add provider to a frozen registry.");switch(!0){case e===t:break;case M(n):n=t;break;case n===t:break;case M(a):a=t;break;case a===t:break;default:void 0===i&&(i=new p),i.add(t)}}function c(t,r){if(!M(n)){if(n.isProviderFor(t,r))return n;if(!M(a)){if(a.isProviderFor(t,r))return n;if(!M(i))for(var s=L(i);;){var o=B(s);if(!o)return;var c=_(o);if(c.isProviderFor(t,r))return j(s),c}}}if(!M(e)&&e.isProviderFor(t,r))return e}function h(e,t){var n,a=r.get(e);return M(a)||(n=a.get(t)),M(n)?(M(n=c(e,t))||(M(a)&&(a=new u,r.set(e,a)),a.set(t,n)),n):n}function l(e){if(M(e))throw new TypeError;return n===e||a===e||!M(i)&&i.has(e)}function y(e,t,n){if(!l(n))throw new Error("Metadata provider not registered.");var a=h(e,t);if(a!==n){if(!M(a))return!1;var i=r.get(e);M(i)&&(i=new u,r.set(e,i)),i.set(t,n)}return!0}}()),!M(m)&&R(t.Reflect)&&Object.isExtensible(t.Reflect)&&Object.defineProperty(t.Reflect,m,{enumerable:!1,configurable:!1,writable:!1,value:e}),e}(),f=function(e){var t=new d,n={isProviderFor:function(e,n){var a=t.get(e);return!M(a)&&a.has(n)},OrdinaryDefineOwnMetadata:function(e,t,n,i){a(n,i,!0).set(e,t)},OrdinaryHasOwnMetadata:function(e,t,n){var i=a(t,n,!1);return!M(i)&&O(i.has(e))},OrdinaryGetOwnMetadata:function(e,t,n){var i=a(t,n,!1);if(!M(i))return i.get(e)},OrdinaryOwnMetadataKeys:function(e,t){var n=[],i=a(e,t,!1);if(M(i))return n;for(var r=L(i.keys()),s=0;;){var o=B(r);if(!o)return n.length=s,n;var c=_(o);try{n[s]=c}catch(e){try{j(r)}finally{throw e}}s++}},OrdinaryDeleteMetadata:function(e,n,i){var r=a(n,i,!1);if(M(r))return!1;if(!r.delete(e))return!1;if(0===r.size){var s=t.get(n);M(s)||(s.delete(i),0===s.size&&t.delete(s))}return!0}};return y.registerProvider(n),n;function a(a,i,r){var s=t.get(a),o=!1;if(M(s)){if(!r)return;s=new u,t.set(a,s),o=!0}var c=s.get(i);if(M(c)){if(!r)return;if(c=new u,s.set(i,c),!e.setProvider(a,i,n))throw s.delete(i),o&&t.delete(a),new Error("Wrong provider for target.")}return c}}(y);function g(e,t,n){if(E(e,t,n))return!0;var a=U(t);return!v(a)&&g(e,a,n)}function E(e,t,n){var a=F(t,n,!1);return!M(a)&&O(a.OrdinaryHasOwnMetadata(e,t,n))}function b(e,t,n){if(E(e,t,n))return T(e,t,n);var a=U(t);return v(a)?void 0:b(e,a,n)}function T(e,t,n){var a=F(t,n,!1);if(!M(a))return a.OrdinaryGetOwnMetadata(e,t,n)}function w(e,t,n,a){F(n,a,!0).OrdinaryDefineOwnMetadata(e,t,n,a)}function N(e,t){var n=A(e,t),a=U(e);if(null===a)return n;var i=N(a,t);if(i.length<=0)return n;if(n.length<=0)return i;for(var r=new p,s=[],o=0,c=n;o<c.length;o++){var h=c[o];r.has(h)||(r.add(h),s.push(h))}for(var l=0,u=i;l<u.length;l++)h=u[l],r.has(h)||(r.add(h),s.push(h));return s}function A(e,t){var n=F(e,t,!1);return n?n.OrdinaryOwnMetadataKeys(e,t):[]}function C(e){if(null===e)return 1;switch(typeof e){case"undefined":return 0;case"boolean":return 2;case"string":return 3;case"symbol":return 4;case"number":return 5;case"object":return null===e?1:6;default:return 6}}function M(e){return void 0===e}function v(e){return null===e}function R(e){return"object"==typeof e?null!==e:"function"==typeof e}function S(e,t){switch(C(e)){case 0:case 1:case 2:case 3:case 4:case 5:return e}var n=3===t?"string":5===t?"number":"default",a=D(e,i);if(void 0!==a){var r=a.call(e,n);if(R(r))throw new TypeError;return r}return function(e,t){if("string"===t){var n=e.toString;if(I(n)&&!R(i=n.call(e)))return i;if(I(a=e.valueOf)&&!R(i=a.call(e)))return i}else{var a;if(I(a=e.valueOf)&&!R(i=a.call(e)))return i;var i,r=e.toString;if(I(r)&&!R(i=r.call(e)))return i}throw new TypeError}(e,"default"===n?"number":n)}function O(e){return!!e}function x(e){var t=S(e,3);return"symbol"==typeof t?t:function(e){return""+e}(t)}function P(e){return Array.isArray?Array.isArray(e):e instanceof Object?e instanceof Array:"[object Array]"===Object.prototype.toString.call(e)}function I(e){return"function"==typeof e}function $(e){return"function"==typeof e}function q(e,t){return e===t||e!=e&&t!=t}function D(e,t){var n=e[t];if(null!=n){if(!I(n))throw new TypeError;return n}}function L(e){var t=D(e,r);if(!I(t))throw new TypeError;var n=t.call(e);if(!R(n))throw new TypeError;return n}function _(e){return e.value}function B(e){var t=e.next();return!t.done&&t}function j(e){var t=e.return;t&&t.call(e)}function U(e){var t=Object.getPrototypeOf(e);if("function"!=typeof e||e===l)return t;if(t!==l)return t;var n=e.prototype,a=n&&Object.getPrototypeOf(n);if(null==a||a===Object.prototype)return t;var i=a.constructor;return"function"!=typeof i||i===e?t:i}function F(e,t,n){var a=y.getProvider(e,t);if(!M(a))return a;if(n){if(y.setProvider(e,t,f))return f;throw new Error("Illegal state.")}}function k(e){return e.__=void 0,delete e.__,e}e("decorate",(function(e,t,n,a){if(M(n)){if(!P(e))throw new TypeError;if(!$(t))throw new TypeError;return function(e,t){for(var n=e.length-1;n>=0;--n){var a=(0,e[n])(t);if(!M(a)&&!v(a)){if(!$(a))throw new TypeError;t=a}}return t}(e,t)}if(!P(e))throw new TypeError;if(!R(t))throw new TypeError;if(!R(a)&&!M(a)&&!v(a))throw new TypeError;return v(a)&&(a=void 0),function(e,t,n,a){for(var i=e.length-1;i>=0;--i){var r=(0,e[i])(t,n,a);if(!M(r)&&!v(r)){if(!R(r))throw new TypeError;a=r}}return a}(e,t,n=x(n),a)})),e("metadata",(function(e,t){return function(n,a){if(!R(n))throw new TypeError;if(!M(a)&&!function(e){switch(C(e)){case 3:case 4:return!0;default:return!1}}(a))throw new TypeError;w(e,t,n,a)}})),e("defineMetadata",(function(e,t,n,a){if(!R(n))throw new TypeError;return M(a)||(a=x(a)),w(e,t,n,a)})),e("hasMetadata",(function(e,t,n){if(!R(t))throw new TypeError;return M(n)||(n=x(n)),g(e,t,n)})),e("hasOwnMetadata",(function(e,t,n){if(!R(t))throw new TypeError;return M(n)||(n=x(n)),E(e,t,n)})),e("getMetadata",(function(e,t,n){if(!R(t))throw new TypeError;return M(n)||(n=x(n)),b(e,t,n)})),e("getOwnMetadata",(function(e,t,n){if(!R(t))throw new TypeError;return M(n)||(n=x(n)),T(e,t,n)})),e("getMetadataKeys",(function(e,t){if(!R(e))throw new TypeError;return M(t)||(t=x(t)),N(e,t)})),e("getOwnMetadataKeys",(function(e,t){if(!R(e))throw new TypeError;return M(t)||(t=x(t)),A(e,t)})),e("deleteMetadata",(function(e,t,n){if(!R(t))throw new TypeError;if(M(n)||(n=x(n)),!R(t))throw new TypeError;M(n)||(n=x(n));var a=F(t,n,!1);return!M(a)&&a.OrdinaryDeleteMetadata(e,t,n)}))}(i,a),void 0===a.Reflect&&(a.Reflect=e)}()}(a||(a={}))}},t={};function n(a){var i=t[a];if(void 0!==i)return i.exports;var r=t[a]={exports:{}};return e[a].call(r.exports,r,r.exports,n),r.exports}n.m=e,n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},function(){var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var a=t.getElementsByTagName("script");if(a.length)for(var i=a.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=a[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e}(),n.b=document.baseURI||self.location.href,function(){"use strict";n(38630);class e{static getInheritanceTree(e){const t=[e],n=e=>{const a=Object.getPrototypeOf(e);a&&a.name&&(t.push(a),n(a))};return n(e),t}static isInherited(e,t){return e.prototype instanceof t}static filterByTarget(e,t){return t?e.filter((e=>e.target&&-1!==t.indexOf(e.target))):e}}class t{constructor(){this.tables=[],this.trees=[],this.entityRepositories=[],this.transactionEntityManagers=[],this.transactionRepositories=[],this.namingStrategies=[],this.entitySubscribers=[],this.indices=[],this.uniques=[],this.checks=[],this.exclusions=[],this.columns=[],this.generations=[],this.relations=[],this.joinColumns=[],this.joinTables=[],this.entityListeners=[],this.relationCounts=[],this.relationIds=[],this.embeddeds=[],this.inheritances=[],this.discriminatorValues=[]}filterTables(e){return this.filterByTarget(this.tables,e)}filterColumns(e){return this.filterByTargetAndWithoutDuplicateProperties(this.columns,e)}findGenerated(e,t){return this.generations.find((n=>(Array.isArray(e)?-1!==e.indexOf(n.target):n.target===e)&&n.propertyName===t))}findTree(e){return this.trees.find((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterRelations(e){return this.filterByTargetAndWithoutDuplicateRelationProperties(this.relations,e)}filterRelationIds(e){return this.filterByTargetAndWithoutDuplicateProperties(this.relationIds,e)}filterRelationCounts(e){return this.filterByTargetAndWithoutDuplicateProperties(this.relationCounts,e)}filterIndices(e){return this.indices.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterUniques(e){return this.uniques.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterChecks(e){return this.checks.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterExclusions(e){return this.exclusions.filter((t=>Array.isArray(e)?-1!==e.indexOf(t.target):t.target===e))}filterListeners(e){return this.filterByTarget(this.entityListeners,e)}filterEmbeddeds(e){return this.filterByTargetAndWithoutDuplicateEmbeddedProperties(this.embeddeds,e)}findJoinTable(e,t){return this.joinTables.find((n=>n.target===e&&n.propertyName===t))}filterJoinColumns(e,t){return this.joinColumns.filter((n=>n.target===e&&n.propertyName===t))}filterSubscribers(e){return this.filterByTarget(this.entitySubscribers,e)}filterNamingStrategies(e){return this.filterByTarget(this.namingStrategies,e)}filterTransactionEntityManagers(e,t){return this.transactionEntityManagers.filter((n=>(Array.isArray(e)?-1!==e.indexOf(n.target):n.target===e)&&n.methodName===t))}filterTransactionRepository(e,t){return this.transactionRepositories.filter((n=>(Array.isArray(e)?-1!==e.indexOf(n.target):n.target===e)&&n.methodName===t))}filterSingleTableChildren(t){return this.tables.filter((n=>"function"==typeof n.target&&"function"==typeof t&&e.isInherited(n.target,t)&&"entity-child"===n.type))}findInheritanceType(e){return this.inheritances.find((t=>t.target===e))}findDiscriminatorValue(e){return this.discriminatorValues.find((t=>t.target===e))}filterByTarget(e,t){return e.filter((e=>Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t))}filterByTargetAndWithoutDuplicateProperties(e,t){const n=[];return e.forEach((e=>{(Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t)&&(n.find((t=>t.propertyName===e.propertyName))||n.push(e))})),n}filterByTargetAndWithoutDuplicateRelationProperties(e,t){const n=[];return e.forEach((e=>{if(Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t){const a=n.findIndex((t=>t.propertyName===e.propertyName));if(Array.isArray(t)&&-1!==a&&t.indexOf(e.target)<t.indexOf(n[a].target)){const t=Object.create(n[a]);t.type=e.type,n[a]=t}else-1===a&&n.push(e)}})),n}filterByTargetAndWithoutDuplicateEmbeddedProperties(e,t){const n=[];return e.forEach((e=>{(Array.isArray(t)?-1!==t.indexOf(e.target):e.target===t)&&(n.find((t=>t.prefix===e.prefix&&t.propertyName===e.propertyName))||n.push(e))})),n}}var a=n(72293);class i{static getGlobalVariable(){return"undefined"!=typeof window?window:n.g}static load(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: require("${e}").`);return""}static pathNormalize(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.normalize("${e}").`);return""}static pathExtname(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.extname("${e}").`);return""}static pathResolve(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: path.resolve("${e}").`);return""}static fileExist(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.existsSync("${e}").`);return!1}static dotenv(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: dotenv.config({ path: "${e}" }).`)}static getEnvVariable(e){}static readFileSync(e){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.readFileSync("${e}").`);return null}static appendFileSync(e,t){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.appendFileSync("${e}").`)}static writeFile(e,t){if("browser"===this.type)throw new Error(`This option/function is not supported in the browser environment. Failed operation: fs.writeFile("${e}").`);return Promise.reject(null)}static highlightSql(e){return e}static highlightJson(e){return e}static logInfo(e,t){console.info(e+" ",t)}static logError(e,t){console.error(e+" ",t)}static logWarn(e,t){console.warn(e+" ",t)}static log(e){console.log(e)}static warn(e){return e}}i.type="browser","undefined"!=typeof window&&(window.Buffer=a.hp),void 0!==n.g&&(n.g.Buffer=n(72293).hp);class r{static isObject(e){return null!==e&&"object"==typeof e}static isObjectWithName(e){return null!==e&&"object"==typeof e&&void 0!==e.name}static assign(e,...t){for(const n of t)for(const t of Object.getOwnPropertyNames(n))e[t]=n[t]}static mixedListToArray(e){return null!==e&&"object"==typeof e?Object.keys(e).map((t=>e[t])):e}}class s extends Error{get name(){return this.constructor.name}constructor(e){super(e),Object.setPrototypeOf?Object.setPrototypeOf(this,new.target.prototype):this.__proto__=new.target.prototype}}class o extends s{constructor(e){super(`Internal error. Subject ${e.metadata.targetName} must have an identifier to perform operation.`)}}class c extends s{constructor(e){super(`Cannot create a "${e}" connection because connection to the database already established.`)}}class h extends s{constructor(){super("Locking not supported on given driver.")}}class l extends s{constructor(e,t){super();const n=e.primaryColumns.reduce(((e,t,n)=>(t.setEntityValue(e,n+1),e)),{});this.message=`Cannot use given entity id "${t}" because "${e.targetName}" contains multiple primary columns, you must provide object in following form: ${JSON.stringify(n)} as an id.`}}class u extends s{constructor(e){super(`Cannot ${e}, given value must be instance of entity class, instead object literal is given. Or you must specify an entity target to method call.`)}}class p extends s{constructor(){super('Cannot perform update query because update values are not defined. Call "qb.set(...)" method to specify updated values.')}}class d extends s{constructor(e){super(`Tree repositories are not supported in ${e.options.type} driver.`)}}class m extends s{constructor(e){super(`Custom repository ${"function"==typeof e?e.name:e.constructor.name} was not found. Did you forgot to put @EntityRepository decorator on it?`)}}class y extends s{constructor(){super("Transaction is not started yet, start transaction before committing or rolling it back.")}}class f extends s{constructor(){super("Transaction already started for the given connection, commit current transaction before starting a new one.")}}class g{static isMssqlParameter(e){return this.check(e,"MssqlParameter")}static isEntityMetadata(e){return this.check(e,"EntityMetadata")}static isColumnMetadata(e){return this.check(e,"ColumnMetadata")}static isSelectQueryBuilder(e){return this.check(e,"SelectQueryBuilder")}static isInsertQueryBuilder(e){return this.check(e,"InsertQueryBuilder")}static isDeleteQueryBuilder(e){return this.check(e,"DeleteQueryBuilder")}static isUpdateQueryBuilder(e){return this.check(e,"UpdateQueryBuilder")}static isSoftDeleteQueryBuilder(e){return this.check(e,"SoftDeleteQueryBuilder")}static isRelationQueryBuilder(e){return this.check(e,"RelationQueryBuilder")}static isBrackets(e){return this.check(e,"Brackets")||this.check(e,"NotBrackets")}static isNotBrackets(e){return this.check(e,"NotBrackets")}static isSubject(e){return this.check(e,"Subject")}static isRdbmsSchemaBuilder(e){return this.check(e,"RdbmsSchemaBuilder")}static isMongoEntityManager(e){return this.check(e,"MongoEntityManager")}static isSqljsEntityManager(e){return this.check(e,"SqljsEntityManager")}static isEntitySchema(e){return this.check(e,"EntitySchema")}static isBaseEntityConstructor(e){return"function"==typeof e&&"function"==typeof e.hasId&&"function"==typeof e.save&&"function"==typeof e.useDataSource}static isFindOperator(e){return this.check(e,"FindOperator")||this.check(e,"EqualOperator")}static isEqualOperator(e){return this.check(e,"EqualOperator")}static isQuery(e){return this.check(e,"Query")}static isTable(e){return this.check(e,"Table")}static isTableCheck(e){return this.check(e,"TableCheck")}static isTableColumn(e){return this.check(e,"TableColumn")}static isTableExclusion(e){return this.check(e,"TableExclusion")}static isTableForeignKey(e){return this.check(e,"TableForeignKey")}static isTableIndex(e){return this.check(e,"TableIndex")}static isTableUnique(e){return this.check(e,"TableUnique")}static isView(e){return this.check(e,"View")}static isDataSource(e){return this.check(e,"DataSource")}static check(e,t){return"object"==typeof e&&null!==e&&e["@instanceof"]===Symbol.for(t)}}class E extends s{constructor(e,t){super(),this.entityClass=e,this.criteria=t,this.message=`Could not find any entity of type "${this.stringifyTarget(e)}" matching: ${this.stringifyCriteria(t)}`}stringifyTarget(e){return g.isEntitySchema(e)?e.options.name:"function"==typeof e||r.isObject(e)&&"name"in e?e.name:e}stringifyCriteria(e){try{return JSON.stringify(e,null,4)}catch(e){}return""+e}}class b extends s{constructor(e){super(),this.message=`No metadata for "${this.stringifyTarget(e)}" was found.`}stringifyTarget(e){return g.isEntitySchema(e)?e.options.name:"function"==typeof e||r.isObject(e)&&"name"in e?e.name:e}}class T extends s{constructor(e,t){super(`Cannot ${e}, given value must be an entity, instead "${t}" is given.`)}}class w extends s{constructor(e,t,n){super(`The optimistic lock on entity ${e} failed, version ${t} was expected, but is actually ${n}.`)}}class N extends s{constructor(){super("Your database does not support LIMIT on UPDATE statements.")}}class A extends s{constructor(e){super(`Custom entity repository ${"function"==typeof e?e.name:e.constructor.name}  cannot inherit Repository class without entity being set in the @EntityRepository decorator.`)}}class C extends s{constructor(){super("Database connection provided by a query runner was already released, cannot continue to use its querying methods anymore.")}}class M extends s{constructor(e){super(`Cannot attach entity "${e}" to its parent. Please make sure parent is saved in the database before saving children nodes.`)}}class v extends s{constructor(e){super(`Custom repository ${"function"==typeof e?e.name:e.constructor.name} does not have managed entity. Did you forget to specify entity for it @EntityRepository(MyEntity)? `)}}class R extends s{constructor(e){super(`Entity "${e.name}" does not have delete date columns.`)}}class S extends s{constructor(e){super(`Circular relations detected: ${e}. To resolve this issue you need to set nullable: true somewhere in this dependency structure.`)}}class O extends s{constructor(){super("OUTPUT or RETURNING clause only supported by Microsoft SQL Server or PostgreSQL or MariaDB databases.")}}class x extends s{constructor(e){super(`Entity "${e.name}" does not have a primary column. Primary column is required to have in all your entities. Use @PrimaryColumn decorator to add a primary column to your entity.`)}}class P extends s{constructor(e,t){super(e),Object.setPrototypeOf(this,P.prototype),this.message=`Property "${e}" was not found in "${t.targetName}". Make sure your query is correct.`}}class I extends s{constructor(e,t=[]){super(`Wrong driver: "${e}" given. Supported drivers are: ${t.map((e=>`"${e}"`)).join(", ")}.`)}}class $ extends s{constructor(e,t){super(`${e} package has not been found installed. Try to install it: npm install ${t} --save`)}}class q extends s{constructor(e){super(`Entity ${e} does not have version or update date columns.`)}}class D extends s{constructor(){super('Cannot perform insert query because values are not defined. Call "qb.values(...)" method to specify inserted values.')}}class L extends s{constructor(){super("The optimistic lock can be used only with getOne() method.")}}class _ extends s{constructor(e){super(`Driver option (${e}) is not set. Please set it to perform connection to the database.`)}}class B extends s{constructor(e){super(),1===e.length?this.message=`Relation "${e[0]}" was not found; please check if it is correct and really exists in your entity.`:this.message=`Relations ${e.map((e=>`"${e}"`)).join(", ")} were not found; please check if relations are correct and they exist in your entities.`}}class j extends s{constructor(){super("An open transaction is required for pessimistic lock.")}}class U extends s{constructor(e,t,n){super();const a="string"==typeof t?t:t.name;this.message=`Data type "${a}" in "${e.entityMetadata.targetName}.${e.propertyName}" is not supported by "${n}" database.`}}class F extends s{constructor(e){super(`Array initializations are not allowed in entity relations. Please remove array initialization (= []) from "${e.entityMetadata.targetName}#${e.propertyPath}". This is ORM requirement to make relations to work properly. Refer docs for more information.`)}}class k extends s{constructor(e,t,n){if(super(n.toString().replace(/^error: /,"").replace(/^Error: /,"").replace(/^Request/,"")),this.query=e,this.parameters=t,this.driverError=n,n){const{name:e,...t}=n;r.assign(this,{...t})}}}class V extends s{constructor(){super("Entity manager is not using single database connection and cannot be released. Only entity managers created by connection#createEntityManagerWithSingleDatabaseConnection methods have a single database connection and they should be released.")}}class Q extends s{constructor(e){super(`Removed entity "${e.metadata.name}" is also scheduled for update operation. Make sure you are not updating and removing same object (note that update or remove may be executed by cascade operations).`)}}class W extends s{constructor(){super("Query runner already released. Cannot run queries anymore.")}}class K extends s{constructor(){super("RDBMS does not support OFFSET without LIMIT in SELECT statements. You must use limit in conjunction with offset function (or take in conjunction with skip function if you are using pagination).")}}class H extends s{constructor(e){super(`Cannot execute operation on "${e}" connection because connection is not yet established.`)}}class G extends s{constructor(e){super(`Option "${e}" is not set in your connection options, please define "${e}" option in your connection options or ormconfig.json`)}}class z extends s{constructor(e){super(`Migrations ${e.map((e=>`"${e.name}"`)).join(", ")} override the transaction mode, but the global transaction mode is "all"`)}}class J{constructor(e){r.assign(this,e||{})}get target(){return this.metadata.target}get hasMetadata(){return!!this._metadata}set metadata(e){this._metadata=e}get metadata(){if(!this._metadata)throw new s(`Cannot get entity metadata for the given alias "${this.name}"`);return this._metadata}}class Y{static isAliasProperty(e){if("string"!=typeof e||-1===e.indexOf("."))return!1;const[t,n]=e.split(".");return!(!t||!n)&&-1===e.indexOf("(")&&-1===e.indexOf(")")}}var X=n(62802),Z=n.n(X);function ee(e,t=!1){return t&&(e=" "+e),e.replace(/^([A-Z])|[\s-_](\w)/g,(function(e,t,n){return n?n.toUpperCase():t.toLowerCase()}))}function te(e){return e.replace(/([A-Z])([A-Z])([a-z])/g,"$1_$2$3").replace(/([a-z0-9])([A-Z])/g,"$1_$2").toLowerCase()}function ne(e,t={}){const{segmentLength:n=4,separator:a="__",termLength:i=2}=t;return e.split(a).reduce(((e,t)=>{const a=t.replace(/([a-z\xE0-\xFF])([A-Z\xC0-\xDF])/g,"$1 $2").split(" "),r=a.length>1?i:n,s=a.map((e=>e.substr(0,r))).join("");return e.push(s),e}),[]).join(a)}class ae{static isGreaterOrEqual(e,t){const n=ie(e),a=ie(t);return n[0]>a[0]||n[0]===a[0]&&n[1]>a[1]||n[0]===a[0]&&n[1]===a[1]&&n[2]>=a[2]}}function ie(e=""){const t=[0,0,0];return e.split(".").forEach(((e,n)=>t[n]=parseInt(e,10))),t}class re{static isSQLiteFamily(e){return["sqlite","cordova","react-native","nativescript","sqljs","expo","better-sqlite3","capacitor"].includes(e.options.type)}static isMySQLFamily(e){return["mysql","mariadb"].includes(e.options.type)}static isReleaseVersionOrGreater(e,t){return null!=e.version&&ae.isGreaterOrEqual(e.version,t)}static isPostgresFamily(e){return["postgres","aurora-postgres","cockroachdb"].includes(e.options.type)}static buildDriverOptions(e,t){if(e.url){const n=this.parseConnectionUrl(e.url);t&&t.useSid&&n.database&&(n.sid=n.database);for(const e of Object.keys(n))void 0===n[e]&&delete n[e];return Object.assign({},e,n)}return Object.assign({},e)}static buildMongoDBDriverOptions(e,t){if(e.url){const n=this.parseMongoDBConnectionUrl(e.url);t&&t.useSid&&n.database&&(n.sid=n.database);for(const e of Object.keys(n))void 0===n[e]&&delete n[e];return Object.assign({},e,n)}return Object.assign({},e)}static buildAlias({maxAliasLength:e},t,...n){const a=t&&t.joiner?t.joiner:"_";let i=1===n.length?n[0]:n.join(a);if(e&&e>0&&i.length>e){if(t&&!0===t.shorten){const t=ne(i);if(t.length<e)return t}return function(e,t={}){const n=Z()("sha1");n.update(e,"utf8");const a=n.digest("hex");return t.length?a.slice(0,t.length):a}(i,{length:e})}return i}static buildColumnAlias({maxAliasLength:e},t,...n){return"string"==typeof t?(n.unshift(t),t={shorten:!1,joiner:"_"}):t=Object.assign({shorten:!1,joiner:"_"},t),this.buildAlias({maxAliasLength:e},t,...n)}static parseConnectionUrl(e){const t=e.split(":")[0],n=e.indexOf("//"),a=e.substr(n+2),i=a.indexOf("/"),r=-1!==i?a.substr(0,i):a;let s=-1!==i?a.substr(i+1):void 0;s&&-1!==s.indexOf("?")&&(s=s.substr(0,s.indexOf("?")));const o=r.lastIndexOf("@"),c=r.substr(0,o),h=r.substr(o+1);let l=c,u="";const p=c.indexOf(":");-1!==p&&(l=c.substr(0,p),u=c.substr(p+1));const[d,m]=h.split(":");return{type:t,host:d,username:decodeURIComponent(l),password:decodeURIComponent(u),port:m?parseInt(m):void 0,database:s||void 0}}static parseMongoDBConnectionUrl(e){const t=e.split(":")[0],n=e.indexOf("//"),a=e.substr(n+2),i=a.indexOf("/"),r=-1!==i?a.substr(0,i):a;let s,o,c,h,l=-1!==i?a.substr(i+1):void 0,u="",p={};if(l&&-1!==l.indexOf("?")){let e,t;u=l.substr(l.indexOf("?")+1,l.length),u.split("&").forEach((n=>{e=n.split("=")[0],t=n.split("=")[1],p[e]=t})),h=p.replicaSet,l=l.substr(0,l.indexOf("?"))}const d=r.lastIndexOf("@"),m=r.substr(0,d),y=r.substr(d+1);let f=m,g="";const E=m.indexOf(":");-1!==E&&(f=m.substr(0,E),g=m.substr(E+1)),h?c=y:[s,o]=y.split(":");let b={type:t,host:s,hostReplicaSet:c,username:decodeURIComponent(f),password:decodeURIComponent(g),port:o?parseInt(o):void 0,database:l||void 0};for(const[e,t]of Object.entries(p))b[e]=t;return b}}class se{constructor(e,t,n){this.connection=e,this.queryExpressionMap=t,this.isSelectedEvaluated=!1,this.relationEvaluated=!1,n&&r.assign(this,n)}get isMany(){return void 0!==this.isMappingMany?this.isMappingMany:!!this.relation&&(this.relation.isManyToMany||this.relation.isOneToMany)}get isSelected(){if(!this.isSelectedEvaluated){let e=()=>{for(const e of this.queryExpressionMap.selects){if(e.selection===this.alias.name)return!0;if(this.metadata&&this.metadata.columns.find((t=>e.selection===this.alias.name+"."+t.propertyPath)))return!0}return!1};this.isSelectedCache=e(),this.isSelectedEvaluated=!0}return this.isSelectedCache}get tablePath(){return this.metadata?this.metadata.tablePath:this.entityOrProperty}get parentAlias(){if(Y.isAliasProperty(this.entityOrProperty))return this.entityOrProperty.substr(0,this.entityOrProperty.indexOf("."))}get relationPropertyPath(){if(Y.isAliasProperty(this.entityOrProperty))return this.entityOrProperty.substr(this.entityOrProperty.indexOf(".")+1)}get relation(){if(!this.relationEvaluated){let e=()=>{if(!Y.isAliasProperty(this.entityOrProperty))return;const e=this.queryExpressionMap.findAliasByName(this.parentAlias);let t=e.metadata.findRelationWithPropertyPath(this.relationPropertyPath);if(t)return t;if(e.metadata.parentEntityMetadata&&(t=e.metadata.parentEntityMetadata.findRelationWithPropertyPath(this.relationPropertyPath),t))return t;throw new s(`Relation with property path ${this.relationPropertyPath} in entity was not found.`)};this.relationCache=e.bind(this)(),this.relationEvaluated=!0}return this.relationCache}get metadata(){return this.relation?this.relation.inverseEntityMetadata:this.connection.hasMetadata(this.entityOrProperty)?this.connection.getMetadata(this.entityOrProperty):this.mapAsEntity&&this.connection.hasMetadata(this.mapAsEntity)?this.connection.getMetadata(this.mapAsEntity):void 0}get junctionAlias(){if(!this.relation)throw new s("Cannot get junction table for join without relation.");if("string"!=typeof this.entityOrProperty)throw new s("Junction property is not defined.");const e=this.entityOrProperty.substr(0,this.entityOrProperty.indexOf("."));return this.relation.isOwning?re.buildAlias(this.connection.driver,void 0,e,this.alias.name):re.buildAlias(this.connection.driver,void 0,this.alias.name,e)}get mapToPropertyParentAlias(){if(this.mapToProperty)return this.mapToProperty.split(".")[0]}get mapToPropertyPropertyName(){if(this.mapToProperty)return this.mapToProperty.split(".")[1]}}class oe{constructor(e,t){this.queryExpressionMap=e,this.disableMixedMap=!1,r.assign(this,t||{})}get joinInverseSideMetadata(){return this.relation.inverseEntityMetadata}get parentAlias(){if(!Y.isAliasProperty(this.relationName))throw new s("Given value must be a string representation of alias property");return this.relationName.substr(0,this.relationName.indexOf("."))}get relationPropertyPath(){if(!Y.isAliasProperty(this.relationName))throw new s("Given value must be a string representation of alias property");return this.relationName.substr(this.relationName.indexOf(".")+1)}get relation(){if(!Y.isAliasProperty(this.relationName))throw new s("Given value must be a string representation of alias property");const e=this.queryExpressionMap.findAliasByName(this.parentAlias).metadata.findRelationWithPropertyPath(this.relationPropertyPath);if(!e)throw new s(`Relation with property path ${this.relationPropertyPath} in entity was not found.`);return e}get junctionAlias(){const[e,t]=this.relationName.split(".");return e+"_"+t+"_rid"}get junctionMetadata(){return this.relation.junctionEntityMetadata}get mapToPropertyParentAlias(){return this.mapToProperty.substr(0,this.mapToProperty.indexOf("."))}get mapToPropertyPropertyPath(){return this.mapToProperty.substr(this.mapToProperty.indexOf(".")+1)}}class ce{constructor(e,t){this.expressionMap=e,r.assign(this,t||{})}get joinInverseSideMetadata(){return this.relation.inverseEntityMetadata}get parentAlias(){if(!Y.isAliasProperty(this.relationName))throw new s("Given value must be a string representation of alias property");return this.relationName.split(".")[0]}get relationProperty(){if(!Y.isAliasProperty(this.relationName))throw new s("Given value is a string representation of alias property");return this.relationName.split(".")[1]}get junctionAlias(){const[e,t]=this.relationName.split(".");return e+"_"+t+"_rc"}get relation(){if(!Y.isAliasProperty(this.relationName))throw new s("Given value is a string representation of alias property");const[e,t]=this.relationName.split("."),n=this.expressionMap.findAliasByName(e).metadata.findRelationWithPropertyPath(t);if(!n)throw new s(`Relation with property path ${t} in entity was not found.`);return n}get metadata(){if(!Y.isAliasProperty(this.relationName))throw new s("Given value is a string representation of alias property");const e=this.relationName.split(".")[0];return this.expressionMap.findAliasByName(e).metadata}get mapToPropertyPropertyName(){return this.mapToProperty.split(".")[1]}}class he{constructor(e){this.connection=e,this.relationLoadStrategy="join",this.queryEntity=!1,this.aliases=[],this.queryType="select",this.selects=[],this.maxExecutionTime=0,this.selectDistinct=!1,this.selectDistinctOn=[],this.extraReturningColumns=[],this.onConflict="",this.onIgnore=!1,this.joinAttributes=[],this.relationIdAttributes=[],this.relationCountAttributes=[],this.wheres=[],this.havings=[],this.orderBys={},this.groupBys=[],this.withDeleted=!1,this.parameters={},this.disableEscaping=!0,this.enableRelationIdValues=!1,this.extraAppendedAndWhereCondition="",this.subQuery=!1,this.aliasNamePrefixingEnabled=!0,this.options=[],this.insertColumns=[],this.whereEntities=[],this.updateEntity=!0,this.callListeners=!0,this.useTransaction=!1,this.nativeParameters={},this.locallyGenerated={},this.commonTableExpressions=[],e.options.relationLoadStrategy&&(this.relationLoadStrategy=e.options.relationLoadStrategy),this.timeTravel=e.options?.timeTravelQueries||!1}get allOrderBys(){if(!Object.keys(this.orderBys).length&&this.mainAlias.hasMetadata&&-1===this.options.indexOf("disable-global-order")){const e=this.mainAlias.metadata.orderBy||{};return Object.keys(e).reduce(((t,n)=>(t[this.mainAlias.name+"."+n]=e[n],t)),{})}return this.orderBys}setMainAlias(e){return this.mainAlias=e,e}createAlias(e){let t=e.name;!t&&e.tablePath&&(t=e.tablePath),t||"function"!=typeof e.target||(t=e.target.name),t||"string"!=typeof e.target||(t=e.target);const n=new J;return n.type=e.type,t&&(n.name=t),e.metadata&&(n.metadata=e.metadata),e.target&&!n.hasMetadata&&(n.metadata=this.connection.getMetadata(e.target)),e.tablePath&&(n.tablePath=e.tablePath),e.subQuery&&(n.subQuery=e.subQuery),this.aliases.push(n),n}findAliasByName(e){const t=this.aliases.find((t=>t.name===e));if(!t)throw new s(`"${e}" alias was not found. Maybe you forgot to join it?`);return t}findColumnByAliasExpression(e){const[t,n]=e.split(".");return this.findAliasByName(t).metadata.findColumnWithPropertyName(n)}get relationMetadata(){if(!this.mainAlias)throw new s("Entity to work with is not specified!");const e=this.mainAlias.metadata.findRelationWithPropertyPath(this.relationPropertyPath);if(!e)throw new s(`Relation ${this.relationPropertyPath} was not found in entity ${this.mainAlias.name}`);return e}clone(){const e=new he(this.connection);return e.queryType=this.queryType,e.selects=this.selects.map((e=>e)),e.maxExecutionTime=this.maxExecutionTime,e.selectDistinct=this.selectDistinct,e.selectDistinctOn=this.selectDistinctOn,this.aliases.forEach((t=>e.aliases.push(new J(t)))),e.relationLoadStrategy=this.relationLoadStrategy,e.mainAlias=this.mainAlias,e.valuesSet=this.valuesSet,e.returning=this.returning,e.onConflict=this.onConflict,e.onIgnore=this.onIgnore,e.onUpdate=this.onUpdate,e.joinAttributes=this.joinAttributes.map((e=>new se(this.connection,this,e))),e.relationIdAttributes=this.relationIdAttributes.map((e=>new oe(this,e))),e.relationCountAttributes=this.relationCountAttributes.map((e=>new ce(this,e))),e.wheres=this.wheres.map((e=>({...e}))),e.havings=this.havings.map((e=>({...e}))),e.orderBys=Object.assign({},this.orderBys),e.groupBys=this.groupBys.map((e=>e)),e.limit=this.limit,e.offset=this.offset,e.skip=this.skip,e.take=this.take,e.lockMode=this.lockMode,e.onLocked=this.onLocked,e.lockVersion=this.lockVersion,e.lockTables=this.lockTables,e.withDeleted=this.withDeleted,e.parameters=Object.assign({},this.parameters),e.disableEscaping=this.disableEscaping,e.enableRelationIdValues=this.enableRelationIdValues,e.extraAppendedAndWhereCondition=this.extraAppendedAndWhereCondition,e.subQuery=this.subQuery,e.aliasNamePrefixingEnabled=this.aliasNamePrefixingEnabled,e.cache=this.cache,e.cacheId=this.cacheId,e.cacheDuration=this.cacheDuration,e.relationPropertyPath=this.relationPropertyPath,e.of=this.of,e.insertColumns=this.insertColumns,e.whereEntities=this.whereEntities,e.updateEntity=this.updateEntity,e.callListeners=this.callListeners,e.useTransaction=this.useTransaction,e.timeTravel=this.timeTravel,e.nativeParameters=Object.assign({},this.nativeParameters),e.comment=this.comment,e.commonTableExpressions=this.commonTableExpressions.map((e=>({alias:e.alias,queryBuilder:"string"==typeof e.queryBuilder?e.queryBuilder:e.queryBuilder.clone(),options:e.options}))),e}}class le{constructor(e){this["@instanceof"]=Symbol.for("Brackets"),this.whereFactory=e}}class ue{static transformFrom(e,t){return Array.isArray(e)?e.slice().reverse().reduce(((e,t)=>t.from(e)),t):e.from(t)}static transformTo(e,t){return Array.isArray(e)?e.reduce(((e,t)=>t.to(e)),t):e.to(t)}}class pe{constructor(e,t,n=!0,a=!1,i,r){this["@instanceof"]=Symbol.for("FindOperator"),this._type=e,this._value=t,this._useParameter=n,this._multipleParameters=a,this._getSql=i,this._objectLiteralParameters=r}get useParameter(){return g.isFindOperator(this._value)?this._value.useParameter:this._useParameter}get multipleParameters(){return g.isFindOperator(this._value)?this._value.multipleParameters:this._multipleParameters}get type(){return this._type}get value(){return g.isFindOperator(this._value)?this._value.value:this._value}get objectLiteralParameters(){return g.isFindOperator(this._value)?this._value.objectLiteralParameters:this._objectLiteralParameters}get child(){if(g.isFindOperator(this._value))return this._value}get getSql(){return g.isFindOperator(this._value)?this._value.getSql:this._getSql}transformValue(e){this._value instanceof pe?this._value.transformValue(e):this._value=Array.isArray(this._value)&&this._multipleParameters?this._value.map((t=>e&&ue.transformTo(e,t))):ue.transformTo(e,this._value)}}const de=/[.*+\-?^${}()|[\]\\]/g;class me{constructor(e,t){this["@instanceof"]=Symbol.for("QueryBuilder"),this.parameterIndex=0,g.isDataSource(e)?(this.connection=e,this.queryRunner=t,this.expressionMap=new he(this.connection)):(this.connection=e.connection,this.queryRunner=e.queryRunner,this.expressionMap=e.expressionMap.clone())}static registerQueryBuilderClass(e,t){me.queryBuilderRegistry[e]=t}get alias(){if(!this.expressionMap.mainAlias)throw new s("Main alias is not set");return this.expressionMap.mainAlias.name}select(e,t){return this.expressionMap.queryType="select",Array.isArray(e)?this.expressionMap.selects=e.map((e=>({selection:e}))):e&&(this.expressionMap.selects=[{selection:e,aliasName:t}]),g.isSelectQueryBuilder(this)?this:me.queryBuilderRegistry.SelectQueryBuilder(this)}insert(){return this.expressionMap.queryType="insert",g.isInsertQueryBuilder(this)?this:me.queryBuilderRegistry.InsertQueryBuilder(this)}update(e,t){const n=t||e;if("function"==typeof(e=g.isEntitySchema(e)?e.options.name:e)||"string"==typeof e){const t=this.createFromAlias(e);this.expressionMap.setMainAlias(t)}return this.expressionMap.queryType="update",this.expressionMap.valuesSet=n,g.isUpdateQueryBuilder(this)?this:me.queryBuilderRegistry.UpdateQueryBuilder(this)}delete(){return this.expressionMap.queryType="delete",g.isDeleteQueryBuilder(this)?this:me.queryBuilderRegistry.DeleteQueryBuilder(this)}softDelete(){return this.expressionMap.queryType="soft-delete",g.isSoftDeleteQueryBuilder(this)?this:me.queryBuilderRegistry.SoftDeleteQueryBuilder(this)}restore(){return this.expressionMap.queryType="restore",g.isSoftDeleteQueryBuilder(this)?this:me.queryBuilderRegistry.SoftDeleteQueryBuilder(this)}relation(e,t){const n=2===arguments.length?e:void 0,a=2===arguments.length?t:e;if(this.expressionMap.queryType="relation",this.expressionMap.relationPropertyPath=a,n){const e=this.createFromAlias(n);this.expressionMap.setMainAlias(e)}return g.isRelationQueryBuilder(this)?this:me.queryBuilderRegistry.RelationQueryBuilder(this)}hasRelation(e,t){const n=this.connection.getMetadata(e);return(Array.isArray(t)?t:[t]).every((e=>!!n.findRelationWithPropertyPath(e)))}hasParameter(e){return this.parentQueryBuilder?.hasParameter(e)||e in this.expressionMap.parameters}setParameter(e,t){if("function"==typeof t)throw new s(`Function parameter isn't supported in the parameters. Please check "${e}" parameter.`);if(!e.match(/^([A-Za-z0-9_.]+)$/))throw new s("QueryBuilder parameter keys may only contain numbers, letters, underscores, or periods.");return this.parentQueryBuilder&&this.parentQueryBuilder.setParameter(e,t),this.expressionMap.parameters[e]=t,this}setParameters(e){for(const[t,n]of Object.entries(e))this.setParameter(t,n);return this}createParameter(e){let t;do{t="orm_param_"+this.parameterIndex++}while(this.hasParameter(t));return this.setParameter(t,e),`:${t}`}setNativeParameters(e){return this.parentQueryBuilder&&this.parentQueryBuilder.setNativeParameters(e),Object.keys(e).forEach((t=>{this.expressionMap.nativeParameters[t]=e[t]})),this}getParameters(){const e=Object.assign({},this.expressionMap.parameters);if(this.expressionMap.mainAlias&&this.expressionMap.mainAlias.hasMetadata){const t=this.expressionMap.mainAlias.metadata;if(t.discriminatorColumn&&t.parentEntityMetadata){const n=t.childEntityMetadatas.filter((e=>e.discriminatorColumn)).map((e=>e.discriminatorValue));n.push(t.discriminatorValue),e.discriminatorColumnValues=n}}return e}printSql(){const[e,t]=this.getQueryAndParameters();return this.connection.logger.logQuery(e,t),this}getSql(){return this.getQueryAndParameters()[0]}getQueryAndParameters(){const e=this.getQuery(),t=this.getParameters();return this.connection.driver.escapeQueryWithParameters(e,t,this.expressionMap.nativeParameters)}async execute(){const[e,t]=this.getQueryAndParameters(),n=this.obtainQueryRunner();try{return await n.query(e,t)}finally{n!==this.queryRunner&&await n.release()}}createQueryBuilder(e){return new this.constructor(this.connection,e??this.queryRunner)}clone(){return new this.constructor(this)}comment(e){return this.expressionMap.comment=e,this}disableEscaping(){return this.expressionMap.disableEscaping=!1,this}escape(e){return this.expressionMap.disableEscaping?this.connection.driver.escape(e):e}setQueryRunner(e){return this.queryRunner=e,this}callListeners(e){return this.expressionMap.callListeners=e,this}useTransaction(e){return this.expressionMap.useTransaction=e,this}addCommonTableExpression(e,t,n){return this.expressionMap.commonTableExpressions.push({queryBuilder:e,alias:t,options:n||{}}),this}getTableName(e){return e.split(".").map((e=>""===e?e:this.escape(e))).join(".")}getMainTableName(){if(!this.expressionMap.mainAlias)throw new s('Entity where values should be inserted is not specified. Call "qb.into(entity)" method to specify it.');return this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata.tablePath:this.expressionMap.mainAlias.tablePath}createFromAlias(e,t){if(this.connection.hasMetadata(e)){const n=this.connection.getMetadata(e);return this.expressionMap.createAlias({type:"from",name:t,metadata:this.connection.getMetadata(e),tablePath:n.tablePath})}{if("string"==typeof e){const n="("===e.substr(0,1)&&")"===e.substr(-1);return this.expressionMap.createAlias({type:"from",name:t,tablePath:n?void 0:e,subQuery:n?e:void 0})}const n=e(this.subQuery());this.setParameters(n.getParameters());const a=n.getQuery();return this.expressionMap.createAlias({type:"from",name:t,subQuery:a})}}replacePropertyNames(e){return e}replacePropertyNamesForTheWholeQuery(e){const t={};for(const e of this.expressionMap.aliases){if(!e.hasMetadata)continue;const n=this.expressionMap.aliasNamePrefixingEnabled&&e.name?`${e.name}.`:"";t[n]||(t[n]={});for(const a of e.metadata.relations)a.joinColumns.length>0&&(t[n][a.propertyPath]=a.joinColumns[0].databaseName);for(const a of e.metadata.relations){const e=[...a.joinColumns,...a.inverseJoinColumns];for(const i of e){const e=`${a.propertyPath}.${i.referencedColumn.propertyPath}`;t[n][e]=i.databaseName}}for(const a of e.metadata.columns)t[n][a.databaseName]=a.databaseName;for(const a of e.metadata.columns)t[n][a.propertyName]=a.databaseName;for(const a of e.metadata.columns)t[n][a.propertyPath]=a.databaseName}const n=Object.keys(t),a=n.map((e=>e.replace(de,"\\$&"))).join("|");return n.length>0&&(e=e.replace(new RegExp("([ =(]|^.{0})"+(a?"("+a+")":"")+"([^ =(),]+)(?=[ =),]|.{0}$)","gm"),((...e)=>{let n,i,r;if(a){if(n=e[0],i=e[1],r=e[3],t[e[2]][r])return`${i}${this.escape(e[2].substring(0,e[2].length-1))}.${this.escape(t[e[2]][r])}`}else if(n=e[0],i=e[1],r=e[2],t[""][r])return`${i}${this.escape(t[""][r])}`;return n}))),e}createComment(){return this.expressionMap.comment?`/* ${this.expressionMap.comment.replace(/\*\//g,"")} */ `:""}createTimeTravelQuery(){return"select"===this.expressionMap.queryType&&this.expressionMap.timeTravel?` AS OF SYSTEM TIME ${this.expressionMap.timeTravel}`:""}createWhereExpression(){const e=[],t=this.createWhereClausesExpression(this.expressionMap.wheres);if(t.length>0&&"1=1"!==t&&e.push(this.replacePropertyNames(t)),this.expressionMap.mainAlias.hasMetadata){const t=this.expressionMap.mainAlias.metadata;if("select"===this.expressionMap.queryType&&!this.expressionMap.withDeleted&&t.deleteDateColumn){const n=this.expressionMap.aliasNamePrefixingEnabled?this.expressionMap.mainAlias.name+"."+t.deleteDateColumn.propertyName:t.deleteDateColumn.propertyName,a=`${this.replacePropertyNames(n)} IS NULL`;e.push(a)}if(t.discriminatorColumn&&t.parentEntityMetadata){const n=this.expressionMap.aliasNamePrefixingEnabled?this.expressionMap.mainAlias.name+"."+t.discriminatorColumn.databaseName:t.discriminatorColumn.databaseName,a=`${this.replacePropertyNames(n)} IN (:...discriminatorColumnValues)`;e.push(a)}}if(this.expressionMap.extraAppendedAndWhereCondition){const t=this.replacePropertyNames(this.expressionMap.extraAppendedAndWhereCondition);e.push(t)}let n="";return n+=this.createTimeTravelQuery(),e.length?1===e.length?n+=` WHERE ${e[0]}`:n+=` WHERE ( ${e.join(" ) AND ( ")} )`:n+="",n}createReturningExpression(e){const t=this.getReturningColumns(),n=this.connection.driver;if("string"!=typeof this.expressionMap.returning&&this.expressionMap.extraReturningColumns.length>0&&n.isReturningSqlSupported(e)&&t.push(...this.expressionMap.extraReturningColumns.filter((e=>-1===t.indexOf(e)))),t.length){let e=t.map((e=>{const t=this.escape(e.databaseName);return"mssql"===n.options.type?"insert"===this.expressionMap.queryType||"update"===this.expressionMap.queryType||"soft-delete"===this.expressionMap.queryType||"restore"===this.expressionMap.queryType?"INSERTED."+t:this.escape(this.getMainTableName())+"."+t:t})).join(", ");return"oracle"===n.options.type&&(e+=" INTO "+t.map((e=>this.createParameter({type:n.columnTypeToNativeParameter(e.type),dir:n.oracle.BIND_OUT}))).join(", ")),"mssql"===n.options.type&&("insert"!==this.expressionMap.queryType&&"update"!==this.expressionMap.queryType||(e+=" INTO @OutputTable")),e}return"string"==typeof this.expressionMap.returning?this.expressionMap.returning:""}getReturningColumns(){const e=[];return Array.isArray(this.expressionMap.returning)&&this.expressionMap.returning.forEach((t=>{this.expressionMap.mainAlias.hasMetadata&&e.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(t))})),e}createWhereClausesExpression(e){return e.map(((e,t)=>{const n=this.createWhereConditionExpression(e.condition);switch(e.type){case"and":return(t>0?"AND ":"")+`${this.connection.options.isolateWhereStatements?"(":""}${n}${this.connection.options.isolateWhereStatements?")":""}`;case"or":return(t>0?"OR ":"")+`${this.connection.options.isolateWhereStatements?"(":""}${n}${this.connection.options.isolateWhereStatements?")":""}`}return n})).join(" ").trim()}createWhereConditionExpression(e,t=!1){if("string"==typeof e)return e;if(Array.isArray(e))return 0===e.length?"1=1":1!==e.length||t?"("+this.createWhereClausesExpression(e)+")":this.createWhereClausesExpression(e);const{driver:n}=this.connection;switch(e.operator){case"lessThan":return`${e.parameters[0]} < ${e.parameters[1]}`;case"lessThanOrEqual":return`${e.parameters[0]} <= ${e.parameters[1]}`;case"arrayContains":return`${e.parameters[0]} @> ${e.parameters[1]}`;case"jsonContains":return`${e.parameters[0]} ::jsonb @> ${e.parameters[1]}`;case"arrayContainedBy":return`${e.parameters[0]} <@ ${e.parameters[1]}`;case"arrayOverlap":return`${e.parameters[0]} && ${e.parameters[1]}`;case"moreThan":return`${e.parameters[0]} > ${e.parameters[1]}`;case"moreThanOrEqual":return`${e.parameters[0]} >= ${e.parameters[1]}`;case"notEqual":return`${e.parameters[0]} != ${e.parameters[1]}`;case"equal":return`${e.parameters[0]} = ${e.parameters[1]}`;case"ilike":return"postgres"===n.options.type||"cockroachdb"===n.options.type?`${e.parameters[0]} ILIKE ${e.parameters[1]}`:`UPPER(${e.parameters[0]}) LIKE UPPER(${e.parameters[1]})`;case"like":return`${e.parameters[0]} LIKE ${e.parameters[1]}`;case"between":return`${e.parameters[0]} BETWEEN ${e.parameters[1]} AND ${e.parameters[2]}`;case"in":return e.parameters.length<=1?"0=1":`${e.parameters[0]} IN (${e.parameters.slice(1).join(", ")})`;case"any":return"cockroachdb"===n.options.type?`${e.parameters[0]}::STRING = ANY(${e.parameters[1]}::STRING[])`:`${e.parameters[0]} = ANY(${e.parameters[1]})`;case"isNull":return`${e.parameters[0]} IS NULL`;case"not":return`NOT(${this.createWhereConditionExpression(e.condition)})`;case"brackets":return`${this.createWhereConditionExpression(e.condition,!0)}`;case"and":return"("+e.parameters.join(" AND ")+")";case"or":return"("+e.parameters.join(" OR ")+")"}throw new TypeError(`Unsupported FindOperator ${pe.constructor.name}`)}createCteExpression(){if(!this.hasCommonTableExpressions())return"";const e=this.connection.driver.cteCapabilities.requiresRecursiveHint;return"WITH "+this.expressionMap.commonTableExpressions.map((t=>{const n="string"==typeof t.queryBuilder?t.queryBuilder:t.queryBuilder.getQuery();if("string"!=typeof t.queryBuilder){if(t.queryBuilder.hasCommonTableExpressions())throw new s(`Nested CTEs aren't supported (CTE: ${t.alias})`);if(!this.connection.driver.cteCapabilities.writable&&!g.isSelectQueryBuilder(t.queryBuilder))throw new s(`Only select queries are supported in CTEs in ${this.connection.options.type} (CTE: ${t.alias})`);this.setParameters(t.queryBuilder.getParameters())}let a=this.escape(t.alias);if(t.options.columnNames){const e=t.options.columnNames.map((e=>this.escape(e)));if(g.isSelectQueryBuilder(t.queryBuilder)&&t.queryBuilder.expressionMap.selects.length&&t.options.columnNames.length!==t.queryBuilder.expressionMap.selects.length)throw new s(`cte.options.columnNames length (${t.options.columnNames.length}) doesn't match subquery select list length ${t.queryBuilder.expressionMap.selects.length} (CTE: ${t.alias})`);a+=`(${e.join(", ")})`}const i=t.options.recursive&&e?"RECURSIVE":"";let r="";return this.connection.driver.cteCapabilities.materializedHint&&void 0!==t.options.materialized&&(r=t.options.materialized?"MATERIALIZED":"NOT MATERIALIZED"),[i,a,"AS",r,`(${n})`].filter(Boolean).join(" ")})).join(", ")+" "}getWhereInIdsCondition(e){const t=this.expressionMap.mainAlias.metadata,n=(Array.isArray(e)?e:[e]).map((e=>t.ensureEntityIdMap(e)));if(!t.hasMultiplePrimaryKeys){const e=t.primaryColumns[0];if(!e.transformer&&!e.relationMetadata&&!e.embeddedMetadata)return{[e.propertyName]:(a=n.map((t=>e.getEntityValue(t,!1))),new pe("in",a,!0,!0))}}var a;return new le((e=>{for(const t of n)e.orWhere(new le((e=>e.where(t))))}))}getExistsCondition(e){const t=e.clone().orderBy().groupBy().offset(void 0).limit(void 0).skip(void 0).take(void 0).select("1").setOption("disable-global-order");return[`EXISTS (${t.getQuery()})`,t.getParameters()]}findColumnsForPropertyPath(e){let t=this.expressionMap.mainAlias;const n=[],a=e.split(".");for(;a.length>1;){const e=a[0];if(!t?.hasMetadata)break;if(t.metadata.hasEmbeddedWithPropertyPath(e))a.unshift(`${a.shift()}.${a.shift()}`);else{if(!t.metadata.hasRelationWithPropertyPath(e))break;{const i=this.expressionMap.joinAttributes.find((t=>t.relationPropertyPath===e));if(!i?.alias){const t=n.length>0?`${n.join(".")}.${e}`:e;throw new Error(`Cannot find alias for relation at ${t}`)}t=i.alias,n.push(...e.split(".")),a.shift()}}}if(!t)throw new Error(`Cannot find alias for property ${e}`);const i=a.join("."),r=t.metadata.findColumnsWithPropertyPath(i);if(!r.length)throw new P(e,t.metadata);return[t,n,r]}createPropertyPath(e,t,n=""){const a=[];for(const i of Object.keys(t)){const r=n?`${n}.${i}`:i;if(null===t[i]||"object"!=typeof t[i]||g.isFindOperator(t[i]))a.push(r);else if(e.hasEmbeddedWithPropertyPath(r)){const n=this.createPropertyPath(e,t[i],r);a.push(...n)}else if(e.hasRelationWithPropertyPath(r)){const n=e.findRelationWithPropertyPath(r);if("one-to-one"===n.relationType||"many-to-one"===n.relationType){const e=n.joinColumns.map((e=>e.referencedColumn)).filter((e=>!!e));if(e.length>0&&e.every((e=>e.getEntityValue(t[i],!1)))){a.push(r);continue}}if("one-to-many"===n.relationType||"many-to-many"===n.relationType)throw new Error(`Cannot query across ${n.relationType} for property ${r}`);const s=n.inverseEntityMetadata.primaryColumns;if(s.length>0&&s.every((e=>e.getEntityValue(t[i],!1)))){const e=s.map((e=>`${r}.${e.propertyPath}`));a.push(...e);continue}const o=this.createPropertyPath(n.inverseEntityMetadata,t[i]).map((e=>`${r}.${e}`));a.push(...o)}else a.push(r)}return a}*getPredicates(e){if(this.expressionMap.mainAlias.hasMetadata){const t=this.createPropertyPath(this.expressionMap.mainAlias.metadata,e);for(const n of t){const[t,a,i]=this.findColumnsForPropertyPath(n);for(const n of i){let i=e;for(const e of a){if(!i||!(e in i)){i={};break}i=i[e]}const r=this.expressionMap.aliasNamePrefixingEnabled?`${t.name}.${n.propertyPath}`:n.propertyPath,s=n.getEntityValue(i,!0);yield[r,s]}}}else for(const t of Object.keys(e)){const n=e[t],a=this.expressionMap.aliasNamePrefixingEnabled?`${this.alias}.${t}`:t;yield[a,n]}}getWherePredicateCondition(e,t){if(g.isFindOperator(t)){let n=[];if(t.useParameter)if(t.objectLiteralParameters)this.setParameters(t.objectLiteralParameters);else if(t.multipleParameters)for(const e of t.value)n.push(this.createParameter(e));else n.push(this.createParameter(t.value));if("raw"===t.type)return t.getSql?t.getSql(e):{operator:"equal",parameters:[e,t.value]};if("not"===t.type)return t.child?{operator:t.type,condition:this.getWherePredicateCondition(e,t.child)}:{operator:"notEqual",parameters:[e,...n]};if("and"===t.type){const n=t.value;return{operator:t.type,parameters:n.map((t=>this.createWhereConditionExpression(this.getWherePredicateCondition(e,t))))}}if("or"===t.type){const n=t.value;return{operator:t.type,parameters:n.map((t=>this.createWhereConditionExpression(this.getWherePredicateCondition(e,t))))}}return{operator:t.type,parameters:[e,...n]}}return{operator:"equal",parameters:[e,this.createParameter(t)]}}getWhereCondition(e){if("string"==typeof e)return e;if(g.isBrackets(e)){const t=this.createQueryBuilder();return t.parentQueryBuilder=this,t.expressionMap.mainAlias=this.expressionMap.mainAlias,t.expressionMap.aliasNamePrefixingEnabled=this.expressionMap.aliasNamePrefixingEnabled,t.expressionMap.parameters=this.expressionMap.parameters,t.expressionMap.nativeParameters=this.expressionMap.nativeParameters,t.expressionMap.wheres=[],e.whereFactory(t),{operator:g.isNotBrackets(e)?"not":"brackets",condition:t.expressionMap.wheres}}if("function"==typeof e)return e(this);const t=Array.isArray(e)?e:[e],n=[];for(const e of t){const t=[];for(const[n,a]of this.getPredicates(e))t.push({type:"and",condition:this.getWherePredicateCondition(n,a)});n.push({type:"or",condition:t})}return 1===n.length?n[0].condition:n}obtainQueryRunner(){return this.queryRunner||this.connection.createQueryRunner()}hasCommonTableExpressions(){return this.expressionMap.commonTableExpressions.length>0}}me.queryBuilderRegistry={};class ye{static from(e){const t=new this;return t.raw=e.records,t.affected=e.affected,t}}class fe extends me{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("DeleteQueryBuilder"),this.expressionMap.aliasNamePrefixingEnabled=!1}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createDeleteExpression(),this.replacePropertyNamesForTheWholeQuery(e.trim())}async execute(){const[e,t]=this.getQueryAndParameters(),n=this.obtainQueryRunner();let a=!1;try{!0===this.expressionMap.useTransaction&&!1===n.isTransactionActive&&(await n.startTransaction(),a=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await n.broadcaster.broadcast("BeforeRemove",this.expressionMap.mainAlias.metadata);const i=await n.query(e,t,!0),r=ye.from(i);return!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await n.broadcaster.broadcast("AfterRemove",this.expressionMap.mainAlias.metadata),a&&await n.commitTransaction(),r}catch(e){if(a)try{await n.rollbackTransaction()}catch(e){}throw e}finally{n!==this.queryRunner&&await n.release()}}from(e,t){e=g.isEntitySchema(e)?e.options.name:e;const n=this.createFromAlias(e,t);return this.expressionMap.setMainAlias(n),this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("delete"))throw new O;return this.expressionMap.returning=e,this}createDeleteExpression(){const e=this.getTableName(this.getMainTableName()),t=this.createWhereExpression(),n=this.createReturningExpression("delete");return""===n?`DELETE FROM ${e}${t}`:"mssql"===this.connection.driver.options.type?`DELETE FROM ${e} OUTPUT ${n}${t}`:`DELETE FROM ${e}${t} RETURNING ${n}`}}var ge={randomUUID:"undefined"!=typeof crypto&&crypto.randomUUID&&crypto.randomUUID.bind(crypto)};let Ee;const be=new Uint8Array(16);function Te(){if(!Ee&&(Ee="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Ee))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Ee(be)}const we=[];for(let e=0;e<256;++e)we.push((e+256).toString(16).slice(1));var Ne=function(e,t,n){if(ge.randomUUID&&!t&&!e)return ge.randomUUID();const a=(e=e||{}).random||(e.rng||Te)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,t){n=n||0;for(let e=0;e<16;++e)t[n+e]=a[e];return t}return function(e,t=0){return we[e[t+0]]+we[e[t+1]]+we[e[t+2]]+we[e[t+3]]+"-"+we[e[t+4]]+we[e[t+5]]+"-"+we[e[t+6]]+we[e[t+7]]+"-"+we[e[t+8]]+we[e[t+9]]+"-"+we[e[t+10]]+we[e[t+11]]+we[e[t+12]]+we[e[t+13]]+we[e[t+14]]+we[e[t+15]]}(a)};class Ae{constructor(){this.count=0,this.promises=[]}async wait(){return this.promises.length>0&&await Promise.all(this.promises),this}}class Ce{constructor(){this.identifiers=[],this.generatedMaps=[]}static from(e){const t=new this;return t.raw=e.raw,t}}class Me{constructor(e,t){this.queryRunner=e,this.expressionMap=t}async update(e,t){const n=this.expressionMap.mainAlias.metadata;await Promise.all(t.map((async(t,a)=>{if(this.queryRunner.connection.driver.isReturningSqlSupported("update")){"oracle"===this.queryRunner.connection.driver.options.type&&Array.isArray(e.raw)&&this.expressionMap.extraReturningColumns.length>0&&(e.raw=e.raw.reduce(((e,t,n)=>(e[this.expressionMap.extraReturningColumns[n].databaseName]=t[0],e)),{}));const i=Array.isArray(e.raw)?e.raw[a]:e.raw,r=this.queryRunner.connection.driver.createGeneratedMap(n,i);r&&(this.queryRunner.manager.merge(n.target,t,r),e.generatedMaps.push(r))}else{const a=this.expressionMap.extraReturningColumns;if(a.length>0){const i=this.expressionMap.mainAlias.metadata.getEntityIdMap(t);if(!i)throw new s("Cannot update entity because entity id is not set in the entity.");const r=await this.queryRunner.manager.createQueryBuilder().select(n.primaryColumns.map((e=>n.targetName+"."+e.propertyPath))).addSelect(a.map((e=>n.targetName+"."+e.propertyPath))).from(n.target,n.targetName).where(i).withDeleted().setOption("create-pojo").getOne();r&&(this.queryRunner.manager.merge(n.target,t,r),e.generatedMaps.push(r))}}})))}async insert(e,t){const n=this.expressionMap.mainAlias.metadata;let a=n.getInsertionReturningColumns();const i=this.queryRunner.connection.driver.isReturningSqlSupported("insert");a=a.filter((e=>!e.isGenerated||!0===i));const r=t.map(((a,i)=>{"oracle"===this.queryRunner.connection.driver.options.type&&Array.isArray(e.raw)&&this.expressionMap.extraReturningColumns.length>0&&(e.raw=e.raw.reduce(((e,t,n)=>(e[this.expressionMap.extraReturningColumns[n].databaseName]=t[0],e)),{}));const r=Array.isArray(e.raw)?e.raw[i]:e.raw,s=this.queryRunner.connection.driver.createGeneratedMap(n,r,i,t.length)||{};return i in this.expressionMap.locallyGenerated&&this.queryRunner.manager.merge(n.target,s,this.expressionMap.locallyGenerated[i]),this.queryRunner.manager.merge(n.target,a,s),s}));if(a.length>0&&!this.queryRunner.connection.driver.isReturningSqlSupported("insert")){const e=t.map((e=>{const t=n.getEntityIdMap(e);if(!t)throw new s("Cannot update entity because entity id is not set in the entity.");return t})),i=await this.queryRunner.manager.createQueryBuilder().select(n.primaryColumns.map((e=>n.targetName+"."+e.propertyPath))).addSelect(a.map((e=>n.targetName+"."+e.propertyPath))).from(n.target,n.targetName).where(e).setOption("create-pojo").getMany();t.forEach(((e,t)=>{this.queryRunner.manager.merge(n.target,r[t],i[t]),this.queryRunner.manager.merge(n.target,e,i[t])}))}t.forEach(((t,a)=>{const i=n.getEntityIdMap(t);e.identifiers.push(i),e.generatedMaps.push(r[a])}))}getUpdationReturningColumns(){return this.expressionMap.mainAlias.metadata.columns.filter((e=>void 0!==e.asExpression||e.isUpdateDate||e.isVersion))}getSoftDeletionReturningColumns(){return this.expressionMap.mainAlias.metadata.columns.filter((e=>void 0!==e.asExpression||e.isUpdateDate||e.isVersion||e.isDeleteDate))}}class ve extends me{constructor(){super(...arguments),this["@instanceof"]=Symbol.for("InsertQueryBuilder")}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createInsertExpression(),this.replacePropertyNamesForTheWholeQuery(e.trim())}async execute(){const e=this.getValueSets();if(0===e.length)return new Ce;const t=this.obtainQueryRunner();let n=!1;try{if(!0===this.expressionMap.useTransaction&&!1===t.isTransactionActive&&(await t.startTransaction(),n=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata){const n=new Ae;e.forEach((e=>{t.broadcaster.broadcastBeforeInsertEvent(n,this.expressionMap.mainAlias.metadata,e)})),await n.wait()}let a=null,i=null;const r=new Me(t,this.expressionMap),s=[];if(Array.isArray(this.expressionMap.returning)&&this.expressionMap.mainAlias.hasMetadata)for(const e of this.expressionMap.returning)s.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(e));!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&(e.length>1&&"oracle"===this.connection.driver.options.type||(this.expressionMap.extraReturningColumns=this.expressionMap.mainAlias.metadata.getInsertionReturningColumns()),s.push(...this.expressionMap.extraReturningColumns.filter((e=>!s.includes(e))))),s.length>0&&"mssql"===this.connection.driver.options.type&&(a=this.connection.driver.buildTableVariableDeclaration("@OutputTable",s),i="SELECT * FROM @OutputTable");const[o,c]=this.getQueryAndParameters(),h=[a,o,i].filter((e=>null!=e)).join(";\n\n"),l=await t.query(h,c,!0),u=Ce.from(l);if(!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&await r.insert(u,e),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata){const n=new Ae;e.forEach((e=>{t.broadcaster.broadcastAfterInsertEvent(n,this.expressionMap.mainAlias.metadata,e)})),await n.wait()}return n&&await t.commitTransaction(),u}catch(e){if(n)try{await t.rollbackTransaction()}catch(e){}throw e}finally{t!==this.queryRunner&&await t.release()}}into(e,t){e=g.isEntitySchema(e)?e.options.name:e;const n=this.createFromAlias(e);return this.expressionMap.setMainAlias(n),this.expressionMap.insertColumns=t||[],this}values(e){return this.expressionMap.valuesSet=e,this}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("insert"))throw new O;return this.expressionMap.returning=e,this}updateEntity(e){return this.expressionMap.updateEntity=e,this}onConflict(e){return this.expressionMap.onConflict=e,this}orIgnore(e=!0){return this.expressionMap.onIgnore=!!e,this}orUpdate(e,t,n){return Array.isArray(e)?(this.expressionMap.onUpdate={overwrite:e,conflict:t,skipUpdateIfNoValuesChanged:n?.skipUpdateIfNoValuesChanged,indexPredicate:n?.indexPredicate,upsertType:n?.upsertType},this):(this.expressionMap.onUpdate={conflict:e?.conflict_target,columns:e?.columns,overwrite:e?.overwrite,skipUpdateIfNoValuesChanged:n?.skipUpdateIfNoValuesChanged,upsertType:n?.upsertType},this)}createInsertExpression(){const e=this.getTableName(this.getMainTableName()),t=this.createValuesExpression(),n="oracle"===this.connection.driver.options.type&&this.getValueSets().length>1?null:this.createReturningExpression("insert"),a=this.createColumnNamesExpression();let i="INSERT ";if("primary-key"===this.expressionMap.onUpdate?.upsertType&&(i="UPSERT "),(re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type)&&(i+=this.expressionMap.onIgnore?" IGNORE ":""),i+=`INTO ${e}`,this.alias!==this.getMainTableName()&&re.isPostgresFamily(this.connection.driver)&&(i+=` AS "${this.alias}"`),a?i+=`(${a})`:t||!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||(i+="()"),n&&"mssql"===this.connection.driver.options.type&&(i+=` OUTPUT ${n}`),t?("oracle"===this.connection.driver.options.type||"sap"===this.connection.driver.options.type)&&this.getValueSets().length>1?i+=` ${t}`:i+=` VALUES ${t}`:re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type?i+=" VALUES ()":i+=" DEFAULT VALUES","primary-key"!==this.expressionMap.onUpdate?.upsertType)if(this.connection.driver.supportedUpsertTypes.includes("on-conflict-do-update")){if(this.expressionMap.onIgnore)i+=" ON CONFLICT DO NOTHING ";else if(this.expressionMap.onConflict)i+=` ON CONFLICT ${this.expressionMap.onConflict} `;else if(this.expressionMap.onUpdate){const{overwrite:t,columns:n,conflict:a,skipUpdateIfNoValuesChanged:r,indexPredicate:o}=this.expressionMap.onUpdate;let c="ON CONFLICT";if(Array.isArray(a)){if(c+=` ( ${a.map((e=>this.escape(e))).join(", ")} )`,o&&!re.isPostgresFamily(this.connection.driver))throw new s("indexPredicate option is not supported by the current database driver");o&&re.isPostgresFamily(this.connection.driver)&&(c+=` WHERE ( ${o} )`)}else a&&(c+=` ON CONSTRAINT ${this.escape(a)}`);const h=[];Array.isArray(t)?h.push(...t.map((e=>`${this.escape(e)} = EXCLUDED.${this.escape(e)}`))):n&&h.push(...n.map((e=>`${this.escape(e)} = :${e}`))),h.length>0&&(i+=` ${c} DO UPDATE SET `,h.push(...this.expressionMap.mainAlias.metadata.columns.filter((e=>e.isUpdateDate&&!t?.includes(e.databaseName)&&!("oracle"===this.connection.driver.options.type&&this.getValueSets().length>1||re.isSQLiteFamily(this.connection.driver)||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type))).map((e=>`${this.escape(e.databaseName)} = DEFAULT`))),i+=h.join(", "),i+=" "),Array.isArray(t)&&r&&re.isPostgresFamily(this.connection.driver)&&(i+=" WHERE (",i+=t.map((t=>`${e}.${this.escape(t)} IS DISTINCT FROM EXCLUDED.${this.escape(t)}`)).join(" OR "),i+=") ")}}else if(this.connection.driver.supportedUpsertTypes.includes("on-duplicate-key-update")){if(this.expressionMap.onUpdate){const{overwrite:e,columns:t}=this.expressionMap.onUpdate;Array.isArray(e)?(i+=" ON DUPLICATE KEY UPDATE ",i+=e.map((e=>`${this.escape(e)} = VALUES(${this.escape(e)})`)).join(", "),i+=" "):Array.isArray(t)&&(i+=" ON DUPLICATE KEY UPDATE ",i+=t.map((e=>`${this.escape(e)} = :${e}`)).join(", "),i+=" ")}}else if(this.expressionMap.onUpdate)throw new s("onUpdate is not supported by the current database driver");return n&&(re.isPostgresFamily(this.connection.driver)||"oracle"===this.connection.driver.options.type||"cockroachdb"===this.connection.driver.options.type||re.isMySQLFamily(this.connection.driver))&&(i+=` RETURNING ${n}`),"mssql"===this.connection.driver.options.type&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.mainAlias.metadata.columns.filter((e=>this.expressionMap.insertColumns.length>0?-1!==this.expressionMap.insertColumns.indexOf(e.propertyPath):e.isInsert)).some((e=>this.isOverridingAutoIncrementBehavior(e)))&&(i=`SET IDENTITY_INSERT ${e} ON; ${i}; SET IDENTITY_INSERT ${e} OFF`),i}getInsertedColumns(){return this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata.columns.filter((e=>this.expressionMap.insertColumns.length?-1!==this.expressionMap.insertColumns.indexOf(e.propertyPath):!!e.isInsert&&!!(!e.isGenerated||"increment"!==e.generationStrategy||"spanner"===this.connection.driver.options.type||"oracle"===this.connection.driver.options.type||re.isSQLiteFamily(this.connection.driver)||re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"mssql"===this.connection.driver.options.type&&this.isOverridingAutoIncrementBehavior(e)))):[]}createColumnNamesExpression(){const e=this.getInsertedColumns();if(e.length>0)return e.map((e=>this.escape(e.databaseName))).join(", ");if(!this.expressionMap.mainAlias.hasMetadata&&!this.expressionMap.insertColumns.length){const e=this.getValueSets();if(1===e.length)return Object.keys(e[0]).map((e=>this.escape(e))).join(", ")}return this.expressionMap.insertColumns.map((e=>this.escape(e))).join(", ")}createValuesExpression(){const e=this.getValueSets(),t=this.getInsertedColumns();if(t.length>0){let n="";return e.forEach(((a,i)=>{t.forEach(((r,s)=>{0===s&&("oracle"===this.connection.driver.options.type&&e.length>1||"sap"===this.connection.driver.options.type&&e.length>1?n+=" SELECT ":n+="(");let o=r.getEntityValue(a);if("function"!=typeof o&&(o=this.connection.driver.preparePersistentValue(o,r)),r.isVersion&&void 0===o)n+="1";else if(r.isDiscriminator)n+=this.createParameter(this.expressionMap.mainAlias.metadata.discriminatorValue);else if(r.isGenerated&&"uuid"===r.generationStrategy&&!this.connection.driver.isUUIDGenerationSupported()&&void 0===o)o=Ne(),n+=this.createParameter(o),i in this.expressionMap.locallyGenerated||(this.expressionMap.locallyGenerated[i]={}),r.setEntityValue(this.expressionMap.locallyGenerated[i],o);else if(void 0===o)"oracle"===this.connection.driver.options.type&&e.length>1||re.isSQLiteFamily(this.connection.driver)||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?void 0!==r.default&&null!==r.default?n+=this.connection.driver.normalizeDefault(r):n+="NULL":n+="DEFAULT";else if(null===o&&"spanner"===this.connection.driver.options.type)n+="NULL";else if("function"==typeof o)n+=o();else{"mssql"===this.connection.driver.options.type&&(o=this.connection.driver.parametrizeValue(r,o));const e=this.createParameter(o);if(!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||-1===this.connection.driver.spatialTypes.indexOf(r.type))re.isPostgresFamily(this.connection.driver)&&-1!==this.connection.driver.spatialTypes.indexOf(r.type)?null!=r.srid?n+=`ST_SetSRID(ST_GeomFromGeoJSON(${e}), ${r.srid})::${r.type}`:n+=`ST_GeomFromGeoJSON(${e})::${r.type}`:"mssql"===this.connection.driver.options.type&&-1!==this.connection.driver.spatialTypes.indexOf(r.type)?n+=r.type+"::STGeomFromText("+e+", "+(r.srid||"0")+")":n+=e;else{const t=this.connection.driver.options.legacySpatialSupport?"GeomFromText":"ST_GeomFromText";null!=r.srid?n+=`${t}(${e}, ${r.srid})`:n+=`${t}(${e})`}}s===t.length-1?i===e.length-1?"oracle"===this.connection.driver.options.type&&e.length>1?n+=" FROM DUAL ":"sap"===this.connection.driver.options.type&&e.length>1?n+=" FROM dummy ":n+=")":"oracle"===this.connection.driver.options.type&&e.length>1?n+=" FROM DUAL UNION ALL ":"sap"===this.connection.driver.options.type&&e.length>1?n+=" FROM dummy UNION ALL ":n+="), ":n+=", "}))})),"()"===n?"":n}{let t="";return e.forEach(((n,a)=>{Object.keys(n).forEach(((i,r)=>{0===r&&(t+="(");const s=n[i];"function"==typeof s?t+=s():void 0===s?"oracle"===this.connection.driver.options.type&&e.length>1||re.isSQLiteFamily(this.connection.driver)||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?t+="NULL":t+="DEFAULT":null===s&&"spanner"===this.connection.driver.options.type||(t+=this.createParameter(s)),r===Object.keys(n).length-1?a===e.length-1?t+=")":t+="), ":t+=", "}))})),"()"===t?"":t}}getValueSets(){if(Array.isArray(this.expressionMap.valuesSet))return this.expressionMap.valuesSet;if(r.isObject(this.expressionMap.valuesSet))return[this.expressionMap.valuesSet];throw new D}isOverridingAutoIncrementBehavior(e){return e.isPrimary&&e.isGenerated&&"increment"===e.generationStrategy&&this.getValueSets().some((t=>void 0!==e.getEntityValue(t)&&null!==e.getEntityValue(t)))}}class Re{constructor(e,t){this.queryBuilder=e,this.expressionMap=t}async update(e){const t=this.expressionMap.relationMetadata;if(t.isManyToOne||t.isOneToOneOwner){const n=t.joinColumns.reduce(((t,n)=>{const a=r.isObject(e)?n.referencedColumn.getEntityValue(e):e;return n.setEntityValue(t,a),t}),{});if(!this.expressionMap.of||Array.isArray(this.expressionMap.of)&&!this.expressionMap.of.length)return;await this.queryBuilder.createQueryBuilder().update(t.entityMetadata.target).set(n).whereInIds(this.expressionMap.of).execute()}else if((t.isOneToOneNotOwner||t.isOneToMany)&&null===e){const e={};t.inverseRelation.joinColumns.forEach((t=>{e[t.propertyName]=null}));const n=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],a={},i=[];n.forEach(((e,n)=>{t.inverseRelation.joinColumns.map(((t,s)=>{const o="joinColumn_"+n+"_"+s;a[o]=r.isObject(e)?t.referencedColumn.getEntityValue(e):e,i.push(`${t.propertyPath} = :${o}`)}))}));const s=i.map((e=>"("+e+")")).join(" OR ");if(!s)return;await this.queryBuilder.createQueryBuilder().update(t.inverseEntityMetadata.target).set(e).where(s).setParameters(a).execute()}else if(t.isOneToOneNotOwner||t.isOneToMany){if(Array.isArray(this.expressionMap.of))throw new s("You cannot update relations of multiple entities with the same related object. Provide a single entity into .of method.");const n=this.expressionMap.of,a=t.inverseRelation.joinColumns.reduce(((e,t)=>{const a=r.isObject(n)?t.referencedColumn.getEntityValue(n):n;return t.setEntityValue(e,a),e}),{});if(!e||Array.isArray(e)&&!e.length)return;await this.queryBuilder.createQueryBuilder().update(t.inverseEntityMetadata.target).set(a).whereInIds(e).execute()}else{const n=t.junctionEntityMetadata,a=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],i=Array.isArray(e)?e:[e],s=t.isManyToManyOwner?a:i,o=t.isManyToManyOwner?i:a,c=[];if(s.forEach((e=>{o.forEach((t=>{const a={};n.ownerColumns.forEach((t=>{a[t.databaseName]=r.isObject(e)?t.referencedColumn.getEntityValue(e):e})),n.inverseColumns.forEach((e=>{a[e.databaseName]=r.isObject(t)?e.referencedColumn.getEntityValue(t):t})),c.push(a)}))})),!c.length)return;"oracle"===this.queryBuilder.connection.driver.options.type||"sap"===this.queryBuilder.connection.driver.options.type?await Promise.all(c.map((e=>this.queryBuilder.createQueryBuilder().insert().into(n.tableName).values(e).execute()))):await this.queryBuilder.createQueryBuilder().insert().into(n.tableName).values(c).execute()}}}class Se{constructor(e,t){this.queryBuilder=e,this.expressionMap=t}async remove(e){const t=this.expressionMap.relationMetadata;if(t.isOneToMany){const n=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],a=Array.isArray(e)?e:[e],i={};t.inverseRelation.joinColumns.forEach((e=>{i[e.propertyName]=null}));const s={},o=[];n.forEach(((e,n)=>{o.push(...a.map(((a,i)=>[...t.inverseRelation.joinColumns.map(((t,a)=>{const o="joinColumn_"+n+"_"+i+"_"+a;return s[o]=r.isObject(e)?t.referencedColumn.getEntityValue(e):e,`${t.propertyPath} = :${o}`})),...t.inverseRelation.entityMetadata.primaryColumns.map(((e,t)=>{const n="primaryColumn_"+i+"_"+i+"_"+t;return s[n]=r.isObject(a)?e.getEntityValue(a):a,`${e.propertyPath} = :${n}`}))].join(" AND "))))}));const c=o.map((e=>"("+e+")")).join(" OR ");if(!c)return;await this.queryBuilder.createQueryBuilder().update(t.inverseEntityMetadata.target).set(i).where(c).setParameters(s).execute()}else{const n=t.junctionEntityMetadata,a=Array.isArray(this.expressionMap.of)?this.expressionMap.of:[this.expressionMap.of],i=Array.isArray(e)?e:[e],s=t.isManyToManyOwner?a:i,o=t.isManyToManyOwner?i:a,c={},h=[];s.forEach(((e,t)=>{h.push(...o.map(((a,i)=>[...n.ownerColumns.map(((n,a)=>{const s="firstValue_"+t+"_"+i+"_"+a;return c[s]=r.isObject(e)?n.referencedColumn.getEntityValue(e):e,`${n.databaseName} = :${s}`})),...n.inverseColumns.map(((e,n)=>{const s="secondValue_"+t+"_"+i+"_"+n;return c[s]=r.isObject(a)?e.referencedColumn.getEntityValue(a):a,`${e.databaseName} = :${s}`}))].join(" AND "))))}));const l=h.map((e=>"("+e+")")).join(" OR ");await this.queryBuilder.createQueryBuilder().delete().from(n.tableName).where(l).setParameters(c).execute()}}}class Oe extends me{constructor(){super(...arguments),this["@instanceof"]=Symbol.for("RelationQueryBuilder")}getQuery(){return""}of(e){return this.expressionMap.of=e,this}async set(e){const t=this.expressionMap.relationMetadata;if(!this.expressionMap.of)throw new s("Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.");if(t.isManyToMany||t.isOneToMany)throw new s(`Set operation is only supported for many-to-one and one-to-one relations. However given "${t.propertyPath}" has ${t.relationType} relation. Use .add() method instead.`);if(t.joinColumns&&t.joinColumns.length>1&&(!r.isObject(e)||Object.keys(e).length<t.joinColumns.length))throw new s('Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: "...", lastName: "..." })');return new Re(this,this.expressionMap).update(e)}async add(e){if(Array.isArray(e)&&0===e.length)return;const t=this.expressionMap.relationMetadata;if(!this.expressionMap.of)throw new s("Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.");if(t.isManyToOne||t.isOneToOne)throw new s(`Add operation is only supported for many-to-many and one-to-many relations. However given "${t.propertyPath}" has ${t.relationType} relation. Use .set() method instead.`);if(t.joinColumns&&t.joinColumns.length>1&&(!r.isObject(e)||Object.keys(e).length<t.joinColumns.length))throw new s('Value to be set into the relation must be a map of relation ids, for example: .set({ firstName: "...", lastName: "..." })');return new Re(this,this.expressionMap).update(e)}async remove(e){if(Array.isArray(e)&&0===e.length)return;const t=this.expressionMap.relationMetadata;if(!this.expressionMap.of)throw new s("Entity whose relation needs to be set is not set. Use .of method to define whose relation you want to set.");if(t.isManyToOne||t.isOneToOne)throw new s(`Add operation is only supported for many-to-many and one-to-many relations. However given "${t.propertyPath}" has ${t.relationType} relation. Use .set(null) method instead.`);return new Se(this,this.expressionMap).remove(e)}async addAndRemove(e,t){await this.remove(t),await this.add(e)}async loadOne(){return this.loadMany().then((e=>e[0]))}async loadMany(){let e=this.expressionMap.of;if(!r.isObject(e)){const t=this.expressionMap.mainAlias.metadata;if(t.hasMultiplePrimaryKeys)throw new s("Cannot load entity because only one primary key was specified, however entity contains multiple primary keys");e=t.primaryColumns[0].createValueMap(e)}return this.connection.relationLoader.load(this.expressionMap.relationMetadata,e,this.queryRunner)}}class xe{static chunk(e,t){return Array.from(Array(Math.ceil(e.length/t)),((n,a)=>e.slice(a*t,a*t+t)))}static splitClassesAndStrings(e){return[e.filter((e=>"string"!=typeof e)),e.filter((e=>"string"==typeof e))]}static groupBy(e,t){return e.reduce(((e,n)=>{const a=t(n);let i=e.find((e=>e.id===a));return i||(i={id:a,items:[]},e.push(i)),i.items.push(n),e}),[])}static uniq(e,t){return e.reduce(((e,n)=>{let a=!1;if("function"==typeof t){const i=t(n);a=!!e.find((e=>t(e)===i))}else a="string"==typeof t?!!e.find((e=>e[t]===n[t])):-1!==e.indexOf(n);return a||e.push(n),e}),[])}static isPlainObject(e){return null!=e&&(!e.constructor||e.constructor===Object)}static mergeArrayKey(e,t,n,a){a.has(n)?e[t]=a.get(n):n instanceof Promise||(this.isPlainObject(n)||Array.isArray(n)?(e[t]||(e[t]=Array.isArray(n)?[]:{}),a.set(n,e[t]),this.merge(e[t],n,a),a.delete(n)):e[t]=n)}static mergeObjectKey(e,t,n,a){a.has(n)?Object.assign(e,{[t]:a.get(n)}):n instanceof Promise||(this.isPlainObject(n)||Array.isArray(n)?(e[t]||Object.assign(e,{[t]:Array.isArray(n)?[]:{}}),a.set(n,e[t]),this.merge(e[t],n,a),a.delete(n)):Object.assign(e,{[t]:n}))}static merge(e,t,n=new Map){if(this.isPlainObject(e)&&this.isPlainObject(t))for(const a of Object.keys(t))"__proto__"!==a&&this.mergeObjectKey(e,a,t[a],n);if(Array.isArray(e)&&Array.isArray(t))for(let a=0;a<t.length;a++)this.mergeArrayKey(e,a,t[a],n)}static mergeDeep(e,...t){if(!t.length)return e;for(const n of t)xe.merge(e,n);return e}static deepCompare(...e){let t,n,a,i;if(arguments.length<1)return!0;for(t=1,n=arguments.length;t<n;t++)if(a=[],i=[],!this.compare2Objects(a,i,arguments[0],arguments[t]))return!1;return!0}static deepValue(e,t){const n=t.split(".");for(let t=0,a=n.length;t<a;t++)e=e[n[t]];return e}static replaceEmptyObjectsWithBooleans(e){for(let t in e)e[t]&&"object"==typeof e[t]&&(0===Object.keys(e[t]).length?e[t]=!0:this.replaceEmptyObjectsWithBooleans(e[t]))}static propertyPathsToTruthyObject(e){let t={};for(let n of e){const e=n.split(".");if(!e.length)continue;t[e[0]]&&!0!==t[e[0]]||(t[e[0]]={});let a=t[e[0]];for(let[t,n]of e.entries())0!==t&&(a[n]?a=a[n]:t===e.length-1?(a[n]={},a=null):(a[n]={},a=a[n]))}return this.replaceEmptyObjectsWithBooleans(t),t}static compareIds(e,t){return null!=e&&null!=t&&(("string"==typeof e.id&&"string"==typeof t.id||"number"==typeof e.id&&"number"==typeof t.id)&&1===Object.keys(e).length&&1===Object.keys(t).length?e.id===t.id:xe.deepCompare(e,t))}static toBoolean(e){return"boolean"==typeof e?e:"string"==typeof e?"true"===e||"1"===e:"number"==typeof e&&e>0}static zipObject(e,t){return e.reduce(((e,n,a)=>(e[n]=t[a],e)),{})}static isArraysEqual(e,t){return e.length===t.length&&e.every((e=>-1!==t.indexOf(e)))}static areMutuallyExclusive(...e){return!e.some((t=>{const n=e.filter((e=>e!==t));return t.some((e=>n.some((t=>t.includes(e)))))}))}static parseSqlCheckExpression(e,t){const n=e.match(new RegExp(`"${t}" varchar CHECK\\s*\\(\\s*"${t}"\\s+IN\\s*`));if(n&&n.index){const t=e.substring(n.index+n[0].length);let a="",i="";const r=[];for(let e=0;e<t.length;e++){const n=t[e];switch(n){case",":""==a?(r.push(i),i=""):i+=n;break;case"'":a==n?t[e+1]===n?(i+=n,e+=1):a="":a=n;break;case")":if(""==a)return r.push(i),r;i+=n;break;default:""!=a&&(i+=n)}}}}static compare2Objects(e,t,n,a){let i;if(Number.isNaN(n)&&Number.isNaN(a))return!0;if(n===a)return!0;if(null===n||null===a||void 0===n||void 0===a)return!1;if(("function"==typeof n.equals||"function"==typeof n.equals)&&n.equals(a))return!0;if("function"==typeof n&&"function"==typeof a||n instanceof Date&&a instanceof Date||n instanceof RegExp&&a instanceof RegExp||"string"==typeof n&&"string"==typeof a||"number"==typeof n&&"number"==typeof a)return n.toString()===a.toString();if("object"!=typeof n||"object"!=typeof a)return!1;if(Object.prototype.isPrototypeOf.call(n,a)||Object.prototype.isPrototypeOf.call(a,n))return!1;if(n.constructor!==a.constructor)return!1;if(n.prototype!==a.prototype)return!1;if(e.indexOf(n)>-1||t.indexOf(a)>-1)return!1;for(i in a){if(a.hasOwnProperty(i)!==n.hasOwnProperty(i))return!1;if(typeof a[i]!=typeof n[i])return!1}for(i in n){if(a.hasOwnProperty(i)!==n.hasOwnProperty(i))return!1;if(typeof a[i]!=typeof n[i])return!1;switch(typeof n[i]){case"object":case"function":if(e.push(n),t.push(a),!this.compare2Objects(e,t,n[i],a[i]))return!1;e.pop(),t.pop();break;default:if(n[i]!==a[i])return!1}}return!0}}class Pe{constructor(e,t,n,a,i){this.expressionMap=e,this.driver=t,this.rawRelationIdResults=n,this.rawRelationCountResults=a,this.queryRunner=i}transform(e,t){const n=this.group(e,t),a=[];return n.forEach((e=>{const n=this.transformRawResultsGroup(e,t);void 0===n||Object.values(n).every((e=>null===e))||a.push(n)})),a}group(e,t){const n=new Map,a=[];return"view"===t.metadata.tableType?a.push(...t.metadata.columns.map((e=>re.buildAlias(this.driver,void 0,t.name,e.databaseName)))):a.push(...t.metadata.primaryColumns.map((e=>re.buildAlias(this.driver,void 0,t.name,e.databaseName)))),e.forEach((e=>{const t=a.map((t=>{const n=e[t];return Buffer.isBuffer(n)?n.toString("hex"):r.isObject(n)?JSON.stringify(n):n})).join("_"),i=n.get(t);i?i.push(e):n.set(t,[e])})),n}transformRawResultsGroup(e,t){let n=t.metadata;if(n.discriminatorColumn){const a=e.map((e=>e[re.buildAlias(this.driver,void 0,t.name,t.metadata.discriminatorColumn.databaseName)])),i=n.childEntityMetadatas.find((e=>void 0!==a.find((t=>t===e.discriminatorValue))));i&&(n=i)}let a=n.create(this.queryRunner,{fromDeserializer:!0,pojo:-1!==this.expressionMap.options.indexOf("create-pojo")});const i=this.transformColumns(e,t,a,n),r=this.transformJoins(e,a,t,n),s=this.transformRelationIds(e,t,a,n),o=this.transformRelationCounts(e,t,a);return i||0===n.primaryColumns.filter((e=>!1===e.isVirtual)).length&&(r||s||o)?a:void 0}transformColumns(e,t,n,a){let i=!1;return a.columns.forEach((r=>{if(a.childEntityMetadatas.length>0&&-1!==a.childEntityMetadatas.findIndex((e=>e.target===r.target)))return;const s=e[0][re.buildAlias(this.driver,void 0,t.name,r.databaseName)];void 0===s||r.isVirtual||this.expressionMap.selects.find((e=>e.selection===t.name||e.selection===t.name+"."+r.propertyPath))&&(r.setEntityValue(n,this.driver.prepareHydratedValue(s,r)),null!==s&&(i=!0))})),i}transformJoins(e,t,n,a){let i=!1;return this.expressionMap.joinAttributes.forEach((r=>{if(!r.metadata)return;if(!r.isSelected)return;if(r.relation&&!a.relations.find((e=>e===r.relation)))return;if(r.mapToProperty){if(r.mapToPropertyParentAlias!==n.name)return}else if(!r.relation||r.parentAlias!==n.name||r.relationPropertyPath!==r.relation.propertyPath)return;let s=this.transform(e,r.alias);s=r.isMany?s:s[0],s=r.isMany||void 0!==s?s:null,void 0!==s&&(r.mapToPropertyPropertyName?t[r.mapToPropertyPropertyName]=s:r.relation.setEntityValue(t,s),i=!0)})),i}transformRelationIds(e,t,n,a){let i=!1;return this.rawRelationIdResults.forEach(((a,r)=>{if(a.relationIdAttribute.parentAlias!==t.name)return;const s=a.relationIdAttribute.relation,o=this.createValueMapFromJoinColumns(s,a.relationIdAttribute.parentAlias,e);if(null==o)return;this.prepareDataForTransformRelationIds();const c=this.hashEntityIds(s,o),h=this.relationIdMaps[r][c]||[],l=a.relationIdAttribute.mapToPropertyPropertyPath.split("."),u=(e,t,n)=>{const a=e.shift();return a&&0===e.length?(t[a]=n,t):a&&e.length>0?void u(e,t[a],n):t};s.isOneToOne||s.isManyToOne?void 0!==h[0]&&(u(l,n,h[0]),i=!0):(u(l,n,h),i=i||h.length>0)})),i}transformRelationCounts(e,t,n){let a=!1;return this.rawRelationCountResults.filter((e=>e.relationCountAttribute.parentAlias===t.name)).forEach((i=>{const r=i.relationCountAttribute.relation;let s;s=r.isOneToMany?r.inverseRelation.joinColumns[0].referencedColumn.databaseName:r.isOwning?r.joinColumns[0].referencedColumn.databaseName:r.inverseRelation.joinColumns[0].referencedColumn.databaseName;const o=e[0][re.buildAlias(this.driver,void 0,t.name,s)];null!=o&&(n[i.relationCountAttribute.mapToPropertyPropertyName]=0,i.results.filter((e=>e.parentId===o)).forEach((e=>{n[i.relationCountAttribute.mapToPropertyPropertyName]=parseInt(e.cnt),a=!0})))})),a}createValueMapFromJoinColumns(e,t,n){let a;return a=e.isManyToOne||e.isOneToOneOwner?e.entityMetadata.primaryColumns.map((e=>e)):e.isOneToMany||e.isOneToOneNotOwner?e.inverseRelation.joinColumns.map((e=>e)):e.isOwning?e.joinColumns.map((e=>e)):e.inverseRelation.inverseJoinColumns.map((e=>e)),a.reduce(((a,i)=>(n.forEach((n=>{e.isManyToOne||e.isOneToOneOwner?a[i.databaseName]=this.driver.prepareHydratedValue(n[re.buildAlias(this.driver,void 0,t,i.databaseName)],i):a[i.databaseName]=this.driver.prepareHydratedValue(n[re.buildAlias(this.driver,void 0,t,i.referencedColumn.databaseName)],i.referencedColumn)})),a)),{})}extractEntityPrimaryIds(e,t){let n;return n=e.isManyToOne||e.isOneToOneOwner?e.entityMetadata.primaryColumns.map((e=>e)):e.isOneToMany||e.isOneToOneNotOwner?e.inverseRelation.joinColumns.map((e=>e)):e.isOwning?e.joinColumns.map((e=>e)):e.inverseRelation.inverseJoinColumns.map((e=>e)),n.reduce(((e,n)=>(e[n.databaseName]=t[n.databaseName],e)),{})}prepareDataForTransformRelationIds(){this.relationIdMaps||(this.relationIdMaps=this.rawRelationIdResults.map((e=>{const t=e.relationIdAttribute.relation;let n;return n=t.isManyToOne||t.isOneToOneOwner?t.joinColumns:t.isOneToMany||t.isOneToOneNotOwner?t.inverseEntityMetadata.primaryColumns:t.isOwning?t.inverseJoinColumns:t.inverseRelation.joinColumns,e.results.reduce(((a,i)=>{let r=n.reduce(((e,n)=>{let a=i[n.databaseName];return t.isOneToMany||t.isOneToOneNotOwner?(n.isVirtual&&n.referencedColumn&&n.referencedColumn.propertyName!==n.propertyName&&(a=n.referencedColumn.createValueMap(a)),xe.mergeDeep(e,n.createValueMap(a))):(!n.isPrimary&&n.referencedColumn.referencedColumn&&(a=n.referencedColumn.referencedColumn.createValueMap(a)),xe.mergeDeep(e,n.referencedColumn.createValueMap(a)))}),{});if(1!==n.length||e.relationIdAttribute.disableMixedMap||(r=t.isOneToMany||t.isOneToOneNotOwner?n[0].getEntityValue(r):n[0].referencedColumn.getEntityValue(r)),void 0!==r){const e=this.hashEntityIds(t,i);a[e]?a[e].push(r):a[e]=[r]}return a}),{})})))}hashEntityIds(e,t){const n=this.extractEntityPrimaryIds(e,t);return JSON.stringify(n)}}class Ie{constructor(e,t,n){this.connection=e,this.queryRunner=t,this.relationIdAttributes=n}async load(e){const t=this.relationIdAttributes.map((async t=>{if(t.relation.isManyToOne||t.relation.isOneToOneOwner){if(t.queryBuilderFactory)throw new s("Additional condition can not be used with ManyToOne or OneToOne owner relations.");const n={},a=e.map((e=>{const a={},i=[];t.relation.joinColumns.forEach((n=>{a[n.databaseName]=this.connection.driver.prepareHydratedValue(e[re.buildAlias(this.connection.driver,void 0,t.parentAlias,n.databaseName)],n.referencedColumn);const r=`${n.databaseName}:${a[n.databaseName]}`;-1===i.indexOf(r)&&i.push(r)})),t.relation.entityMetadata.primaryColumns.forEach((n=>{a[n.databaseName]=this.connection.driver.prepareHydratedValue(e[re.buildAlias(this.connection.driver,void 0,t.parentAlias,n.databaseName)],n);const r=`${n.databaseName}:${a[n.databaseName]}`;-1===i.indexOf(r)&&i.push(r)})),i.sort();const r=i.join("::");return n[r]?null:(n[r]=!0,a)})).filter((e=>e));return{relationIdAttribute:t,results:a}}if(t.relation.isOneToMany||t.relation.isOneToOneNotOwner){const n=t.relation,a=n.isOwning?n.joinColumns:n.inverseRelation.joinColumns,i=n.inverseEntityMetadata.target,r=n.inverseEntityMetadata.tableName,s=t.alias||r,o={},c={},h=e.map(((e,n)=>{const i=[],r={},h=a.map((a=>{const o=a.databaseName+n,c=e[re.buildAlias(this.connection.driver,void 0,t.parentAlias,a.referencedColumn.databaseName)],h=`${s}:${a.propertyPath}:${c}`;return-1!==i.indexOf(h)?"":(i.push(h),r[o]=c,s+"."+a.propertyPath+" = :"+o)})).filter((e=>e)).join(" AND ");i.sort();const l=i.join("::");return o[l]?"":(o[l]=!0,Object.assign(c,r),h)})).filter((e=>e)).map((e=>"("+e+")")).join(" OR ");if(!h)return{relationIdAttribute:t,results:[]};const l=this.connection.createQueryBuilder(this.queryRunner);xe.uniq([...a,...n.inverseRelation.entityMetadata.primaryColumns],(e=>e.propertyPath)).forEach((e=>{l.addSelect(s+"."+e.propertyPath,e.databaseName)})),l.from(i,s).where("("+h+")").setParameters(c),t.queryBuilderFactory&&t.queryBuilderFactory(l);const u=await l.getRawMany();return u.forEach((e=>{a.forEach((t=>{e[t.databaseName]=this.connection.driver.prepareHydratedValue(e[t.databaseName],t.referencedColumn)})),n.inverseRelation.entityMetadata.primaryColumns.forEach((t=>{e[t.databaseName]=this.connection.driver.prepareHydratedValue(e[t.databaseName],t)}))})),{relationIdAttribute:t,results:u}}{const n=t.relation,a=n.isOwning?n.joinColumns:n.inverseRelation.inverseJoinColumns,i=n.isOwning?n.inverseJoinColumns:n.inverseRelation.joinColumns,r=t.junctionAlias,s=t.joinInverseSideMetadata.tableName,o=t.alias||s,c=n.isOwning?n.junctionEntityMetadata.tableName:n.inverseRelation.junctionEntityMetadata.tableName,h=e.map((e=>a.reduce(((n,a)=>(n[a.propertyPath]=e[re.buildAlias(this.connection.driver,void 0,t.parentAlias,a.referencedColumn.databaseName)],n)),{})));if(0===h.length)return{relationIdAttribute:t,results:[]};const l={},u={},p=h.map(((e,t)=>{const n=[],a={},i=Object.keys(e).map((i=>{const s=i+t,o=e[i],c=`${r}:${i}:${o}`;return-1!==n.indexOf(c)?"":(n.push(c),a[s]=o,r+"."+i+" = :"+s)})).filter((e=>e)).join(" AND ");n.sort();const s=n.join("::");return u[s]?"":(u[s]=!0,Object.assign(l,a),i)})).filter((e=>e)),d=i.map((e=>r+"."+e.propertyPath+" = "+o+"."+e.referencedColumn.propertyPath)).join(" AND "),m=p.map((e=>"("+e+" AND "+d+")")).join(" OR "),y=this.connection.createQueryBuilder(this.queryRunner);i.forEach((e=>{y.addSelect(r+"."+e.propertyPath,e.databaseName).addOrderBy(r+"."+e.propertyPath)})),a.forEach((e=>{y.addSelect(r+"."+e.propertyPath,e.databaseName).addOrderBy(r+"."+e.propertyPath)})),y.from(s,o).innerJoin(c,r,m).setParameters(l),t.queryBuilderFactory&&t.queryBuilderFactory(y);const f=await y.getRawMany();return f.forEach((e=>{[...a,...i].forEach((t=>{e[t.databaseName]=this.connection.driver.prepareHydratedValue(e[t.databaseName],t.referencedColumn)}))})),{relationIdAttribute:t,results:f}}}));return Promise.all(t)}}class $e{constructor(e,t){this.connection=e,this.queryRunner=t}load(e,t,n){const a=Array.isArray(t)?t:[t],i=Array.isArray(n)?n:n?[n]:void 0;return e.isManyToMany?this.loadForManyToMany(e,a,i):e.isManyToOne||e.isOneToOneOwner?this.loadForManyToOneAndOneToOneOwner(e,a,i):this.loadForOneToManyAndOneToOneNotOwner(e,a,i)}async loadManyToManyRelationIdsAndGroup(e,t,n,a){const i=e.isManyToMany||e.isOneToMany,r=Array.isArray(t)?t:[t];if(!n&&!(n=await this.connection.relationLoader.load(e,t,this.queryRunner,a)).length)return r.map((e=>({entity:e,related:i?[]:void 0})));const s=await this.load(e,t,n),o=Array.isArray(n)?n:[n];let c=[],h=[];return e.isManyToManyOwner?(c=e.junctionEntityMetadata.inverseColumns.map((e=>e.referencedColumn)),h=e.junctionEntityMetadata.ownerColumns.map((e=>e.referencedColumn))):e.isManyToManyNotOwner?(c=e.junctionEntityMetadata.ownerColumns.map((e=>e.referencedColumn)),h=e.junctionEntityMetadata.inverseColumns.map((e=>e.referencedColumn))):e.isManyToOne||e.isOneToOneOwner?(c=e.joinColumns.map((e=>e.referencedColumn)),h=e.entityMetadata.primaryColumns):(e.isOneToMany||e.isOneToOneNotOwner)&&(c=e.inverseRelation.entityMetadata.primaryColumns,h=e.inverseRelation.joinColumns.map((e=>e.referencedColumn))),r.map((t=>{const n={entity:t,related:i?[]:void 0},a=s.filter((e=>h.every((n=>n.compareEntityValue(t,e[n.entityMetadata.name+"_"+n.propertyAliasName])))));return a.length?(o.forEach((t=>{a.forEach((a=>{c.every((n=>n.compareEntityValue(t,a[re.buildAlias(this.connection.driver,void 0,n.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+n.propertyPath.replace(".","_"))])))&&(i?n.related.push(t):n.related=t)}))})),n):n}))}loadForManyToMany(e,t,n){const a=e.junctionEntityMetadata,i=a.name,r=e.isOwning?a.ownerColumns:a.inverseColumns,s=e.isOwning?a.inverseColumns:a.ownerColumns,o=this.connection.createQueryBuilder(this.queryRunner);r.forEach((e=>{const t=re.buildAlias(this.connection.driver,void 0,e.referencedColumn.entityMetadata.name+"_"+e.referencedColumn.propertyPath.replace(".","_"));o.addSelect(i+"."+e.propertyPath,t)})),s.forEach((t=>{const n=re.buildAlias(this.connection.driver,void 0,t.referencedColumn.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+t.referencedColumn.propertyPath.replace(".","_"));o.addSelect(i+"."+t.propertyPath,n)}));let c="";if(1===r.length){const e=t.map((e=>r[0].referencedColumn.getEntityValue(e)));e.every((e=>"number"==typeof e))?c=`${i}.${r[0].propertyPath} IN (${e.join(", ")})`:(o.setParameter("values1",e),c=i+"."+r[0].propertyPath+" IN (:...values1)")}else c="("+t.map(((e,t)=>r.map((n=>{const a="entity1_"+t+"_"+n.propertyName;return o.setParameter(a,n.referencedColumn.getEntityValue(e)),i+"."+n.propertyPath+" = :"+a})).join(" AND "))).map((e=>"("+e+")")).join(" OR ")+")";let h="";if(n)if(1===s.length){const e=n.map((e=>s[0].referencedColumn.getEntityValue(e)));e.every((e=>"number"==typeof e))?h=`${i}.${s[0].propertyPath} IN (${e.join(", ")})`:(o.setParameter("values2",e),h=i+"."+s[0].propertyPath+" IN (:...values2)")}else h="("+n.map(((e,t)=>s.map((n=>{const a="entity2_"+t+"_"+n.propertyName;return o.setParameter(a,n.referencedColumn.getEntityValue(e)),i+"."+n.propertyPath+" = :"+a})).join(" AND "))).map((e=>"("+e+")")).join(" OR ")+")";const l=[c,h].filter((e=>e.length>0)).join(" AND ");return o.from(a.target,i).where(l).getRawMany()}loadForManyToOneAndOneToOneOwner(e,t,n){const a=e.entityMetadata.targetName,i=e.joinColumns.every((t=>!!e.entityMetadata.nonVirtualColumns.find((e=>e===t))));if(n&&i){let a=[];if(t.forEach((t=>{let i={};e.entityMetadata.primaryColumns.forEach((e=>{const n=e.entityMetadata.name+"_"+e.propertyPath.replace(".","_");i[n]=e.getEntityValue(t)})),n.forEach((n=>{e.joinColumns.forEach((a=>{const r=a.getEntityValue(t),s=a.referencedColumn.getEntityValue(n);if(void 0!==r&&void 0!==s&&r===s){const t=a.referencedColumn.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+a.referencedColumn.propertyPath.replace(".","_");i[t]=s}}))})),Object.keys(i).length===e.entityMetadata.primaryColumns.length+e.joinColumns.length&&a.push(i)})),a.length===t.length)return Promise.resolve(a)}const r=this.connection.createQueryBuilder(this.queryRunner);e.entityMetadata.primaryColumns.forEach((e=>{const t=re.buildAlias(this.connection.driver,void 0,e.entityMetadata.name+"_"+e.propertyPath.replace(".","_"));r.addSelect(a+"."+e.propertyPath,t)})),e.joinColumns.forEach((t=>{const n=re.buildAlias(this.connection.driver,void 0,t.referencedColumn.entityMetadata.name+"_"+e.propertyPath.replace(".","_")+"_"+t.referencedColumn.propertyPath.replace(".","_"));r.addSelect(a+"."+t.propertyPath,n)}));let s="";if(1===e.entityMetadata.primaryColumns.length){const n=t.map((t=>e.entityMetadata.primaryColumns[0].getEntityValue(t)));n.every((e=>"number"==typeof e))?s=`${a}.${e.entityMetadata.primaryColumns[0].propertyPath} IN (${n.join(", ")})`:(r.setParameter("values",n),s=a+"."+e.entityMetadata.primaryColumns[0].propertyPath+" IN (:...values)")}else s=t.map(((t,n)=>e.entityMetadata.primaryColumns.map(((e,i)=>{const s="entity"+n+"_"+i;return r.setParameter(s,e.getEntityValue(t)),a+"."+e.propertyPath+" = :"+s})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");return r.from(e.entityMetadata.target,a).where(s).getRawMany()}loadForOneToManyAndOneToOneNotOwner(e,t,n){if((e=e.inverseRelation).entityMetadata.primaryColumns.length===e.joinColumns.length&&e.entityMetadata.primaryColumns.every((t=>-1!==e.joinColumns.indexOf(t))))return Promise.resolve(t.map((t=>{const n={};return e.joinColumns.forEach((function(a){const i=a.referencedColumn.getEntityValue(t),r=a.referencedColumn.entityMetadata.name+"_"+a.referencedColumn.propertyPath.replace(".","_"),s=a.entityMetadata.name+"_"+e.inverseRelation.propertyPath.replace(".","_")+"_"+a.propertyPath.replace(".","_");n[r]=i,n[s]=i})),n})));const a=e.entityMetadata.targetName,i=this.connection.createQueryBuilder(this.queryRunner);e.entityMetadata.primaryColumns.forEach((t=>{const n=re.buildAlias(this.connection.driver,void 0,t.entityMetadata.name+"_"+e.inverseRelation.propertyPath.replace(".","_")+"_"+t.propertyPath.replace(".","_"));i.addSelect(a+"."+t.propertyPath,n)})),e.joinColumns.forEach((e=>{const t=re.buildAlias(this.connection.driver,void 0,e.referencedColumn.entityMetadata.name+"_"+e.referencedColumn.propertyPath.replace(".","_"));i.addSelect(a+"."+e.propertyPath,t)}));let r="";if(1===e.joinColumns.length){const n=t.map((t=>e.joinColumns[0].referencedColumn.getEntityValue(t)));n.every((e=>"number"==typeof e))?r=`${a}.${e.joinColumns[0].propertyPath} IN (${n.join(", ")})`:(i.setParameter("values",n),r=a+"."+e.joinColumns[0].propertyPath+" IN (:...values)")}else r=t.map(((t,n)=>e.joinColumns.map(((e,r)=>{const s="entity"+n+"_"+r;return i.setParameter(s,e.referencedColumn.getEntityValue(t)),a+"."+e.propertyPath+" = :"+s})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");return i.from(e.entityMetadata.target,a).where(r).getRawMany()}}class qe{constructor(e){this.expressionMap=e}transform(){this.expressionMap.mainAlias&&this.expressionMap.mainAlias.metadata.relationIds.forEach((e=>{const t=this.metadataToAttribute(this.expressionMap.mainAlias.name,e);this.expressionMap.relationIdAttributes.push(t)})),this.expressionMap.joinAttributes.forEach((e=>{e.metadata&&!e.metadata.isJunction&&e.metadata.relationIds.forEach((t=>{const n=this.metadataToAttribute(e.alias.name,t);this.expressionMap.relationIdAttributes.push(n)}))}))}metadataToAttribute(e,t){return new oe(this.expressionMap,{relationName:e+"."+t.relation.propertyName,mapToProperty:e+"."+t.propertyName,alias:t.alias,queryBuilderFactory:t.queryBuilderFactory})}}class De{constructor(e,t,n){this.connection=e,this.queryRunner=t,this.relationCountAttributes=n}async load(e){const t=(e,t,n)=>n.indexOf(e)===t,n=this.relationCountAttributes.map((async n=>{if(n.relation.isOneToMany){const a=n.relation,i=a.inverseRelation,r=i.joinColumns[0].referencedColumn.propertyName,s=a.inverseEntityMetadata.target,o=a.inverseEntityMetadata.tableName,c=n.alias||o,h=i.propertyName;let l=e.map((e=>e[n.parentAlias+"_"+r])).filter((e=>!!e));if(l=l.filter(t),0===l.length)return{relationCountAttribute:n,results:[]};const u=this.connection.createQueryBuilder(this.queryRunner);return u.select(c+"."+h,"parentId").addSelect("COUNT(*)","cnt").from(s,c).where(c+"."+h+" IN (:...ids)").addGroupBy(c+"."+h).setParameter("ids",l),n.queryBuilderFactory&&n.queryBuilderFactory(u),{relationCountAttribute:n,results:await u.getRawMany()}}{let a,i,r,s;n.relation.isOwning?(a=n.relation.joinColumns[0].referencedColumn.databaseName,i=n.relation.inverseJoinColumns[0].referencedColumn.databaseName,r=n.relation.junctionEntityMetadata.columns[0],s=n.relation.junctionEntityMetadata.columns[1]):(a=n.relation.inverseRelation.inverseJoinColumns[0].referencedColumn.databaseName,i=n.relation.inverseRelation.joinColumns[0].referencedColumn.databaseName,r=n.relation.junctionEntityMetadata.columns[1],s=n.relation.junctionEntityMetadata.columns[0]);let o=e.map((e=>e[n.parentAlias+"_"+a])).filter((e=>!!e));if(o=o.filter(t),0===o.length)return{relationCountAttribute:n,results:[]};const c=n.junctionAlias,h=n.joinInverseSideMetadata.tableName,l=n.alias||h,u=n.relation.junctionEntityMetadata.tableName,p=c+"."+r.propertyName+" IN ("+o.map((e=>isNaN(e)?"'"+e+"'":e))+") AND "+c+"."+s.propertyName+" = "+l+"."+i,d=this.connection.createQueryBuilder(this.queryRunner);return d.select(c+"."+r.propertyName,"parentId").addSelect("COUNT("+d.escape(l)+"."+d.escape(i)+")","cnt").from(h,l).innerJoin(u,c,p).addGroupBy(c+"."+r.propertyName),n.queryBuilderFactory&&n.queryBuilderFactory(d),{relationCountAttribute:n,results:await d.getRawMany()}}}));return Promise.all(n)}}class Le{constructor(e){this.expressionMap=e}transform(){this.expressionMap.mainAlias&&this.expressionMap.mainAlias.metadata.relationCounts.forEach((e=>{const t=this.metadataToAttribute(this.expressionMap.mainAlias.name,e);this.expressionMap.relationCountAttributes.push(t)})),this.expressionMap.joinAttributes.forEach((e=>{e.metadata&&!e.metadata.isJunction&&e.metadata.relationCounts.forEach((t=>{const n=this.metadataToAttribute(e.alias.name,t);this.expressionMap.relationCountAttributes.push(n)}))}))}metadataToAttribute(e,t){return new ce(this.expressionMap,{relationName:e+"."+t.relation.propertyName,mapToProperty:e+"."+t.propertyName,alias:t.alias,queryBuilderFactory:t.queryBuilderFactory})}}class _e{static isFindOneOptions(e){const t=e;return t&&(Array.isArray(t.select)||Array.isArray(t.relations)||"object"==typeof t.select||"object"==typeof t.relations||"object"==typeof t.where||"object"==typeof t.join||"object"==typeof t.order||"object"==typeof t.cache||"boolean"==typeof t.cache||"number"==typeof t.cache||"string"==typeof t.comment||"object"==typeof t.lock||"object"==typeof t.loadRelationIds||"boolean"==typeof t.loadRelationIds||"boolean"==typeof t.loadEagerRelations||"boolean"==typeof t.withDeleted||"string"==typeof t.relationLoadStrategy||"boolean"==typeof t.transaction)}static isFindManyOptions(e){const t=e;return t&&(this.isFindOneOptions(t)||"number"==typeof t.skip||"number"==typeof t.take||"string"==typeof t.skip||"string"==typeof t.take)}static extractFindManyOptionsAlias(e){if(this.isFindManyOptions(e)&&e.join)return e.join.alias}static applyOptionsToTreeQueryBuilder(e,t){if(t?.relations){const n=[...t.relations];if(_e.applyRelationsRecursively(e,n,e.expressionMap.mainAlias.name,e.expressionMap.mainAlias.metadata,""),n.length>0)throw new B(n)}return e}static applyRelationsRecursively(e,t,n,a,i){let r=[];if(i){const e=new RegExp("^"+i.replace(".","\\.")+"\\.");r=t.filter((t=>t.match(e))).map((t=>a.findRelationWithPropertyPath(t.replace(e,"")))).filter((e=>e))}else r=t.map((e=>a.findRelationWithPropertyPath(e))).filter((e=>e));r.forEach((r=>{let s=re.buildAlias(e.connection.driver,{joiner:"__"},n,r.propertyPath);const o=n+"."+r.propertyPath;let c,h;if("query"===e.expressionMap.relationLoadStrategy?e.concatRelationMetadata(r):e.leftJoinAndSelect(o,s),t.splice(t.indexOf(i?i+"."+r.propertyPath:r.propertyPath),1),"query"===e.expressionMap.relationLoadStrategy)c=r.inverseEntityMetadata,h=s;else{const t=e.expressionMap.joinAttributes.find((e=>e.entityOrProperty===o));c=t.metadata,h=t.alias.name}if(!h||!c)throw new P(r.propertyPath,a);if(this.applyRelationsRecursively(e,t,h,c,i?i+"."+r.propertyPath:r.propertyPath),"join"===e.expressionMap.relationLoadStrategy){const t=a.relations.find((e=>e.propertyName===r.propertyPath));t&&this.joinEagerRelations(e,s,t.inverseEntityMetadata)}}))}static joinEagerRelations(e,t,n){n.eagerRelations.forEach((n=>{let a=re.buildAlias(e.connection.driver,{joiner:"__"},t,n.propertyName),i=!0;for(const r of e.expressionMap.joinAttributes)if(void 0===r.condition&&void 0===r.mapToProperty&&void 0===r.isMappingMany&&"LEFT"===r.direction&&r.entityOrProperty===`${t}.${n.propertyPath}`){i=!1,a=r.alias.name;break}const r=Boolean(e.expressionMap.joinAttributes.find((e=>e.alias.name===a)));i&&!r&&e.leftJoin(t+"."+n.propertyPath,a);let s=!0;for(const t of e.expressionMap.selects)if(void 0===t.aliasName&&void 0===t.virtual&&t.selection===a){s=!1;break}s&&e.addSelect(a),this.joinEagerRelations(e,a,n.inverseEntityMetadata)}))}}class Be extends me{constructor(){super(...arguments),this["@instanceof"]=Symbol.for("SelectQueryBuilder"),this.findOptions={},this.selects=[],this.joins=[],this.conditions="",this.orderBys=[],this.relationMetadatas=[]}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createSelectExpression(),e+=this.createJoinExpression(),e+=this.createWhereExpression(),e+=this.createGroupByExpression(),e+=this.createHavingExpression(),e+=this.createOrderByExpression(),e+=this.createLimitOffsetExpression(),e+=this.createLockExpression(),e=e.trim(),this.expressionMap.subQuery&&(e="("+e+")"),this.replacePropertyNamesForTheWholeQuery(e)}setFindOptions(e){return this.findOptions=e,this.applyFindOptions(),this}subQuery(){const e=this.createQueryBuilder();return e.expressionMap.subQuery=!0,e.parentQueryBuilder=this,e}select(e,t){if(this.expressionMap.queryType="select",Array.isArray(e))this.expressionMap.selects=e.map((e=>({selection:e})));else if("function"==typeof e){const n=e(this.subQuery());this.setParameters(n.getParameters()),this.expressionMap.selects.push({selection:n.getQuery(),aliasName:t})}else e&&(this.expressionMap.selects=[{selection:e,aliasName:t}]);return this}addSelect(e,t){if(!e)return this;if(Array.isArray(e))this.expressionMap.selects=this.expressionMap.selects.concat(e.map((e=>({selection:e}))));else if("function"==typeof e){const n=e(this.subQuery());this.setParameters(n.getParameters()),this.expressionMap.selects.push({selection:n.getQuery(),aliasName:t})}else e&&this.expressionMap.selects.push({selection:e,aliasName:t});return this}maxExecutionTime(e){return this.expressionMap.maxExecutionTime=e,this}distinct(e=!0){return this.expressionMap.selectDistinct=e,this}distinctOn(e){return this.expressionMap.selectDistinctOn=e,this}fromDummy(){return this.from(this.connection.driver.dummyTableName??"(SELECT 1 AS dummy_column)","dummy_table")}from(e,t){const n=this.createFromAlias(e,t);return this.expressionMap.setMainAlias(n),this}addFrom(e,t){const n=this.createFromAlias(e,t);return this.expressionMap.mainAlias||this.expressionMap.setMainAlias(n),this}innerJoin(e,t,n,a){return this.join("INNER",e,t,n,a),this}leftJoin(e,t,n,a){return this.join("LEFT",e,t,n,a),this}innerJoinAndSelect(e,t,n,a){return this.addSelect(t),this.innerJoin(e,t,n,a),this}leftJoinAndSelect(e,t,n,a){return this.addSelect(t),this.leftJoin(e,t,n,a),this}innerJoinAndMapMany(e,t,n,a,i){return this.addSelect(n),this.join("INNER",t,n,a,i,e,!0),this}innerJoinAndMapOne(e,t,n,a,i,r){return this.addSelect(n),this.join("INNER",t,n,a,i,e,!1,r),this}leftJoinAndMapMany(e,t,n,a,i){return this.addSelect(n),this.join("LEFT",t,n,a,i,e,!0),this}leftJoinAndMapOne(e,t,n,a,i,r){return this.addSelect(n),this.join("LEFT",t,n,a,i,e,!1,r),this}loadRelationIdAndMap(e,t,n,a){const i=new oe(this.expressionMap);return i.mapToProperty=e,i.relationName=t,"string"==typeof n&&(i.alias=n),"object"==typeof n&&n.disableMixedMap&&(i.disableMixedMap=!0),i.queryBuilderFactory=a,this.expressionMap.relationIdAttributes.push(i),i.relation.junctionEntityMetadata&&this.expressionMap.createAlias({type:"other",name:i.junctionAlias,metadata:i.relation.junctionEntityMetadata}),this}loadRelationCountAndMap(e,t,n,a){const i=new ce(this.expressionMap);return i.mapToProperty=e,i.relationName=t,i.alias=n,i.queryBuilderFactory=a,this.expressionMap.relationCountAttributes.push(i),this.expressionMap.createAlias({type:"other",name:i.junctionAlias}),i.relation.junctionEntityMetadata&&this.expressionMap.createAlias({type:"other",name:i.junctionAlias,metadata:i.relation.junctionEntityMetadata}),this}loadAllRelationIds(e){return this.expressionMap.mainAlias.metadata.relations.forEach((t=>{void 0!==e&&void 0!==e.relations&&-1===e.relations.indexOf(t.propertyPath)||this.loadRelationIdAndMap(this.expressionMap.mainAlias.name+"."+t.propertyPath,this.expressionMap.mainAlias.name+"."+t.propertyPath,e)})),this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereExists(e){return this.where(...this.getExistsCondition(e))}andWhereExists(e){return this.andWhere(...this.getExistsCondition(e))}orWhereExists(e){return this.orWhere(...this.getExistsCondition(e))}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}having(e,t){return this.expressionMap.havings.push({type:"simple",condition:e}),t&&this.setParameters(t),this}andHaving(e,t){return this.expressionMap.havings.push({type:"and",condition:e}),t&&this.setParameters(t),this}orHaving(e,t){return this.expressionMap.havings.push({type:"or",condition:e}),t&&this.setParameters(t),this}groupBy(e){return this.expressionMap.groupBys=e?[e]:[],this}addGroupBy(e){return this.expressionMap.groupBys.push(e),this}timeTravelQuery(e){return"cockroachdb"===this.connection.driver.options.type&&(this.expressionMap.timeTravel=void 0===e?"follower_read_timestamp()":e),this}orderBy(e,t="ASC",n){if(void 0!==t&&"ASC"!==t&&"DESC"!==t)throw new s('SelectQueryBuilder.addOrderBy "order" can accept only "ASC" and "DESC" values.');if(void 0!==n&&"NULLS FIRST"!==n&&"NULLS LAST"!==n)throw new s('SelectQueryBuilder.addOrderBy "nulls" can accept only "NULLS FIRST" and "NULLS LAST" values.');return this.expressionMap.orderBys=e?"object"==typeof e?e:n?{[e]:{order:t,nulls:n}}:{[e]:t}:{},this}addOrderBy(e,t="ASC",n){if(void 0!==t&&"ASC"!==t&&"DESC"!==t)throw new s('SelectQueryBuilder.addOrderBy "order" can accept only "ASC" and "DESC" values.');if(void 0!==n&&"NULLS FIRST"!==n&&"NULLS LAST"!==n)throw new s('SelectQueryBuilder.addOrderBy "nulls" can accept only "NULLS FIRST" and "NULLS LAST" values.');return this.expressionMap.orderBys[e]=n?{order:t,nulls:n}:t,this}limit(e){if(this.expressionMap.limit=this.normalizeNumber(e),void 0!==this.expressionMap.limit&&isNaN(this.expressionMap.limit))throw new s('Provided "limit" value is not a number. Please provide a numeric value.');return this}offset(e){if(this.expressionMap.offset=this.normalizeNumber(e),void 0!==this.expressionMap.offset&&isNaN(this.expressionMap.offset))throw new s('Provided "offset" value is not a number. Please provide a numeric value.');return this}take(e){if(this.expressionMap.take=this.normalizeNumber(e),void 0!==this.expressionMap.take&&isNaN(this.expressionMap.take))throw new s('Provided "take" value is not a number. Please provide a numeric value.');return this}skip(e){if(this.expressionMap.skip=this.normalizeNumber(e),void 0!==this.expressionMap.skip&&isNaN(this.expressionMap.skip))throw new s('Provided "skip" value is not a number. Please provide a numeric value.');return this}useIndex(e){return this.expressionMap.useIndex=e,this}setLock(e,t,n){return this.expressionMap.lockMode=e,this.expressionMap.lockVersion=t,this.expressionMap.lockTables=n,this}setOnLocked(e){return this.expressionMap.onLocked=e,this}withDeleted(){return this.expressionMap.withDeleted=!0,this}async getRawOne(){return(await this.getRawMany())[0]}async getRawMany(){if("optimistic"===this.expressionMap.lockMode)throw new L;this.expressionMap.queryEntity=!1;const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0);const n=await this.loadRawResults(e);return t&&await e.commitTransaction(),n}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async getRawAndEntities(){const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),this.expressionMap.queryEntity=!0;const n=await this.executeEntitiesAndRawResults(e);return t&&await e.commitTransaction(),n}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async getOne(){const e=(await this.getRawAndEntities()).entities[0];if(e&&"optimistic"===this.expressionMap.lockMode&&this.expressionMap.lockVersion){const t=this.expressionMap.mainAlias.metadata;if(this.expressionMap.lockVersion instanceof Date){const n=t.updateDateColumn.getEntityValue(e);if(n.getTime()!==this.expressionMap.lockVersion.getTime())throw new w(t.name,this.expressionMap.lockVersion,n)}else{const n=t.versionColumn.getEntityValue(e);if(n!==this.expressionMap.lockVersion)throw new w(t.name,this.expressionMap.lockVersion,n)}}return void 0===e?null:e}async getOneOrFail(){const e=await this.getOne();if(!e)throw new E(this.expressionMap.mainAlias.target,this.expressionMap.parameters);return e}async getMany(){if("optimistic"===this.expressionMap.lockMode)throw new L;return(await this.getRawAndEntities()).entities}async getCount(){if("optimistic"===this.expressionMap.lockMode)throw new L;const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),this.expressionMap.queryEntity=!1;const n=await this.executeCountQuery(e);return t&&await e.commitTransaction(),n}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async getExists(){if("optimistic"===this.expressionMap.lockMode)throw new L;const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),this.expressionMap.queryEntity=!1;const n=await this.executeExistsQuery(e);return t&&await e.commitTransaction(),n}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async getManyAndCount(){if("optimistic"===this.expressionMap.lockMode)throw new L;const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),this.expressionMap.queryEntity=!0;const n=await this.executeEntitiesAndRawResults(e);this.expressionMap.queryEntity=!1;const a=this.expressionMap.cacheId;this.expressionMap.cacheId=a?`${a}-count`:a;const i=await this.executeCountQuery(e),r=[n.entities,i];return t&&await e.commitTransaction(),r}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}async stream(){this.expressionMap.queryEntity=!1;const[e,t]=this.getQueryAndParameters(),n=this.obtainQueryRunner();let a=!1;try{!0===this.expressionMap.useTransaction&&!1===n.isTransactionActive&&(await n.startTransaction(),a=!0);const i=()=>{if(n!==this.queryRunner)return n.release()},r=n.stream(e,t,i,i);return a&&await n.commitTransaction(),r}catch(e){if(a)try{await n.rollbackTransaction()}catch(e){}throw e}}cache(e,t){return"boolean"==typeof e?this.expressionMap.cache=e:"number"==typeof e?(this.expressionMap.cache=!0,this.expressionMap.cacheDuration=e):"string"!=typeof e&&"number"!=typeof e||(this.expressionMap.cache=!0,this.expressionMap.cacheId=e),t&&(this.expressionMap.cacheDuration=t),this}setOption(e){return this.expressionMap.options.push(e),this}join(e,t,n,a,i,r,s,o){i&&this.setParameters(i);const c=new se(this.connection,this.expressionMap);c.direction=e,c.mapAsEntity=o,c.mapToProperty=r,c.isMappingMany=s,c.entityOrProperty=t,c.condition=a,this.expressionMap.joinAttributes.push(c);const h=c.metadata;if(h){if(h.deleteDateColumn&&!this.expressionMap.withDeleted){const e=`${n}.${h.deleteDateColumn.propertyName} IS NULL`;c.condition=c.condition?` ${c.condition} AND ${e}`:`${e}`}c.alias=this.expressionMap.createAlias({type:"join",name:n,metadata:h}),c.relation&&c.relation.junctionEntityMetadata&&this.expressionMap.createAlias({type:"join",name:c.junctionAlias,metadata:c.relation.junctionEntityMetadata})}else{let e="";if("function"==typeof t){const n=t(this.subQuery());this.setParameters(n.getParameters()),e=n.getQuery()}else e=t;const a="function"==typeof t||"("===t.substr(0,1)&&")"===t.substr(-1);c.alias=this.expressionMap.createAlias({type:"join",name:n,tablePath:!1===a?t:void 0,subQuery:!0===a?e:void 0})}}createSelectExpression(){if(!this.expressionMap.mainAlias)throw new s("Cannot build query because main alias is not set (call qb#from method)");const e=[],t=[];if(this.expressionMap.mainAlias.hasMetadata){const n=this.expressionMap.mainAlias.metadata;e.push(...this.buildEscapedEntityColumnSelects(this.expressionMap.mainAlias.name,n)),t.push(...this.findEntityColumnSelects(this.expressionMap.mainAlias.name,n))}this.expressionMap.joinAttributes.forEach((n=>{if(n.metadata)e.push(...this.buildEscapedEntityColumnSelects(n.alias.name,n.metadata)),t.push(...this.findEntityColumnSelects(n.alias.name,n.metadata));else{const a=this.expressionMap.selects.some((e=>e.selection===n.alias.name));if(a){e.push({selection:this.escape(n.alias.name)+".*"});const a=this.expressionMap.selects.find((e=>e.selection===n.alias.name));t.push(a)}}})),this.expressionMap.selects.filter((e=>-1===t.indexOf(e))).forEach((t=>e.push({selection:this.replacePropertyNames(t.selection),aliasName:t.aliasName}))),0===e.length&&e.push({selection:"*"});let n="";this.expressionMap.useIndex&&re.isMySQLFamily(this.connection.driver)&&(n=` USE INDEX (${this.expressionMap.useIndex})`);const a=this.expressionMap.aliases.filter((e=>"from"===e.type&&(e.tablePath||e.subQuery))).map((e=>e.subQuery?e.subQuery+" "+this.escape(e.name):this.getTableName(e.tablePath)+" "+this.escape(e.name))),i=this.createSelectDistinctExpression(),r=e.map((e=>e.selection+(e.aliasName?" AS "+this.escape(e.aliasName):""))).join(", ");return i+r+" FROM "+a.join(", ")+this.createTableLockExpression()+n}createSelectDistinctExpression(){const{selectDistinct:e,selectDistinctOn:t,maxExecutionTime:n}=this.expressionMap,{driver:a}=this.connection;let i="SELECT ";return n>0&&re.isMySQLFamily(a)&&(i+=`/*+ MAX_EXECUTION_TIME(${this.expressionMap.maxExecutionTime}) */ `),re.isPostgresFamily(a)&&t.length>0?i=`SELECT DISTINCT ON (${t.map((e=>this.replacePropertyNames(e))).join(", ")}) `:e&&(i="SELECT DISTINCT "),i}createJoinExpression(){return this.expressionMap.joinAttributes.map((e=>{const t=e.relation,n=e.tablePath,a=e.alias.name;let i=e.condition?" AND ("+e.condition+")":"";const r=e.parentAlias;if(!r||!t){const t=e.alias.subQuery?e.alias.subQuery:this.getTableName(n);return" "+e.direction+" JOIN "+t+" "+this.escape(a)+this.createTableLockExpression()+(e.condition?" ON "+this.replacePropertyNames(e.condition):"")}if(t.isManyToOne||t.isOneToOneOwner){const s=t.joinColumns.map((e=>a+"."+e.referencedColumn.propertyPath+"="+r+"."+t.propertyPath+"."+e.referencedColumn.propertyPath)).join(" AND ");return" "+e.direction+" JOIN "+this.getTableName(n)+" "+this.escape(a)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(s+i)}if(t.isOneToMany||t.isOneToOneNotOwner){const o=t.inverseRelation.joinColumns.map((e=>("entity-child"===t.inverseEntityMetadata.tableType&&t.inverseEntityMetadata.discriminatorColumn&&(i+=" AND "+a+"."+t.inverseEntityMetadata.discriminatorColumn.databaseName+"='"+t.inverseEntityMetadata.discriminatorValue+"'"),a+"."+t.inverseRelation.propertyPath+"."+e.referencedColumn.propertyPath+"="+r+"."+e.referencedColumn.propertyPath))).join(" AND ");if(!o)throw new s(`Relation ${t.entityMetadata.name}.${t.propertyName} does not have join columns.`);return" "+e.direction+" JOIN "+this.getTableName(n)+" "+this.escape(a)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(o+i)}{const s=t.junctionEntityMetadata.tablePath,o=e.junctionAlias;let c="",h="";return t.isOwning?(c=t.joinColumns.map((e=>o+"."+e.propertyPath+"="+r+"."+e.referencedColumn.propertyPath)).join(" AND "),h=t.inverseJoinColumns.map((e=>a+"."+e.referencedColumn.propertyPath+"="+o+"."+e.propertyPath)).join(" AND ")):(c=t.inverseRelation.inverseJoinColumns.map((e=>o+"."+e.propertyPath+"="+r+"."+e.referencedColumn.propertyPath)).join(" AND "),h=t.inverseRelation.joinColumns.map((e=>a+"."+e.referencedColumn.propertyPath+"="+o+"."+e.propertyPath)).join(" AND "))," "+e.direction+" JOIN "+this.getTableName(s)+" "+this.escape(o)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(c)+" "+e.direction+" JOIN "+this.getTableName(n)+" "+this.escape(a)+this.createTableLockExpression()+" ON "+this.replacePropertyNames(h+i)}})).join(" ")}createGroupByExpression(){return this.expressionMap.groupBys&&this.expressionMap.groupBys.length?" GROUP BY "+this.replacePropertyNames(this.expressionMap.groupBys.join(", ")):""}createOrderByExpression(){const e=this.expressionMap.allOrderBys;return 0===Object.keys(e).length?"":" ORDER BY "+Object.keys(e).map((t=>{const n="string"==typeof e[t]?e[t]:e[t].order+" "+e[t].nulls,a=this.expressionMap.selects.find((e=>e.selection===t));if(a&&!a.aliasName&&-1!==t.indexOf(".")){const e=t.split("."),a=e[0],i=e.slice(1).join("."),r=this.expressionMap.aliases.find((e=>e.name===a));if(r){const e=r.metadata.findColumnWithPropertyPath(i);if(e){const t=re.buildAlias(this.connection.driver,void 0,a,e.databaseName);return this.escape(t)+" "+n}}}return this.replacePropertyNames(t)+" "+n})).join(", ")}createLimitOffsetExpression(){let e=this.expressionMap.offset,t=this.expressionMap.limit;if(e||t||0!==this.expressionMap.joinAttributes.length||(e=this.expressionMap.skip,t=this.expressionMap.take),"mssql"===this.connection.driver.options.type){let n="";if((t||e)&&Object.keys(this.expressionMap.allOrderBys).length<=0&&(n=" ORDER BY (SELECT NULL)"),t&&e)return n+" OFFSET "+e+" ROWS FETCH NEXT "+t+" ROWS ONLY";if(t)return n+" OFFSET 0 ROWS FETCH NEXT "+t+" ROWS ONLY";if(e)return n+" OFFSET "+e+" ROWS"}else if(re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type){if(t&&e)return" LIMIT "+t+" OFFSET "+e;if(t)return" LIMIT "+t;if(e)throw new K}else if(re.isSQLiteFamily(this.connection.driver)){if(t&&e)return" LIMIT "+t+" OFFSET "+e;if(t)return" LIMIT "+t;if(e)return" LIMIT -1 OFFSET "+e}else if("oracle"===this.connection.driver.options.type){if(t&&e)return" OFFSET "+e+" ROWS FETCH NEXT "+t+" ROWS ONLY";if(t)return" FETCH NEXT "+t+" ROWS ONLY";if(e)return" OFFSET "+e+" ROWS"}else{if(t&&e)return" LIMIT "+t+" OFFSET "+e;if(t)return" LIMIT "+t;if(e)return" OFFSET "+e}return""}createTableLockExpression(){if("mssql"===this.connection.driver.options.type)switch(this.expressionMap.lockMode){case"pessimistic_read":return" WITH (HOLDLOCK, ROWLOCK)";case"pessimistic_write":return" WITH (UPDLOCK, ROWLOCK)";case"dirty_read":return" WITH (NOLOCK)"}return""}createLockExpression(){const e=this.connection.driver;let t="";if(this.expressionMap.lockTables){if(!re.isPostgresFamily(e)&&"cockroachdb"!==e.options.type)throw new s("Lock tables not supported in selected driver");if(this.expressionMap.lockTables.length<1)throw new s("lockTables cannot be an empty array");t=" OF "+this.expressionMap.lockTables.join(", ")}let n="";switch("nowait"===this.expressionMap.onLocked?n=" NOWAIT":"skip_locked"===this.expressionMap.onLocked&&(n=" SKIP LOCKED"),this.expressionMap.lockMode){case"pessimistic_read":if("mysql"===e.options.type||"aurora-mysql"===e.options.type)return re.isReleaseVersionOrGreater(e,"8.0.0")?" FOR SHARE"+t+n:" LOCK IN SHARE MODE";if("mariadb"===e.options.type)return" LOCK IN SHARE MODE";if(re.isPostgresFamily(e))return" FOR SHARE"+t+n;if("oracle"===e.options.type)return" FOR UPDATE";if("mssql"===e.options.type)return"";throw new h;case"pessimistic_write":if(re.isMySQLFamily(e)||"aurora-mysql"===e.options.type||"oracle"===e.options.type)return" FOR UPDATE"+n;if(re.isPostgresFamily(e)||"cockroachdb"===e.options.type)return" FOR UPDATE"+t+n;if("mssql"===e.options.type)return"";throw new h;case"pessimistic_partial_write":if(re.isPostgresFamily(e))return" FOR UPDATE"+t+" SKIP LOCKED";if(re.isMySQLFamily(e))return" FOR UPDATE SKIP LOCKED";throw new h;case"pessimistic_write_or_fail":if(re.isPostgresFamily(e)||"cockroachdb"===e.options.type)return" FOR UPDATE"+t+" NOWAIT";if(re.isMySQLFamily(e))return" FOR UPDATE NOWAIT";throw new h;case"for_no_key_update":if(re.isPostgresFamily(e)||"cockroachdb"===e.options.type)return" FOR NO KEY UPDATE"+t+n;throw new h;case"for_key_share":if(re.isPostgresFamily(e))return" FOR KEY SHARE"+t+n;throw new h;default:return""}}createHavingExpression(){if(!this.expressionMap.havings||!this.expressionMap.havings.length)return"";const e=this.expressionMap.havings.map(((e,t)=>{switch(e.type){case"and":return(t>0?"AND ":"")+this.replacePropertyNames(e.condition);case"or":return(t>0?"OR ":"")+this.replacePropertyNames(e.condition);default:return this.replacePropertyNames(e.condition)}})).join(" ");return e.length?" HAVING "+e:""}buildEscapedEntityColumnSelects(e,t){const n=this.expressionMap.selects.some((t=>t.selection===e)),a=[];if(n&&a.push(...t.columns.filter((e=>!0===e.isSelect))),a.push(...t.columns.filter((t=>this.expressionMap.selects.some((n=>n.selection===e+"."+t.propertyPath))))),0===a.length)return[];const i=this.expressionMap.queryEntity?t.primaryColumns.filter((e=>-1===a.indexOf(e))):[],r=[...a,...i],s=[],o=this.escape(e);return r.forEach((t=>{let a=o+"."+this.escape(t.databaseName);if(t.isVirtualProperty&&t.query&&(a=`(${t.query(o)})`),-1!==this.connection.driver.spatialTypes.indexOf(t.type)){if(re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type){const e=this.connection.driver.options.legacySpatialSupport;a=`${e?"AsText":"ST_AsText"}(${a})`}re.isPostgresFamily(this.connection.driver)&&(a=t.precision?`ST_AsGeoJSON(${a}, ${t.precision})::json`:`ST_AsGeoJSON(${a})::json`),"mssql"===this.connection.driver.options.type&&(a=`${a}.ToString()`)}const i=this.expressionMap.selects.filter((n=>n.selection===e+"."+t.propertyPath));if(i.length)i.forEach((n=>{s.push({selection:a,aliasName:n.aliasName?n.aliasName:re.buildAlias(this.connection.driver,void 0,e,t.databaseName),virtual:n.virtual})}));else{if(t.isVirtualProperty)return;s.push({selection:a,aliasName:re.buildAlias(this.connection.driver,void 0,e,t.databaseName),virtual:n})}})),s}findEntityColumnSelects(e,t){const n=this.expressionMap.selects.find((t=>t.selection===e));return n?[n]:this.expressionMap.selects.filter((n=>t.columns.some((t=>n.selection===e+"."+t.propertyPath))))}computeCountExpression(){const e=this.expressionMap.mainAlias.name,t=this.expressionMap.mainAlias.metadata.primaryColumns,n=this.escape(e);if(0===this.expressionMap.joinAttributes.length&&0===this.expressionMap.relationIdAttributes.length&&0===this.expressionMap.relationCountAttributes.length)return"COUNT(1)";if("cockroachdb"===this.connection.driver.options.type||re.isPostgresFamily(this.connection.driver))return"COUNT(DISTINCT("+t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(", ")+"))";if(re.isMySQLFamily(this.connection.driver))return"COUNT(DISTINCT "+t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(", ")+")";if("mssql"===this.connection.driver.options.type){const e=t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(", '|;|', ");return 1===t.length?`COUNT(DISTINCT(${e}))`:`COUNT(DISTINCT(CONCAT(${e})))`}return"spanner"===this.connection.driver.options.type?1===t.length?`COUNT(DISTINCT(${n}.${this.escape(t[0].databaseName)}))`:`COUNT(DISTINCT(CONCAT(${t.map((e=>`CAST(${n}.${this.escape(e.databaseName)} AS STRING)`)).join(", '|;|', ")})))`:"COUNT(DISTINCT("+t.map((e=>`${n}.${this.escape(e.databaseName)}`)).join(" || '|;|' || ")+"))"}async executeCountQuery(e){const t=this.computeCountExpression(),n=await this.clone().orderBy().groupBy().offset(void 0).limit(void 0).skip(void 0).take(void 0).select(t,"cnt").setOption("disable-global-order").loadRawResults(e);return n&&n[0]&&n[0].cnt?parseInt(n[0].cnt):0}async executeExistsQuery(e){return(await this.connection.createQueryBuilder().fromDummy().select("1","row_exists").whereExists(this).limit(1).loadRawResults(e)).length>0}applyFindOptions(){if(this.expressionMap.mainAlias.metadata){if(this.findOptions.relationLoadStrategy&&(this.expressionMap.relationLoadStrategy=this.findOptions.relationLoadStrategy),this.findOptions.comment&&this.comment(this.findOptions.comment),this.findOptions.withDeleted&&this.withDeleted(),this.findOptions.select){const e=Array.isArray(this.findOptions.select)?xe.propertyPathsToTruthyObject(this.findOptions.select):this.findOptions.select;this.buildSelect(e,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name)}if(this.selects.length&&this.select(this.selects),this.selects=[],this.findOptions.relations){const e=Array.isArray(this.findOptions.relations)?xe.propertyPathsToTruthyObject(this.findOptions.relations):this.findOptions.relations;this.buildRelations(e,"object"==typeof this.findOptions.select?this.findOptions.select:void 0,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name),!1!==this.findOptions.loadEagerRelations&&"join"===this.expressionMap.relationLoadStrategy&&this.buildEagerRelations(e,"object"==typeof this.findOptions.select?this.findOptions.select:void 0,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name)}if(this.selects.length&&this.addSelect(this.selects),this.findOptions.where&&(this.conditions=this.buildWhere(this.findOptions.where,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name),this.conditions.length&&this.andWhere("("!==this.conditions.substr(0,1)?"("+this.conditions+")":this.conditions)),this.findOptions.order&&this.buildOrder(this.findOptions.order,this.expressionMap.mainAlias.metadata,this.expressionMap.mainAlias.name),this.joins.length&&this.joins.forEach((e=>{e.select&&!e.selection?"inner"===e.type?this.innerJoinAndSelect(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias):this.leftJoinAndSelect(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias):"inner"===e.type?this.innerJoin(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias):this.leftJoin(`${e.parentAlias}.${e.relationMetadata.propertyPath}`,e.alias)})),void 0!==this.findOptions.skip&&this.skip(this.findOptions.skip),void 0!==this.findOptions.take&&this.take(this.findOptions.take),"number"==typeof this.findOptions.cache||"boolean"==typeof this.findOptions.cache?this.cache(this.findOptions.cache):"object"==typeof this.findOptions.cache&&this.cache(this.findOptions.cache.id,this.findOptions.cache.milliseconds),this.findOptions.join&&(this.findOptions.join.leftJoin&&Object.keys(this.findOptions.join.leftJoin).forEach((e=>{this.leftJoin(this.findOptions.join.leftJoin[e],e)})),this.findOptions.join.innerJoin&&Object.keys(this.findOptions.join.innerJoin).forEach((e=>{this.innerJoin(this.findOptions.join.innerJoin[e],e)})),this.findOptions.join.leftJoinAndSelect&&Object.keys(this.findOptions.join.leftJoinAndSelect).forEach((e=>{this.leftJoinAndSelect(this.findOptions.join.leftJoinAndSelect[e],e)})),this.findOptions.join.innerJoinAndSelect&&Object.keys(this.findOptions.join.innerJoinAndSelect).forEach((e=>{this.innerJoinAndSelect(this.findOptions.join.innerJoinAndSelect[e],e)}))),this.findOptions.lock)if("optimistic"===this.findOptions.lock.mode)this.setLock(this.findOptions.lock.mode,this.findOptions.lock.version);else if("pessimistic_read"===this.findOptions.lock.mode||"pessimistic_write"===this.findOptions.lock.mode||"dirty_read"===this.findOptions.lock.mode||"pessimistic_partial_write"===this.findOptions.lock.mode||"pessimistic_write_or_fail"===this.findOptions.lock.mode||"for_no_key_update"===this.findOptions.lock.mode||"for_key_share"===this.findOptions.lock.mode){const e=this.findOptions.lock.tables?this.findOptions.lock.tables.map((e=>{const t=this.expressionMap.aliases.find((t=>t.metadata.tableNameWithoutPrefix===e));if(!t)throw new s(`"${e}" is not part of this query`);return this.escape(t.name)})):void 0;this.setLock(this.findOptions.lock.mode,void 0,e),this.findOptions.lock.onLocked&&this.setOnLocked(this.findOptions.lock.onLocked)}!0===this.findOptions.loadRelationIds?this.loadAllRelationIds():"object"==typeof this.findOptions.loadRelationIds&&this.loadAllRelationIds(this.findOptions.loadRelationIds),!1!==this.findOptions.loadEagerRelations&&_e.joinEagerRelations(this,this.expressionMap.mainAlias.name,this.expressionMap.mainAlias.metadata),!0===this.findOptions.transaction&&(this.expressionMap.useTransaction=!0)}}concatRelationMetadata(e){this.relationMetadatas.push(e)}async executeEntitiesAndRawResults(e){if(!this.expressionMap.mainAlias)throw new s('Alias is not set. Use "from" method to set an alias.');if(("pessimistic_read"===this.expressionMap.lockMode||"pessimistic_write"===this.expressionMap.lockMode||"pessimistic_partial_write"===this.expressionMap.lockMode||"pessimistic_write_or_fail"===this.expressionMap.lockMode||"for_no_key_update"===this.expressionMap.lockMode||"for_key_share"===this.expressionMap.lockMode)&&!e.isTransactionActive)throw new j;if("optimistic"===this.expressionMap.lockMode){const e=this.expressionMap.mainAlias.metadata;if(!e.versionColumn&&!e.updateDateColumn)throw new q(e.name)}const t=new Ie(this.connection,e,this.expressionMap.relationIdAttributes),n=new De(this.connection,e,this.expressionMap.relationCountAttributes);new qe(this.expressionMap).transform(),new Le(this.expressionMap).transform();let a=[],i=[];if((this.expressionMap.skip||this.expressionMap.take)&&this.expressionMap.joinAttributes.length>0){const[t,n]=this.createOrderByCombinedWithSelectExpression("distinctAlias"),i=this.expressionMap.mainAlias.metadata,r=this.expressionMap.mainAlias.name,s=i.primaryColumns.map((e=>{const t=this.escape("distinctAlias"),a=this.escape(re.buildAlias(this.connection.driver,void 0,r,e.databaseName));n[a]||(n[a]="ASC");const i=re.buildAlias(this.connection.driver,void 0,"ids_"+r,e.databaseName);return`${t}.${a} AS ${this.escape(i)}`})),o=this.clone(),c=o.expressionMap.timeTravel;if(a=await new Be(this.connection,e).select(`DISTINCT ${s.join(", ")}`).addSelect(t).from(`(${o.orderBy().timeTravelQuery(!1).getQuery()})`,"distinctAlias").timeTravelQuery(c).offset(this.expressionMap.skip).limit(this.expressionMap.take).orderBy(n).cache(this.expressionMap.cache&&this.expressionMap.cacheId?`${this.expressionMap.cacheId}-pagination`:this.expressionMap.cache,this.expressionMap.cacheDuration).setParameters(this.getParameters()).setNativeParameters(this.expressionMap.nativeParameters).getRawMany(),a.length>0){let t="";const n={};if(i.hasMultiplePrimaryKeys)t=a.map(((e,t)=>i.primaryColumns.map((a=>{const i=`orm_distinct_ids_${t}_${a.databaseName}`,s=re.buildAlias(this.connection.driver,void 0,"ids_"+r,a.databaseName);return n[i]=e[s],`${r}.${a.propertyPath}=:${i}`})).join(" AND "))).join(" OR ");else{const e=re.buildAlias(this.connection.driver,void 0,"ids_"+r,i.primaryColumns[0].databaseName),s=a.map((t=>t[e]));s.every((e=>"number"==typeof e))?t=`${r}.${i.primaryColumns[0].propertyPath} IN (${s.join(", ")})`:(n.orm_distinct_ids=s,t=r+"."+i.primaryColumns[0].propertyPath+" IN (:...orm_distinct_ids)")}a=await this.clone().mergeExpressionMap({extraAppendedAndWhereCondition:t}).setParameters(n).loadRawResults(e)}}else a=await this.loadRawResults(e);if(a.length>0){const r=await t.load(a),s=await n.load(a),o=new Pe(this.expressionMap,this.connection.driver,r,s,this.queryRunner);i=o.transform(a,this.expressionMap.mainAlias),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await e.broadcaster.broadcast("Load",this.expressionMap.mainAlias.metadata,i)}if("query"===this.expressionMap.relationLoadStrategy){const t=new $e(this.connection,e);await Promise.all(this.relationMetadatas.map((async n=>{const a=n.inverseEntityMetadata.target,r=n.inverseEntityMetadata.targetName,s=Array.isArray(this.findOptions.select)?xe.propertyPathsToTruthyObject(this.findOptions.select):this.findOptions.select,o=Array.isArray(this.findOptions.relations)?xe.propertyPathsToTruthyObject(this.findOptions.relations):this.findOptions.relations,c=this.createQueryBuilder(e).select(r).from(a,r).setFindOptions({select:s?xe.deepValue(s,n.propertyPath):void 0,order:this.findOptions.order?xe.deepValue(this.findOptions.order,n.propertyPath):void 0,relations:o?xe.deepValue(o,n.propertyPath):void 0,withDeleted:this.findOptions.withDeleted,relationLoadStrategy:this.findOptions.relationLoadStrategy});if(i.length>0){const e=await t.loadManyToManyRelationIdsAndGroup(n,i,void 0,c);i.forEach((t=>{const a=e.find((e=>e.entity===t));if(a){const e=void 0===a.related?null:a.related;n.setEntityValue(t,e)}}))}})))}return{raw:a,entities:i}}createOrderByCombinedWithSelectExpression(e){const t=this.expressionMap.allOrderBys,n=Object.keys(t).map((t=>{if(-1!==t.indexOf(".")){const n=t.split("."),a=n[0],i=n.slice(1).join("."),r=this.expressionMap.findAliasByName(a).metadata.findColumnWithPropertyPath(i);return this.escape(e)+"."+this.escape(re.buildAlias(this.connection.driver,void 0,a,r.databaseName))}return this.expressionMap.selects.find((e=>e.selection===t||e.aliasName===t))?this.escape(e)+"."+this.escape(t):""})).join(", "),a={};return Object.keys(t).forEach((n=>{if(-1!==n.indexOf(".")){const i=n.split("."),r=i[0],s=i.slice(1).join("."),o=this.expressionMap.findAliasByName(r).metadata.findColumnWithPropertyPath(s);a[this.escape(e)+"."+this.escape(re.buildAlias(this.connection.driver,void 0,r,o.databaseName))]=t[n]}else this.expressionMap.selects.find((e=>e.selection===n||e.aliasName===n))?a[this.escape(e)+"."+this.escape(n)]=t[n]:a[n]=t[n]})),[n,a]}async loadRawResults(e){const[t,n]=this.getQueryAndParameters(),a=t+" -- PARAMETERS: "+JSON.stringify(n,((e,t)=>"bigint"==typeof t?t.toString():t)),i="object"==typeof this.connection.options.cache?this.connection.options.cache:{};let r;const s=i.alwaysEnabled&&!1!==this.expressionMap.cache||!0===this.expressionMap.cache;let o=!1;if(this.connection.queryResultCache&&s)try{if(r=await this.connection.queryResultCache.getFromCache({identifier:this.expressionMap.cacheId,query:a,duration:this.expressionMap.cacheDuration||i.duration||1e3},e),r&&!this.connection.queryResultCache.isExpired(r))return JSON.parse(r.result)}catch(e){if(!i.ignoreErrors)throw e;o=!0}const c=await e.query(t,n,!0);if(!o&&this.connection.queryResultCache&&s)try{await this.connection.queryResultCache.storeInCache({identifier:this.expressionMap.cacheId,query:a,time:(new Date).getTime(),duration:this.expressionMap.cacheDuration||i.duration||1e3,result:JSON.stringify(c.records)},r,e)}catch(e){if(!i.ignoreErrors)throw e}return c.records}mergeExpressionMap(e){return r.assign(this.expressionMap,e),this}normalizeNumber(e){return"number"==typeof e||null==e?e:Number(e)}obtainQueryRunner(){return this.queryRunner||this.connection.createQueryRunner(this.connection.defaultReplicationModeForReads())}buildSelect(e,t,n,a){for(let i in e){if(void 0===e[i]||!1===e[i])continue;const r=a?a+"."+i:i,s=t.findColumnWithPropertyPathStrict(r),o=t.findEmbeddedWithPropertyPath(r),c=t.findRelationWithPropertyPath(r);if(!o&&!s&&!c)throw new P(r,t);s?this.selects.push(n+"."+r):o&&this.buildSelect(e[i],t,n,r)}}buildRelations(e,t,n,a,i){e&&Object.keys(e).forEach((r=>{const s=e[r],o=i?i+"."+r:r,c=n.findEmbeddedWithPropertyPath(o),h=n.findRelationWithPropertyPath(o);if(!c&&!h)throw new P(o,n);if(c)this.buildRelations(s,"object"==typeof t?xe.deepValue(t,c.propertyPath):void 0,n,a,o);else if(h){let e=a+"_"+o.replace(".","_");e=re.buildAlias(this.connection.driver,{joiner:"__"},a,e),!0!==s&&"object"!=typeof s||("query"===this.expressionMap.relationLoadStrategy?this.concatRelationMetadata(h):(this.joins.push({type:"left",select:!0,selection:t&&"object"==typeof t[r]?t[r]:void 0,alias:e,parentAlias:a,relationMetadata:h}),t&&"object"==typeof t[r]&&this.buildSelect(t[r],h.inverseEntityMetadata,e))),"object"==typeof s&&"join"===this.expressionMap.relationLoadStrategy&&this.buildRelations(s,"object"==typeof t?xe.deepValue(t,h.propertyPath):void 0,h.inverseEntityMetadata,e,void 0)}}))}buildEagerRelations(e,t,n,a,i){e&&Object.keys(e).forEach((r=>{const s=e[r],o=i?i+"."+r:r,c=n.findEmbeddedWithPropertyPath(o),h=n.findRelationWithPropertyPath(o);if(!c&&!h)throw new P(o,n);if(c)this.buildEagerRelations(s,"object"==typeof t?xe.deepValue(t,c.propertyPath):void 0,n,a,o);else if(h){let e=a+"_"+o.replace(".","_");e=re.buildAlias(this.connection.driver,{joiner:"__"},a,e),!0!==s&&"object"!=typeof s||h.inverseEntityMetadata.eagerRelations.forEach((n=>{let a=e+"_"+n.propertyPath.replace(".","_");a=re.buildAlias(this.connection.driver,{joiner:"__"},e,a),this.joins.find((e=>e.alias===a))||this.joins.push({type:"left",select:!0,alias:a,parentAlias:e,selection:void 0,relationMetadata:n}),t&&"object"==typeof t[r]&&this.buildSelect(t[r],h.inverseEntityMetadata,e)})),"object"==typeof s&&this.buildEagerRelations(s,"object"==typeof t?xe.deepValue(t,h.propertyPath):void 0,h.inverseEntityMetadata,e,void 0)}}))}buildOrder(e,t,n,a){for(let i in e){if(void 0===e[i])continue;const r=a?a+"."+i:i,s=t.findColumnWithPropertyPathStrict(r),o=t.findEmbeddedWithPropertyPath(r),c=t.findRelationWithPropertyPath(r);if(!o&&!s&&!c)throw new P(r,t);if(s){let t="object"==typeof e[i]?e[i].direction:e[i];t="DESC"===t||"desc"===t||-1===t?"DESC":"ASC";let a="object"==typeof e[i]?e[i].nulls:void 0;a="first"===a?.toLowerCase()?"NULLS FIRST":"last"===a?.toLowerCase()?"NULLS LAST":void 0;let s=`${n}.${r}`;this.addOrderBy(s,t,a)}else if(o)this.buildOrder(e[i],t,n,r);else if(c){let t=n+"_"+r.replace(".","_");t=re.buildAlias(this.connection.driver,{joiner:"__"},n,t),this.joins.find((e=>e.alias===t))||this.joins.push({type:"left",select:!1,alias:t,parentAlias:n,selection:void 0,relationMetadata:c}),this.buildOrder(e[i],c.inverseEntityMetadata,t)}}}buildWhere(e,t,n,a){let i="";if(Array.isArray(e))e.length&&(i=e.map((e=>this.buildWhere(e,t,n,a))).filter((e=>!!e)).map((e=>"("+e+")")).join(" OR "));else{let r=[];for(let i in e){if(void 0===e[i]||null===e[i])continue;const s=a?a+"."+i:i,o=t.findColumnWithPropertyPathStrict(s),c=t.findEmbeddedWithPropertyPath(s),h=t.findRelationWithPropertyPath(s);if(!c&&!o&&!h)throw new P(s,t);if(o){let t=`${n}.${s}`;o.isVirtualProperty&&o.query&&(t=`(${o.query(n)})`);let a=e[i];g.isEqualOperator(e[i])&&(a=e[i].value),o.transformer&&(a instanceof pe?a.transformValue(o.transformer):a=ue.transformTo(o.transformer,a)),r.push(this.createWhereConditionExpression(this.getWherePredicateCondition(t,a)))}else if(c){const a=this.buildWhere(e[i],t,n,s);a&&r.push(a)}else if(h){if("object"==typeof e[i]&&Object.keys(e[i]).every((t=>void 0===e[i][t])))continue;if(g.isFindOperator(e[i]))if("moreThan"===e[i].type||"lessThan"===e[i].type||"moreThanOrEqual"===e[i].type||"lessThanOrEqual"===e[i].type){let t="";"moreThan"===e[i].type?t=">":"lessThan"===e[i].type?t="<":"moreThanOrEqual"===e[i].type?t=">=":"lessThanOrEqual"===e[i].type&&(t="<=");const a=this.subQuery();if(h.isManyToManyOwner)a.select("COUNT(*)").from(h.joinTableName,h.joinTableName).where(h.joinColumns.map((e=>`${h.joinTableName}.${e.propertyName} = ${n}.${e.referencedColumn.propertyName}`)).join(" AND "));else if(h.isManyToManyNotOwner)a.select("COUNT(*)").from(h.inverseRelation.joinTableName,h.inverseRelation.joinTableName).where(h.inverseRelation.inverseJoinColumns.map((e=>`${h.inverseRelation.joinTableName}.${e.propertyName} = ${n}.${e.referencedColumn.propertyName}`)).join(" AND "));else{if(!h.isOneToMany)throw new Error("This relation isn't supported by given find operator");a.select("COUNT(*)").from(h.inverseEntityMetadata.target,h.inverseEntityMetadata.tableName).where(h.inverseRelation.joinColumns.map((e=>`${h.inverseEntityMetadata.tableName}.${e.propertyName} = ${n}.${e.referencedColumn.propertyName}`)).join(" AND "))}this.andWhere(a.getSql()+" "+t+" "+parseInt(e[i].value))}else{if(!(h.isManyToOne||h.isOneToOne&&h.isOneToOneOwner))throw new Error("This relation isn't supported by given find operator");{const t=`${n}.${s}`;r.push(this.createWhereConditionExpression(this.getWherePredicateCondition(t,e[i])))}}else{let t=n+"_"+h.propertyPath.replace(".","_");t=re.buildAlias(this.connection.driver,{joiner:"__"},n,t),this.joins.find((e=>e.alias===t))||this.joins.push({type:"left",select:!1,selection:void 0,alias:t,parentAlias:n,relationMetadata:h});const a=this.buildWhere(e[i],h.inverseEntityMetadata,t);a&&r.push(a)}}}i=r.length?"("+r.join(") AND (")+")":r.join(" AND ")}return i.length?"("+i+")":i}}class je{constructor(){this.generatedMaps=[]}static from(e){const t=new this;return t.raw=e.records,t.affected=e.affected,t}}class Ue extends me{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("SoftDeleteQueryBuilder"),this.expressionMap.aliasNamePrefixingEnabled=!1}getQuery(){let e=this.createUpdateExpression();return e+=this.createCteExpression(),e+=this.createOrderByExpression(),e+=this.createLimitExpression(),this.replacePropertyNamesForTheWholeQuery(e.trim())}async execute(){const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&("soft-delete"===this.expressionMap.queryType?await e.broadcaster.broadcast("BeforeSoftRemove",this.expressionMap.mainAlias.metadata):"restore"===this.expressionMap.queryType&&await e.broadcaster.broadcast("BeforeRecover",this.expressionMap.mainAlias.metadata));const n=new Me(e,this.expressionMap);!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&(this.expressionMap.extraReturningColumns=n.getSoftDeletionReturningColumns());const[a,i]=this.getQueryAndParameters(),r=await e.query(a,i,!0),s=je.from(r);return!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&await n.update(s,this.expressionMap.whereEntities),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&("soft-delete"===this.expressionMap.queryType?await e.broadcaster.broadcast("AfterSoftRemove",this.expressionMap.mainAlias.metadata):"restore"===this.expressionMap.queryType&&await e.broadcaster.broadcast("AfterRecover",this.expressionMap.mainAlias.metadata)),t&&await e.commitTransaction(),s}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}from(e,t){e=g.isEntitySchema(e)?e.options.name:e;const n=this.createFromAlias(e,t);return this.expressionMap.setMainAlias(n),this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("update"))throw new O;return this.expressionMap.returning=e,this}orderBy(e,t="ASC",n){return this.expressionMap.orderBys=e?"object"==typeof e?e:n?{[e]:{order:t,nulls:n}}:{[e]:t}:{},this}addOrderBy(e,t="ASC",n){return this.expressionMap.orderBys[e]=n?{order:t,nulls:n}:t,this}limit(e){return this.expressionMap.limit=e,this}whereEntity(e){if(!this.expressionMap.mainAlias.hasMetadata)throw new s(".whereEntity method can only be used on queries which update real entity table.");this.expressionMap.wheres=[];const t=Array.isArray(e)?e:[e];return t.forEach((e=>{const t=this.expressionMap.mainAlias.metadata.getEntityIdMap(e);if(!t)throw new s("Provided entity does not have ids set, cannot perform operation.");this.orWhereInIds(t)})),this.expressionMap.whereEntities=t,this}updateEntity(e){return this.expressionMap.updateEntity=e,this}createUpdateExpression(){const e=this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata:void 0;if(!e)throw new s(`Cannot get entity metadata for the given alias "${this.expressionMap.mainAlias}"`);if(!e.deleteDateColumn)throw new R(e);const t=[];switch(this.expressionMap.queryType){case"soft-delete":t.push(this.escape(e.deleteDateColumn.databaseName)+" = CURRENT_TIMESTAMP");break;case"restore":t.push(this.escape(e.deleteDateColumn.databaseName)+" = NULL");break;default:throw new s('The queryType must be "soft-delete" or "restore"')}if(e.versionColumn&&t.push(this.escape(e.versionColumn.databaseName)+" = "+this.escape(e.versionColumn.databaseName)+" + 1"),e.updateDateColumn&&t.push(this.escape(e.updateDateColumn.databaseName)+" = CURRENT_TIMESTAMP"),t.length<=0)throw new p;const n=this.createWhereExpression(),a=this.createReturningExpression("update");return""===a?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${t.join(", ")}${n}`:"mssql"===this.connection.driver.options.type?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${t.join(", ")} OUTPUT ${a}${n}`:`UPDATE ${this.getTableName(this.getMainTableName())} SET ${t.join(", ")}${n} RETURNING ${a}`}createOrderByExpression(){const e=this.expressionMap.orderBys;return Object.keys(e).length>0?" ORDER BY "+Object.keys(e).map((t=>"string"==typeof e[t]?this.replacePropertyNames(t)+" "+e[t]:this.replacePropertyNames(t)+" "+e[t].order+" "+e[t].nulls)).join(", "):""}createLimitExpression(){let e=this.expressionMap.limit;if(e){if(re.isMySQLFamily(this.connection.driver))return" LIMIT "+e;throw new N}return""}}class Fe extends me{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("UpdateQueryBuilder"),this.expressionMap.aliasNamePrefixingEnabled=!1}getQuery(){let e=this.createComment();return e+=this.createCteExpression(),e+=this.createUpdateExpression(),e+=this.createOrderByExpression(),e+=this.createLimitExpression(),this.replacePropertyNamesForTheWholeQuery(e.trim())}async execute(){const e=this.obtainQueryRunner();let t=!1;try{!0===this.expressionMap.useTransaction&&!1===e.isTransactionActive&&(await e.startTransaction(),t=!0),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await e.broadcaster.broadcast("BeforeUpdate",this.expressionMap.mainAlias.metadata,this.expressionMap.valuesSet);let n=null,a=null;const i=new Me(e,this.expressionMap),r=[];if(Array.isArray(this.expressionMap.returning)&&this.expressionMap.mainAlias.hasMetadata)for(const e of this.expressionMap.returning)r.push(...this.expressionMap.mainAlias.metadata.findColumnsWithPropertyPath(e));!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&(this.expressionMap.extraReturningColumns=i.getUpdationReturningColumns(),r.push(...this.expressionMap.extraReturningColumns.filter((e=>!r.includes(e))))),r.length>0&&"mssql"===this.connection.driver.options.type&&(n=this.connection.driver.buildTableVariableDeclaration("@OutputTable",r),a="SELECT * FROM @OutputTable");const[s,o]=this.getQueryAndParameters(),c=[n,s,a],h=await e.query(c.filter((e=>null!=e)).join(";\n\n"),o,!0),l=je.from(h);return!0===this.expressionMap.updateEntity&&this.expressionMap.mainAlias.hasMetadata&&this.expressionMap.whereEntities.length>0&&await i.update(l,this.expressionMap.whereEntities),!0===this.expressionMap.callListeners&&this.expressionMap.mainAlias.hasMetadata&&await e.broadcaster.broadcast("AfterUpdate",this.expressionMap.mainAlias.metadata,this.expressionMap.valuesSet),t&&await e.commitTransaction(),l}catch(n){if(t)try{await e.rollbackTransaction()}catch(e){}throw n}finally{e!==this.queryRunner&&await e.release()}}set(e){return this.expressionMap.valuesSet=e,this}where(e,t){this.expressionMap.wheres=[];const n=this.getWhereCondition(e);return n&&(this.expressionMap.wheres=[{type:"simple",condition:n}]),t&&this.setParameters(t),this}andWhere(e,t){return this.expressionMap.wheres.push({type:"and",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}orWhere(e,t){return this.expressionMap.wheres.push({type:"or",condition:this.getWhereCondition(e)}),t&&this.setParameters(t),this}whereInIds(e){return this.where(this.getWhereInIdsCondition(e))}andWhereInIds(e){return this.andWhere(this.getWhereInIdsCondition(e))}orWhereInIds(e){return this.orWhere(this.getWhereInIdsCondition(e))}output(e){return this.returning(e)}returning(e){if(!this.connection.driver.isReturningSqlSupported("update"))throw new O;return this.expressionMap.returning=e,this}orderBy(e,t="ASC",n){return this.expressionMap.orderBys=e?"object"==typeof e?e:n?{[e]:{order:t,nulls:n}}:{[e]:t}:{},this}addOrderBy(e,t="ASC",n){return this.expressionMap.orderBys[e]=n?{order:t,nulls:n}:t,this}limit(e){return this.expressionMap.limit=e,this}whereEntity(e){if(!this.expressionMap.mainAlias.hasMetadata)throw new s(".whereEntity method can only be used on queries which update real entity table.");this.expressionMap.wheres=[];const t=Array.isArray(e)?e:[e];return t.forEach((e=>{const t=this.expressionMap.mainAlias.metadata.getEntityIdMap(e);if(!t)throw new s("Provided entity does not have ids set, cannot perform operation.");this.orWhereInIds(t)})),this.expressionMap.whereEntities=t,this}updateEntity(e){return this.expressionMap.updateEntity=e,this}createUpdateExpression(){const e=this.getValueSet(),t=this.expressionMap.mainAlias.hasMetadata?this.expressionMap.mainAlias.metadata:void 0,n={};for(let t in e)void 0!==e[t]&&(n[t]=e[t]);const a=[],i=[];if(t?(this.createPropertyPath(t,n).forEach((e=>{const r=t.findColumnsWithPropertyPath(e);if(r.length<=0)throw new P(e,t);r.forEach((e=>{if(!e.isUpdate||i.includes(e))return;i.push(e);let t=e.getEntityValue(n);if(!e.referencedColumn||"object"!=typeof t||t instanceof Date||null===t||Buffer.isBuffer(t)?"function"!=typeof t&&(t=this.connection.driver.preparePersistentValue(t,e)):t=e.referencedColumn.getEntityValue(t),"function"==typeof t)a.push(this.escape(e.databaseName)+" = "+t());else if("sap"!==this.connection.driver.options.type&&"spanner"!==this.connection.driver.options.type||null!==t){"mssql"===this.connection.driver.options.type&&(t=this.connection.driver.parametrizeValue(e,t));const n=this.createParameter(t);let i=null;if(!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||-1===this.connection.driver.spatialTypes.indexOf(e.type))i=re.isPostgresFamily(this.connection.driver)&&-1!==this.connection.driver.spatialTypes.indexOf(e.type)?null!=e.srid?`ST_SetSRID(ST_GeomFromGeoJSON(${n}), ${e.srid})::${e.type}`:`ST_GeomFromGeoJSON(${n})::${e.type}`:"mssql"===this.connection.driver.options.type&&-1!==this.connection.driver.spatialTypes.indexOf(e.type)?e.type+"::STGeomFromText("+n+", "+(e.srid||"0")+")":n;else{const t=this.connection.driver.options.legacySpatialSupport?"GeomFromText":"ST_GeomFromText";i=null!=e.srid?`${t}(${n}, ${e.srid})`:`${t}(${n})`}a.push(this.escape(e.databaseName)+" = "+i)}else a.push(this.escape(e.databaseName)+" = NULL")}))})),(a.length>0||0===Object.keys(n).length)&&(t.versionColumn&&-1===i.indexOf(t.versionColumn)&&a.push(this.escape(t.versionColumn.databaseName)+" = "+this.escape(t.versionColumn.databaseName)+" + 1"),t.updateDateColumn&&-1===i.indexOf(t.updateDateColumn)&&a.push(this.escape(t.updateDateColumn.databaseName)+" = CURRENT_TIMESTAMP"))):Object.keys(n).map((e=>{let t=n[e];if("function"==typeof t)a.push(this.escape(e)+" = "+t());else if("sap"!==this.connection.driver.options.type&&"spanner"!==this.connection.driver.options.type||null!==t){const n=this.createParameter(t);a.push(this.escape(e)+" = "+n)}else a.push(this.escape(e)+" = NULL")})),a.length<=0)throw new p;const r=this.createWhereExpression(),s=this.createReturningExpression("update");return""===s?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${a.join(", ")}${r}`:"mssql"===this.connection.driver.options.type?`UPDATE ${this.getTableName(this.getMainTableName())} SET ${a.join(", ")} OUTPUT ${s}${r}`:`UPDATE ${this.getTableName(this.getMainTableName())} SET ${a.join(", ")}${r} RETURNING ${s}`}createOrderByExpression(){const e=this.expressionMap.orderBys;return Object.keys(e).length>0?" ORDER BY "+Object.keys(e).map((t=>"string"==typeof e[t]?this.replacePropertyNames(t)+" "+e[t]:this.replacePropertyNames(t)+" "+e[t].order+" "+e[t].nulls)).join(", "):""}createLimitExpression(){let e=this.expressionMap.limit;if(e){if(re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type)return" LIMIT "+e;throw new N}return""}getValueSet(){if("object"==typeof this.expressionMap.valuesSet)return this.expressionMap.valuesSet;throw new p}}function ke(){me.registerQueryBuilderClass("DeleteQueryBuilder",(e=>new fe(e))),me.registerQueryBuilderClass("InsertQueryBuilder",(e=>new ve(e))),me.registerQueryBuilderClass("RelationQueryBuilder",(e=>new Oe(e))),me.registerQueryBuilderClass("SelectQueryBuilder",(e=>new Be(e))),me.registerQueryBuilderClass("SoftDeleteQueryBuilder",(e=>new Ue(e))),me.registerQueryBuilderClass("UpdateQueryBuilder",(e=>new Fe(e)))}class Ve{static sha1(e){let t,n,a,i,r,s,o,c,h,l=function(e,t){return e<<t|e>>>32-t},u=function(e){let t,n,a="";for(t=7;t>=0;t--)n=e>>>4*t&15,a+=n.toString(16);return a},p=new Array(80),d=1732584193,m=4023233417,y=2562383102,f=271733878,g=3285377520,E=(e=encodeURIComponent(e)).length,b=[];for(n=0;n<E-3;n+=4)a=e.charCodeAt(n)<<24|e.charCodeAt(n+1)<<16|e.charCodeAt(n+2)<<8|e.charCodeAt(n+3),b.push(a);switch(E%4){case 0:n=2147483648;break;case 1:n=e.charCodeAt(E-1)<<24|8388608;break;case 2:n=e.charCodeAt(E-2)<<24|e.charCodeAt(E-1)<<16|32768;break;case 3:n=e.charCodeAt(E-3)<<24|e.charCodeAt(E-2)<<16|e.charCodeAt(E-1)<<8|128}for(b.push(n);b.length%16!=14;)b.push(0);for(b.push(E>>>29),b.push(E<<3&4294967295),t=0;t<b.length;t+=16){for(n=0;n<16;n++)p[n]=b[t+n];for(n=16;n<=79;n++)p[n]=l(p[n-3]^p[n-8]^p[n-14]^p[n-16],1);for(i=d,r=m,s=y,o=f,c=g,n=0;n<=19;n++)h=l(i,5)+(r&s|~r&o)+c+p[n]+1518500249&4294967295,c=o,o=s,s=l(r,30),r=i,i=h;for(n=20;n<=39;n++)h=l(i,5)+(r^s^o)+c+p[n]+1859775393&4294967295,c=o,o=s,s=l(r,30),r=i,i=h;for(n=40;n<=59;n++)h=l(i,5)+(r&s|r&o|s&o)+c+p[n]+2400959708&4294967295,c=o,o=s,s=l(r,30),r=i,i=h;for(n=60;n<=79;n++)h=l(i,5)+(r^s^o)+c+p[n]+3395469782&4294967295,c=o,o=s,s=l(r,30),r=i,i=h;d=d+i&4294967295,m=m+r&4294967295,y=y+s&4294967295,f=f+o&4294967295,g=g+c&4294967295}return h=u(d)+u(m)+u(y)+u(f)+u(g),h.toLowerCase()}}class Qe{constructor(){this.nestedSetColumnNames={left:"nsleft",right:"nsright"},this.materializedPathColumnName="mpath"}getTableName(e){return"string"!=typeof e&&(e=e.name),e.split(".").pop()}tableName(e,t){return t||te(e)}closureJunctionTableName(e){return e+"_closure"}columnName(e,t,n){const a=t||e;return n.length?ee(n.join("_"))+a.replace(/\w\S*/g,(e=>e.charAt(0).toUpperCase()+e.substr(1).toLowerCase())):a}relationName(e){return e}primaryKeyName(e,t){const n=[...t];n.sort();const a=`${this.getTableName(e).replace(".","_")}_${n.join("_")}`;return"PK_"+Ve.sha1(a).substr(0,27)}uniqueConstraintName(e,t){const n=[...t];n.sort();const a=`${this.getTableName(e).replace(".","_")}_${n.join("_")}`;return"UQ_"+Ve.sha1(a).substr(0,27)}relationConstraintName(e,t,n){const a=[...t];a.sort();let i=`${this.getTableName(e).replace(".","_")}_${a.join("_")}`;return n&&(i+=`_${n}`),"REL_"+Ve.sha1(i).substr(0,26)}defaultConstraintName(e,t){const n=`${this.getTableName(e).replace(".","_")}_${t}`;return"DF_"+Ve.sha1(n).substr(0,27)}foreignKeyName(e,t,n,a){const i=[...t];i.sort();const r=`${this.getTableName(e).replace(".","_")}_${i.join("_")}`;return"FK_"+Ve.sha1(r).substr(0,27)}indexName(e,t,n){const a=[...t];a.sort();let i=`${this.getTableName(e).replace(".","_")}_${a.join("_")}`;return n&&(i+=`_${n}`),"IDX_"+Ve.sha1(i).substr(0,26)}checkConstraintName(e,t,n){const a=`${this.getTableName(e).replace(".","_")}_${t}`,i="CHK_"+Ve.sha1(a).substr(0,26);return n?`${i}_ENUM`:i}exclusionConstraintName(e,t){const n=`${this.getTableName(e).replace(".","_")}_${t}`;return"XCL_"+Ve.sha1(n).substr(0,26)}joinColumnName(e,t){return ee(e+"_"+t)}joinTableName(e,t,n,a){return te(e+"_"+n.replace(/\./gi,"_")+"_"+t)}joinTableColumnDuplicationPrefix(e,t){return e+"_"+t}joinTableColumnName(e,t,n){return ee(e+"_"+(n||t))}joinTableInverseColumnName(e,t,n){return this.joinTableColumnName(e,t,n)}prefixTableName(e,t){return e+t}}class We{constructor(e){this["@instanceof"]=Symbol.for("TableColumn"),this.isNullable=!1,this.isGenerated=!1,this.isPrimary=!1,this.isUnique=!1,this.isArray=!1,this.length="",this.zerofill=!1,this.unsigned=!1,e&&(this.name=e.name,this.type=e.type||"",this.length=e.length||"",this.width=e.width,this.charset=e.charset,this.collation=e.collation,this.precision=e.precision,this.scale=e.scale,this.zerofill=e.zerofill||!1,this.unsigned=!!this.zerofill||e.unsigned||!1,this.default=e.default,this.onUpdate=e.onUpdate,this.isNullable=e.isNullable||!1,this.isGenerated=e.isGenerated||!1,this.generationStrategy=e.generationStrategy,this.generatedIdentity=e.generatedIdentity,this.isPrimary=e.isPrimary||!1,this.isUnique=e.isUnique||!1,this.isArray=e.isArray||!1,this.comment=e.comment,this.enum=e.enum,this.enumName=e.enumName,this.primaryKeyConstraintName=e.primaryKeyConstraintName,this.asExpression=e.asExpression,this.generatedType=e.generatedType,this.spatialFeatureType=e.spatialFeatureType,this.srid=e.srid)}clone(){return new We({name:this.name,type:this.type,length:this.length,width:this.width,charset:this.charset,collation:this.collation,precision:this.precision,scale:this.scale,zerofill:this.zerofill,unsigned:this.unsigned,enum:this.enum,enumName:this.enumName,primaryKeyConstraintName:this.primaryKeyConstraintName,asExpression:this.asExpression,generatedType:this.generatedType,default:this.default,onUpdate:this.onUpdate,isNullable:this.isNullable,isGenerated:this.isGenerated,generationStrategy:this.generationStrategy,generatedIdentity:this.generatedIdentity,isPrimary:this.isPrimary,isUnique:this.isUnique,isArray:this.isArray,comment:this.comment,spatialFeatureType:this.spatialFeatureType,srid:this.srid})}}class Ke{constructor(e){this["@instanceof"]=Symbol.for("TableIndex"),this.columnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.isUnique=!!e.isUnique,this.isSpatial=!!e.isSpatial,this.isConcurrent=!!e.isConcurrent,this.isFulltext=!!e.isFulltext,this.isNullFiltered=!!e.isNullFiltered,this.parser=e.parser,this.where=e.where?e.where:""}clone(){return new Ke({name:this.name,columnNames:[...this.columnNames],isUnique:this.isUnique,isSpatial:this.isSpatial,isConcurrent:this.isConcurrent,isFulltext:this.isFulltext,isNullFiltered:this.isNullFiltered,parser:this.parser,where:this.where})}static create(e){return new Ke({name:e.name,columnNames:e.columns.map((e=>e.databaseName)),isUnique:e.isUnique,isSpatial:e.isSpatial,isConcurrent:e.isConcurrent,isFulltext:e.isFulltext,isNullFiltered:e.isNullFiltered,parser:e.parser,where:e.where})}}class He{constructor(e){this["@instanceof"]=Symbol.for("TableForeignKey"),this.columnNames=[],this.referencedColumnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.referencedColumnNames=e.referencedColumnNames,this.referencedDatabase=e.referencedDatabase,this.referencedSchema=e.referencedSchema,this.referencedTableName=e.referencedTableName,this.onDelete=e.onDelete,this.onUpdate=e.onUpdate,this.deferrable=e.deferrable}clone(){return new He({name:this.name,columnNames:[...this.columnNames],referencedColumnNames:[...this.referencedColumnNames],referencedDatabase:this.referencedDatabase,referencedSchema:this.referencedSchema,referencedTableName:this.referencedTableName,onDelete:this.onDelete,onUpdate:this.onUpdate,deferrable:this.deferrable})}static create(e,t){return new He({name:e.name,columnNames:e.columnNames,referencedColumnNames:e.referencedColumnNames,referencedDatabase:e.referencedEntityMetadata.database,referencedSchema:e.referencedEntityMetadata.schema,referencedTableName:e.referencedTablePath,onDelete:e.onDelete,onUpdate:e.onUpdate,deferrable:e.deferrable})}}class Ge{static createTableColumnOptions(e,t){return{name:e.databaseName,length:t.getColumnLength(e),width:e.width,charset:e.charset,collation:e.collation,precision:e.precision,scale:e.scale,zerofill:e.zerofill,unsigned:e.unsigned,asExpression:e.asExpression,generatedType:e.generatedType,default:t.normalizeDefault(e),onUpdate:e.onUpdate,comment:e.comment,isGenerated:e.isGenerated,generationStrategy:e.generationStrategy,generatedIdentity:e.generatedIdentity,isNullable:e.isNullable,type:t.normalizeType(e),isPrimary:e.isPrimary,isUnique:t.normalizeIsUnique(e),isArray:e.isArray||!1,enum:e.enum?e.enum.map((e=>e+"")):e.enum,enumName:e.enumName,primaryKeyConstraintName:e.primaryKeyConstraintName,spatialFeatureType:e.spatialFeatureType,srid:e.srid}}}class ze{constructor(e){this["@instanceof"]=Symbol.for("TableUnique"),this.columnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.deferrable=e.deferrable}clone(){return new ze({name:this.name,columnNames:[...this.columnNames],deferrable:this.deferrable})}static create(e){return new ze({name:e.name,columnNames:e.columns.map((e=>e.databaseName)),deferrable:e.deferrable})}}class Je{constructor(e){this["@instanceof"]=Symbol.for("TableCheck"),this.columnNames=[],this.name=e.name,this.columnNames=e.columnNames,this.expression=e.expression}clone(){return new Je({name:this.name,columnNames:this.columnNames?[...this.columnNames]:[],expression:this.expression})}static create(e){return new Je({name:e.name,expression:e.expression})}}class Ye{constructor(e){this["@instanceof"]=Symbol.for("TableExclusion"),this.name=e.name,this.expression=e.expression}clone(){return new Ye({name:this.name,expression:this.expression})}static create(e){return new Ye({name:e.name,expression:e.expression})}}class Xe{constructor(e){this["@instanceof"]=Symbol.for("Table"),this.columns=[],this.indices=[],this.foreignKeys=[],this.uniques=[],this.checks=[],this.exclusions=[],this.justCreated=!1,this.withoutRowid=!1,e&&(this.database=e.database,this.schema=e.schema,this.name=e.name,e.columns&&(this.columns=e.columns.map((e=>new We(e)))),e.indices&&(this.indices=e.indices.map((e=>new Ke(e)))),e.foreignKeys&&(this.foreignKeys=e.foreignKeys.map((t=>new He({...t,referencedDatabase:t?.referencedDatabase||e.database,referencedSchema:t?.referencedSchema||e.schema})))),e.uniques&&(this.uniques=e.uniques.map((e=>new ze(e)))),e.checks&&(this.checks=e.checks.map((e=>new Je(e)))),e.exclusions&&(this.exclusions=e.exclusions.map((e=>new Ye(e)))),void 0!==e.justCreated&&(this.justCreated=e.justCreated),e.withoutRowid&&(this.withoutRowid=e.withoutRowid),this.engine=e.engine,this.comment=e.comment)}get primaryColumns(){return this.columns.filter((e=>e.isPrimary))}clone(){return new Xe({schema:this.schema,database:this.database,name:this.name,columns:this.columns.map((e=>e.clone())),indices:this.indices.map((e=>e.clone())),foreignKeys:this.foreignKeys.map((e=>e.clone())),uniques:this.uniques.map((e=>e.clone())),checks:this.checks.map((e=>e.clone())),exclusions:this.exclusions.map((e=>e.clone())),justCreated:this.justCreated,withoutRowid:this.withoutRowid,engine:this.engine,comment:this.comment})}addColumn(e){this.columns.push(e)}removeColumn(e){const t=this.columns.find((t=>t.name===e.name));t&&this.columns.splice(this.columns.indexOf(t),1)}addUniqueConstraint(e){if(this.uniques.push(e),1===e.columnNames.length){const t=this.columns.find((t=>t.name===e.columnNames[0]));t&&(t.isUnique=!0)}}removeUniqueConstraint(e){const t=this.uniques.find((t=>t.name===e.name));if(t&&(this.uniques.splice(this.uniques.indexOf(t),1),1===t.columnNames.length)){const e=this.columns.find((e=>e.name===t.columnNames[0]));e&&(e.isUnique=!1)}}addCheckConstraint(e){this.checks.push(e)}removeCheckConstraint(e){const t=this.checks.find((t=>t.name===e.name));t&&this.checks.splice(this.checks.indexOf(t),1)}addExclusionConstraint(e){this.exclusions.push(e)}removeExclusionConstraint(e){const t=this.exclusions.find((t=>t.name===e.name));t&&this.exclusions.splice(this.exclusions.indexOf(t),1)}addForeignKey(e){this.foreignKeys.push(e)}removeForeignKey(e){const t=this.foreignKeys.find((t=>t.name===e.name));t&&this.foreignKeys.splice(this.foreignKeys.indexOf(t),1)}addIndex(e,t=!1){if(this.indices.push(e),1===e.columnNames.length&&e.isUnique&&t){const t=this.columns.find((t=>t.name===e.columnNames[0]));t&&(t.isUnique=!0)}}removeIndex(e,t=!1){const n=this.indices.find((t=>t.name===e.name));if(n&&(this.indices.splice(this.indices.indexOf(n),1),1===n.columnNames.length&&n.isUnique&&t)){const e=this.columns.find((e=>e.name===n.columnNames[0]));e&&(e.isUnique=this.indices.some((t=>1===t.columnNames.length&&t.columnNames[0]===e.name&&!!n.isUnique)))}}findColumnByName(e){return this.columns.find((t=>t.name===e))}findColumnIndices(e){return this.indices.filter((t=>!!t.columnNames.find((t=>t===e.name))))}findColumnForeignKeys(e){return this.foreignKeys.filter((t=>!!t.columnNames.find((t=>t===e.name))))}findColumnUniques(e){return this.uniques.filter((t=>!!t.columnNames.find((t=>t===e.name))))}findColumnChecks(e){return this.checks.filter((t=>!!t.columnNames.find((t=>t===e.name))))}static create(e,t){const n=e.database===t.database?void 0:e.database,a=e.schema===t.options.schema?void 0:e.schema,i={database:e.database,schema:e.schema,name:t.buildTableName(e.tableName,a,n),withoutRowid:e.withoutRowid,engine:e.engine,columns:e.columns.filter((e=>e&&!e.isVirtualProperty)).map((e=>Ge.createTableColumnOptions(e,t))),indices:e.indices.filter((e=>!0===e.synchronize)).map((e=>Ke.create(e))),uniques:e.uniques.map((e=>ze.create(e))),checks:e.checks.map((e=>Je.create(e))),exclusions:e.exclusions.map((e=>Ye.create(e))),comment:e.comment};return new Xe(i)}}class Ze{constructor(e,t,n,a,i){this.id=e,this.timestamp=t,this.name=n,this.instance=a,this.transaction=i}}class et{constructor(e,t,...n){this.value=e,this.type=t,this["@instanceof"]=Symbol.for("MssqlParameter"),this.params=[],this.params=n||[]}}class tt{constructor(e,t){this.connection=e,this.queryRunner=t,this.transaction="all";const{schema:n}=this.connection.driver.options,a=this.connection.driver.database;this.migrationsDatabase=a,this.migrationsSchema=n,this.migrationsTableName=e.options.migrationsTableName||"migrations",this.migrationsTable=this.connection.driver.buildTableName(this.migrationsTableName,n,a)}async executeMigration(e){return this.withQueryRunner((async t=>{await this.createMigrationsTableIfNotExist(t);const n=this.connection.driver.createSchemaBuilder();return g.isRdbmsSchemaBuilder(n)&&await n.createMetadataTableIfNecessary(t),await t.beforeMigration(),await e.instance.up(t),await t.afterMigration(),await this.insertExecutedMigration(t,e),e}))}async getAllMigrations(){return Promise.resolve(this.getMigrations())}async getExecutedMigrations(){return this.withQueryRunner((async e=>(await this.createMigrationsTableIfNotExist(e),await this.loadExecutedMigrations(e))))}async getPendingMigrations(){const e=await this.getAllMigrations(),t=await this.getExecutedMigrations();return e.filter((e=>!t.find((t=>t.name===e.name))))}insertMigration(e){return this.withQueryRunner((t=>this.insertExecutedMigration(t,e)))}deleteMigration(e){return this.withQueryRunner((t=>this.deleteExecutedMigration(t,e)))}async showMigrations(){let e=!1;const t=this.queryRunner||this.connection.createQueryRunner();await this.createMigrationsTableIfNotExist(t);const n=await this.loadExecutedMigrations(t),a=this.getMigrations();for(const t of a){const a=n.find((e=>e.name===t.name));a?this.connection.logger.logSchemaBuild(`[X] ${a.id} ${t.name}`):(e=!0,this.connection.logger.logSchemaBuild(`[ ] ${t.name}`))}return this.queryRunner||await t.release(),e}async executePendingMigrations(){const e=this.queryRunner||this.connection.createQueryRunner();await this.createMigrationsTableIfNotExist(e);const t=this.connection.driver.createSchemaBuilder();g.isRdbmsSchemaBuilder(t)&&await t.createMetadataTableIfNecessary(e);const n=await this.loadExecutedMigrations(e);let a=this.getLatestTimestampMigration(n);const i=this.getMigrations(),r=[],s=i.filter((e=>!n.find((t=>t.name===e.name))));if(!s.length)return this.connection.logger.logSchemaBuild("No migrations are pending"),this.queryRunner||await e.release(),[];if(this.connection.logger.logSchemaBuild(`${n.length} migrations are already loaded in the database.`),this.connection.logger.logSchemaBuild(`${i.length} migrations were found in the source code.`),a&&this.connection.logger.logSchemaBuild(`${a.name} is the last executed migration. It was executed on ${new Date(a.timestamp).toString()}.`),this.connection.logger.logSchemaBuild(`${s.length} migrations are new migrations must be executed.`),"all"===this.transaction){const e=s.filter((e=>!(void 0===e.instance?.transaction)));if(e.length>0){const t=new z(e);throw this.connection.logger.logMigration(`Migrations failed, error: ${t.message}`),t}}const o={each:!0,none:!1,all:!1}[this.transaction];for(const e of s)if(e.instance){const t=e.instance.transaction;e.transaction=void 0===t?o:t}let c=!1;"all"!==this.transaction||e.isTransactionActive||(await e.beforeMigration(),await e.startTransaction(),c=!0);try{for(const t of s)this.fake?await this.insertExecutedMigration(e,t):(t.transaction&&!e.isTransactionActive&&(await e.beforeMigration(),await e.startTransaction(),c=!0),await t.instance.up(e).catch((e=>{throw this.connection.logger.logMigration(`Migration "${t.name}" failed, error: ${e?.message}`),e})).then((async()=>{await this.insertExecutedMigration(e,t),t.transaction&&c&&(await e.commitTransaction(),await e.afterMigration())})).then((()=>{r.push(t),this.connection.logger.logSchemaBuild(`Migration ${t.name} has been ${this.fake?"(fake)":""} executed successfully.`)})));"all"===this.transaction&&c&&(await e.commitTransaction(),await e.afterMigration())}catch(t){if(c)try{await e.rollbackTransaction()}catch(e){}throw t}finally{this.queryRunner||await e.release()}return r}async undoLastMigration(){const e=this.queryRunner||this.connection.createQueryRunner();await this.createMigrationsTableIfNotExist(e);const t=this.connection.driver.createSchemaBuilder();g.isRdbmsSchemaBuilder(t)&&await t.createMetadataTableIfNecessary(e);const n=await this.loadExecutedMigrations(e);let a=this.getLatestExecutedMigration(n);if(!a)return void this.connection.logger.logSchemaBuild("No migrations were found in the database. Nothing to revert!");const i=this.getMigrations().find((e=>e.name===a.name));if(!i)throw new s(`No migration ${a.name} was found in the source code. Make sure you have this migration in your codebase and its included in the connection options.`);this.connection.logger.logSchemaBuild(`${n.length} migrations are already loaded in the database.`),this.connection.logger.logSchemaBuild(`${a.name} is the last executed migration. It was executed on ${new Date(a.timestamp).toString()}.`),this.connection.logger.logSchemaBuild("Now reverting it...");let r=!1;"none"===this.transaction||e.isTransactionActive||(await e.startTransaction(),r=!0);try{this.fake||(await e.beforeMigration(),await i.instance.down(e),await e.afterMigration()),await this.deleteExecutedMigration(e,i),this.connection.logger.logSchemaBuild(`Migration ${i.name} has been ${this.fake?"(fake)":""} reverted successfully.`),r&&await e.commitTransaction()}catch(t){if(r)try{await e.rollbackTransaction()}catch(e){}throw t}finally{this.queryRunner||await e.release()}}async createMigrationsTableIfNotExist(e){"mongodb"!==this.connection.driver.options.type&&(await e.hasTable(this.migrationsTable)||await e.createTable(new Xe({database:this.migrationsDatabase,schema:this.migrationsSchema,name:this.migrationsTable,columns:[{name:"id",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationId}),isGenerated:!0,generationStrategy:"increment",isPrimary:!0,isNullable:!1},{name:"timestamp",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationTimestamp}),isPrimary:!1,isNullable:!1},{name:"name",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationName}),isNullable:!1}]})))}async loadExecutedMigrations(e){return"mongodb"===this.connection.driver.options.type?e.cursor(this.migrationsTableName,{}).sort({_id:-1}).toArray():(await this.connection.manager.createQueryBuilder(e).select().orderBy(this.connection.driver.escape("id"),"DESC").from(this.migrationsTable,this.migrationsTableName).getRawMany()).map((e=>new Ze(parseInt(e.id),parseInt(e.timestamp),e.name)))}getMigrations(){const e=this.connection.migrations.map((e=>{const t=e.name||e.constructor.name,n=parseInt(t.substr(-13),10);if(!n||isNaN(n))throw new s(`${t} migration name is wrong. Migration class name should have a JavaScript timestamp appended.`);return new Ze(void 0,n,t,e)}));return this.checkForDuplicateMigrations(e),e.sort(((e,t)=>e.timestamp-t.timestamp))}checkForDuplicateMigrations(e){const t=e.map((e=>e.name)),n=Array.from(new Set(t.filter(((e,n)=>t.indexOf(e)<n))));if(n.length>0)throw Error(`Duplicate migrations: ${n.join(", ")}`)}getLatestTimestampMigration(e){const t=e.map((e=>e)).sort(((e,t)=>-1*(e.timestamp-t.timestamp)));return t.length>0?t[0]:void 0}getLatestExecutedMigration(e){return e.length>0?e[0]:void 0}async insertExecutedMigration(e,t){const n={};if("mssql"===this.connection.driver.options.type?(n.timestamp=new et(t.timestamp,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationTimestamp})),n.name=new et(t.name,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationName}))):(n.timestamp=t.timestamp,n.name=t.name),"mongodb"===this.connection.driver.options.type){const t=e;await t.databaseConnection.db(this.connection.driver.database).collection(this.migrationsTableName).insertOne(n)}else{const t=e.manager.createQueryBuilder();await t.insert().into(this.migrationsTable).values(n).execute()}}async deleteExecutedMigration(e,t){const n={};if("mssql"===this.connection.driver.options.type?(n.timestamp=new et(t.timestamp,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationTimestamp})),n.name=new et(t.name,this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.migrationName}))):(n.timestamp=t.timestamp,n.name=t.name),"mongodb"===this.connection.driver.options.type){const t=e;await t.databaseConnection.db(this.connection.driver.database).collection(this.migrationsTableName).deleteOne(n)}else{const t=e.manager.createQueryBuilder();await t.delete().from(this.migrationsTable).where(`${t.escape("timestamp")} = :timestamp`).andWhere(`${t.escape("name")} = :name`).setParameters(n).execute()}}async withQueryRunner(e){const t=this.queryRunner||this.connection.createQueryRunner();try{return await e(t)}finally{this.queryRunner||await t.release()}}}function nt(e,t,n){let a=[],i={};return function r(o){i[o]=!0,a.push(o),e[o].forEach((function(e){if(i[e]){if(a.indexOf(e)>=0)throw a.push(e),new s(`Dependency Cycle Found: ${a.join(" -> ")}`)}else r(e)})),a.pop(),t&&0!==e[o].length||-1!==n.indexOf(o)||n.push(o)}}class at{constructor(){this.nodes={},this.outgoingEdges={},this.incomingEdges={}}addNode(e,t){this.hasNode(e)||(this.nodes[e]=2===arguments.length?t:e,this.outgoingEdges[e]=[],this.incomingEdges[e]=[])}removeNode(e){this.hasNode(e)&&(delete this.nodes[e],delete this.outgoingEdges[e],delete this.incomingEdges[e],[this.incomingEdges,this.outgoingEdges].forEach((function(t){Object.keys(t).forEach((function(n){const a=t[n].indexOf(e);a>=0&&t[n].splice(a,1)}))})))}hasNode(e){return this.nodes.hasOwnProperty(e)}getNodeData(e){if(this.hasNode(e))return this.nodes[e];throw new s(`Node does not exist: ${e}`)}setNodeData(e,t){if(!this.hasNode(e))throw new s(`Node does not exist: ${e}`);this.nodes[e]=t}addDependency(e,t){if(!this.hasNode(e))throw new s(`Node does not exist: ${e}`);if(!this.hasNode(t))throw new s(`Node does not exist: ${t}`);return-1===this.outgoingEdges[e].indexOf(t)&&this.outgoingEdges[e].push(t),-1===this.incomingEdges[t].indexOf(e)&&this.incomingEdges[t].push(e),!0}removeDependency(e,t){let n;this.hasNode(e)&&(n=this.outgoingEdges[e].indexOf(t),n>=0&&this.outgoingEdges[e].splice(n,1)),this.hasNode(t)&&(n=this.incomingEdges[t].indexOf(e),n>=0&&this.incomingEdges[t].splice(n,1))}dependenciesOf(e,t){if(this.hasNode(e)){let n=[];nt(this.outgoingEdges,t,n)(e);let a=n.indexOf(e);return a>=0&&n.splice(a,1),n}throw new s(`Node does not exist: ${e}`)}dependantsOf(e,t){if(this.hasNode(e)){let n=[];nt(this.incomingEdges,t,n)(e);let a=n.indexOf(e);return a>=0&&n.splice(a,1),n}throw new s(`Node does not exist: ${e}`)}overallOrder(e){let t=this,n=[],a=Object.keys(this.nodes);if(0===a.length)return n;{let i=nt(this.outgoingEdges,!1,[]);a.forEach((function(e){i(e)}));let r=nt(this.outgoingEdges,e,n);return a.filter((function(e){return 0===t.incomingEdges[e].length})).forEach((function(e){r(e)})),n}}}class it{validateMany(e,t){e.forEach((n=>this.validate(n,e,t))),this.validateDependencies(e),this.validateEagerRelations(e)}validate(e,t,n){if(!e.primaryColumns.length&&!e.isJunction)throw new x(e);if(e.primaryColumns.length>1&&!e.primaryColumns.every(((e,t,n)=>e.primaryKeyConstraintName===n[0].primaryKeyConstraintName)))throw new s(`Entity ${e.name} has multiple primary columns with different constraint names. Constraint names should be the equal.`);if("STI"===e.inheritancePattern||"entity-child"===e.tableType){if(!e.discriminatorColumn)throw new s(`Entity ${e.name} using single-table inheritance, it should also have a discriminator column. Did you forget to put discriminator column options?`);if(void 0===e.discriminatorValue)throw new s(`Entity ${e.name} has an undefined discriminator value. Discriminator value should be defined.`);const n=t.find((t=>t!==e&&("STI"===t.inheritancePattern||"entity-child"===t.tableType)&&t.tableName===e.tableName&&t.discriminatorValue===e.discriminatorValue&&t.inheritanceTree.some((t=>-1!==e.inheritanceTree.indexOf(t)))));if(n)throw new s(`Entities ${e.name} and ${n.name} have the same discriminator values. Make sure they are different while using the @ChildEntity decorator.`)}if(e.relationCounts.forEach((e=>{if(e.relation.isManyToOne||e.relation.isOneToOne)throw new s("Relation count can not be implemented on ManyToOne or OneToOne relations.")})),"mongodb"!==n.options.type&&e.columns.filter((e=>!e.isVirtualProperty)).forEach((t=>{const a=n.normalizeType(t);if(-1===n.supportedDataTypes.indexOf(a))throw new U(t,a,n.options.type);if(t.length&&-1===n.withLengthColumnTypes.indexOf(a))throw new s(`Column ${t.propertyName} of Entity ${e.name} does not support length property.`);if("enum"===t.type&&!t.enum&&!t.enumName)throw new s(`Column "${t.propertyName}" of Entity "${e.name}" is defined as enum, but missing "enum" or "enumName" properties.`)})),(re.isMySQLFamily(n)||"aurora-mysql"===n.options.type)&&e.columns.filter((e=>e.isGenerated&&"uuid"!==e.generationStrategy)).length>1)throw new s(`Error in ${e.name} entity. There can be only one auto-increment column in MySql table.`);if(re.isMySQLFamily(n)&&0===t.filter((e=>e.database)).length&&!n.database)throw new G("database");if("mssql"===n.options.type&&e.columns.filter((e=>e.charset)).length>1)throw new s("Character set specifying is not supported in Sql Server");if("postgres"===n.options.type){const t=e.columns.find((e=>e.asExpression&&(!e.generatedType||"VIRTUAL"===e.generatedType)));if(t)throw new s(`Column "${t.propertyName}" of Entity "${e.name}" is defined as VIRTUAL, but Postgres supports only STORED generated columns.`)}const a=e.create(void 0,{fromDeserializer:!0});e.relations.forEach((e=>{if(e.isManyToMany||e.isOneToMany){if(!1===e.persistenceEnabled)return;const t=e.getEntityValue(a);if(Array.isArray(t))throw new F(e)}})),e.relations.forEach((e=>{if(n.supportedOnDeleteTypes&&e.onDelete&&!n.supportedOnDeleteTypes.includes(e.onDelete))throw new s(`OnDeleteType "${e.onDelete}" is not supported for ${n.options.type}!`);if(n.supportedOnUpdateTypes&&e.onUpdate&&!n.supportedOnUpdateTypes.includes(e.onUpdate))throw new s(`OnUpdateType "${e.onUpdate}" is not valid for ${n.options.type}!`)})),e.relations.forEach((t=>{if(t.isCascadeRemove&&t.inverseRelation&&t.inverseRelation.isCascadeRemove)throw new s(`Relation ${e.name}#${t.propertyName} and ${t.inverseRelation.entityMetadata.name}#${t.inverseRelation.propertyName} both has cascade remove set. This may lead to unexpected circular removals. Please set cascade remove only from one side of relationship.`)})),e.eagerRelations.forEach((e=>{}))}validateDependencies(e){const t=new at;e.forEach((e=>{t.addNode(e.name)})),e.forEach((e=>{e.relationsWithJoinColumns.filter((e=>!e.isNullable)).forEach((n=>{t.addDependency(e.name,n.inverseEntityMetadata.name)}))}));try{t.overallOrder()}catch(e){throw new S(e.toString().replace("Error: Dependency Cycle Found: ",""))}}validateEagerRelations(e){e.forEach((e=>{e.eagerRelations.forEach((t=>{if(t.inverseRelation&&t.inverseRelation.isEager)throw new s(`Circular eager relations are disallowed. ${e.targetName}#${t.propertyPath} contains "eager: true", and its inverse side ${t.inverseEntityMetadata.targetName}#${t.inverseRelation.propertyPath} contains "eager: true" as well. Remove "eager: true" from one side of the relation.`)}))}))}}class rt{}class st{}class ot{}class ct{}class ht{}class lt{}class ut{}class pt{}class dt{}class mt{}class yt{}class ft{static createRelationMaps(e,t,n,a){return a.map((a=>{const i=t.treeParentRelation.joinColumns[0],r=i.referencedColumn??t.primaryColumns[0],s=i.givenDatabaseName||i.databaseName,o=r.givenDatabaseName||r.databaseName,c=a[n+"_"+o],h=a[n+"_"+s];return{id:e.connection.driver.prepareHydratedValue(c,r),parentId:e.connection.driver.prepareHydratedValue(h,i)}}))}static buildChildrenEntityTree(e,t,n,a,i){const r=e.treeChildrenRelation.propertyName;if(0===i.depth)return void(t[r]=[]);const s=e.treeParentRelation.joinColumns[0].referencedColumn??e.primaryColumns[0],o=s.getEntityValue(t),c=a.filter((e=>e.parentId===o)),h=new Set(c.map((e=>e.id)));t[r]=n.filter((e=>h.has(s.getEntityValue(e)))),t[r].forEach((t=>{ft.buildChildrenEntityTree(e,t,n,a,{...i,depth:i.depth-1})}))}static buildParentEntityTree(e,t,n,a){const i=e.treeParentRelation.propertyName,r=e.treeParentRelation.joinColumns[0].referencedColumn??e.primaryColumns[0],s=r.getEntityValue(t),o=a.find((e=>e.id===s)),c=n.find((e=>!!o&&r.getEntityValue(e)===o.parentId));c&&(t[i]=c,ft.buildParentEntityTree(e,t[i],n,a))}}class gt{get metadata(){return this.manager.connection.getMetadata(this.target)}constructor(e,t,n){this.target=e,this.manager=t,this.queryRunner=n}createQueryBuilder(e,t){return this.manager.createQueryBuilder(this.metadata.target,e||this.metadata.targetName,t||this.queryRunner)}hasId(e){return this.manager.hasId(this.metadata.target,e)}getId(e){return this.manager.getId(this.metadata.target,e)}create(e){return this.manager.create(this.metadata.target,e)}merge(e,...t){return this.manager.merge(this.metadata.target,e,...t)}preload(e){return this.manager.preload(this.metadata.target,e)}save(e,t){return this.manager.save(this.metadata.target,e,t)}remove(e,t){return this.manager.remove(this.metadata.target,e,t)}softRemove(e,t){return this.manager.softRemove(this.metadata.target,e,t)}recover(e,t){return this.manager.recover(this.metadata.target,e,t)}insert(e){return this.manager.insert(this.metadata.target,e)}update(e,t){return this.manager.update(this.metadata.target,e,t)}upsert(e,t){return this.manager.upsert(this.metadata.target,e,t)}delete(e){return this.manager.delete(this.metadata.target,e)}softDelete(e){return this.manager.softDelete(this.metadata.target,e)}restore(e){return this.manager.restore(this.metadata.target,e)}exist(e){return this.manager.exists(this.metadata.target,e)}exists(e){return this.manager.exists(this.metadata.target,e)}existsBy(e){return this.manager.existsBy(this.metadata.target,e)}count(e){return this.manager.count(this.metadata.target,e)}countBy(e){return this.manager.countBy(this.metadata.target,e)}sum(e,t){return this.manager.sum(this.metadata.target,e,t)}average(e,t){return this.manager.average(this.metadata.target,e,t)}minimum(e,t){return this.manager.minimum(this.metadata.target,e,t)}maximum(e,t){return this.manager.maximum(this.metadata.target,e,t)}async find(e){return this.manager.find(this.metadata.target,e)}async findBy(e){return this.manager.findBy(this.metadata.target,e)}findAndCount(e){return this.manager.findAndCount(this.metadata.target,e)}findAndCountBy(e){return this.manager.findAndCountBy(this.metadata.target,e)}async findByIds(e){return this.manager.findByIds(this.metadata.target,e)}async findOne(e){return this.manager.findOne(this.metadata.target,e)}async findOneBy(e){return this.manager.findOneBy(this.metadata.target,e)}async findOneById(e){return this.manager.findOneById(this.metadata.target,e)}async findOneOrFail(e){return this.manager.findOneOrFail(this.metadata.target,e)}async findOneByOrFail(e){return this.manager.findOneByOrFail(this.metadata.target,e)}query(e,t){return this.manager.query(e,t)}clear(){return this.manager.clear(this.metadata.target)}increment(e,t,n){return this.manager.increment(this.metadata.target,e,t,n)}decrement(e,t,n){return this.manager.decrement(this.metadata.target,e,t,n)}extend(e){const t=this.constructor,{target:n,manager:a,queryRunner:i}=this,r=class extends t{constructor(e,t,n){super(e,t,n)}};for(const t in e)r.prototype[t]=e[t];return new r(n,a,i)}}class Et extends gt{async findTrees(e){const t=await this.findRoots(e);return await Promise.all(t.map((t=>this.findDescendantsTree(t,e)))),t}findRoots(e){const t=this.metadata.treeParentRelation.joinColumns[0],n=t.givenDatabaseName||t.databaseName,a=this.createQueryBuilder("treeEntity");return _e.applyOptionsToTreeQueryBuilder(a,e),a.where(`${(e=>this.manager.connection.driver.escape("treeEntity"))()}.${(e=>this.manager.connection.driver.escape(e))(n)} IS NULL`).getMany()}findDescendants(e,t){const n=this.createDescendantsQueryBuilder("treeEntity","treeClosure",e);return _e.applyOptionsToTreeQueryBuilder(n,t),n.getMany()}async findDescendantsTree(e,t){const n=this.createDescendantsQueryBuilder("treeEntity","treeClosure",e);_e.applyOptionsToTreeQueryBuilder(n,t);const a=await n.getRawAndEntities(),i=ft.createRelationMaps(this.manager,this.metadata,"treeEntity",a.raw);return ft.buildChildrenEntityTree(this.metadata,e,a.entities,i,{depth:-1,...t}),e}countDescendants(e){return this.createDescendantsQueryBuilder("treeEntity","treeClosure",e).getCount()}createDescendantsQueryBuilder(e,t,n){const a=e=>this.manager.connection.driver.escape(e);if("closure-table"===this.metadata.treeType){const i=this.metadata.closureJunctionTable.descendantColumns.map((n=>a(t)+"."+a(n.propertyPath)+" = "+a(e)+"."+a(n.referencedColumn.propertyPath))).join(" AND "),r={},s=this.metadata.closureJunctionTable.ancestorColumns.map((e=>(r[e.referencedColumn.propertyName]=e.referencedColumn.getEntityValue(n),a(t)+"."+a(e.propertyPath)+" = :"+e.referencedColumn.propertyName))).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.closureJunctionTable.tableName,t,i).where(s).setParameters(r)}if("nested-set"===this.metadata.treeType){const t=e+"."+this.metadata.nestedSetLeftColumn.propertyPath+" BETWEEN joined."+this.metadata.nestedSetLeftColumn.propertyPath+" AND joined."+this.metadata.nestedSetRightColumn.propertyPath,a={},i=this.metadata.treeParentRelation.joinColumns.map((e=>{const t=e.referencedColumn.propertyPath.replace(".","_");return a[t]=e.referencedColumn.getEntityValue(n),"joined."+e.referencedColumn.propertyPath+" = :"+t})).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.targetName,"joined",t).where(i,a)}if("materialized-path"===this.metadata.treeType)return this.createQueryBuilder(e).where((t=>{const a=t.subQuery().select(`${this.metadata.targetName}.${this.metadata.materializedPathColumn.propertyPath}`,"path").from(this.metadata.target,this.metadata.targetName).whereInIds(this.metadata.getEntityIdMap(n));return re.isSQLiteFamily(this.manager.connection.driver)?`${e}.${this.metadata.materializedPathColumn.propertyPath} LIKE ${a.getQuery()} || '%'`:`${e}.${this.metadata.materializedPathColumn.propertyPath} LIKE NULLIF(CONCAT(${a.getQuery()}, '%'), '%')`}));throw new s("Supported only in tree entities")}findAncestors(e,t){const n=this.createAncestorsQueryBuilder("treeEntity","treeClosure",e);return _e.applyOptionsToTreeQueryBuilder(n,t),n.getMany()}async findAncestorsTree(e,t){const n=this.createAncestorsQueryBuilder("treeEntity","treeClosure",e);_e.applyOptionsToTreeQueryBuilder(n,t);const a=await n.getRawAndEntities(),i=ft.createRelationMaps(this.manager,this.metadata,"treeEntity",a.raw);return ft.buildParentEntityTree(this.metadata,e,a.entities,i),e}countAncestors(e){return this.createAncestorsQueryBuilder("treeEntity","treeClosure",e).getCount()}createAncestorsQueryBuilder(e,t,n){if("closure-table"===this.metadata.treeType){const a=this.metadata.closureJunctionTable.ancestorColumns.map((n=>t+"."+n.propertyPath+" = "+e+"."+n.referencedColumn.propertyPath)).join(" AND "),i={},r=this.metadata.closureJunctionTable.descendantColumns.map((e=>(i[e.referencedColumn.propertyName]=e.referencedColumn.getEntityValue(n),t+"."+e.propertyPath+" = :"+e.referencedColumn.propertyName))).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.closureJunctionTable.tableName,t,a).where(r).setParameters(i)}if("nested-set"===this.metadata.treeType){const t="joined."+this.metadata.nestedSetLeftColumn.propertyPath+" BETWEEN "+e+"."+this.metadata.nestedSetLeftColumn.propertyPath+" AND "+e+"."+this.metadata.nestedSetRightColumn.propertyPath,a={},i=this.metadata.treeParentRelation.joinColumns.map((e=>{const t=e.referencedColumn.propertyPath.replace(".","_");return a[t]=e.referencedColumn.getEntityValue(n),"joined."+e.referencedColumn.propertyPath+" = :"+t})).join(" AND ");return this.createQueryBuilder(e).innerJoin(this.metadata.targetName,"joined",t).where(i,a)}if("materialized-path"===this.metadata.treeType)return this.createQueryBuilder(e).where((t=>{const a=t.subQuery().select(`${this.metadata.targetName}.${this.metadata.materializedPathColumn.propertyPath}`,"path").from(this.metadata.target,this.metadata.targetName).whereInIds(this.metadata.getEntityIdMap(n));return re.isSQLiteFamily(this.manager.connection.driver)?`${a.getQuery()} LIKE ${e}.${this.metadata.materializedPathColumn.propertyPath} || '%'`:`${a.getQuery()} LIKE CONCAT(${e}.${this.metadata.materializedPathColumn.propertyPath}, '%')`}));throw new s("Supported only in tree entities")}}class bt{transform(e,t,n,a=!1){return this.groupAndTransform(e,t,n,a),e}groupAndTransform(e,t,n,a=!1){n.nonVirtualColumns.forEach((n=>{const a=n.getEntityValue(t);void 0!==a&&n.setEntityValue(e,a)})),n.relations.length&&n.relations.forEach((n=>{let i=n.getEntityValue(e);const s=n.getEntityValue(t,a);if(void 0!==s)if(n.isOneToMany||n.isManyToMany){if(!Array.isArray(s))return;i||(i=[],n.setEntityValue(e,i)),s.forEach((e=>{let t=i.find((t=>n.inverseEntityMetadata.compareEntities(e,t)));const r=n.inverseEntityMetadata.findInheritanceMetadata(e);t||(t=r.create(void 0,{fromDeserializer:!0}),i.push(t)),this.groupAndTransform(t,e,r,a)}))}else{if(!r.isObject(s))return void(r.isObject(i)||n.setEntityValue(e,s));const t=n.inverseEntityMetadata.findInheritanceMetadata(s);i||(i=t.create(void 0,{fromDeserializer:!0}),n.setEntityValue(e,i)),this.groupAndTransform(i,s,t,a)}}))}}class Tt{constructor(e,t,n,a){this.plainEntity=e,this.metadata=t,this.parentLoadMapItem=n,this.relation=a}get target(){return this.metadata.target}get id(){return this.metadata.getEntityIdMixedMap(this.plainEntity)}}class wt{constructor(){this.loadMapItems=[]}get mainLoadMapItem(){return this.loadMapItems.find((e=>!e.relation&&!e.parentLoadMapItem))}addLoadMap(e){this.loadMapItems.find((t=>t.target===e.target&&t.id===e.id))||this.loadMapItems.push(e)}fillEntities(e,t){t.forEach((t=>{const n=this.loadMapItems.find((n=>n.target===e&&n.metadata.compareEntities(t,n.plainEntity)));n&&(n.entity=t)}))}groupByTargetIds(){const e=[];return this.loadMapItems.forEach((t=>{let n=e.find((e=>e.target===t.target));n||(n={target:t.target,ids:[]},e.push(n)),n.ids.push(t.id)})),e}}class Nt{constructor(e){this.manager=e}async transform(e,t){if(!t.hasAllPrimaryKeys(e))return Promise.reject("Given object does not have a primary column, cannot transform it to database entity.");const n=new wt,a=(e,i,r,s)=>{const o=new Tt(e,i,r,s);n.addLoadMap(o),i.extractRelationValuesFromEntity(e,t.relations).filter((e=>null!=e)).forEach((([e,t,n])=>a(t,n,o,e)))};return a(e,t),await Promise.all(n.groupByTargetIds().map((e=>this.manager.findByIds(e.target,e.ids).then((t=>n.fillEntities(e.target,t)))))),n.loadMapItems.forEach((e=>{e.relation&&e.entity&&e.parentLoadMapItem&&e.parentLoadMapItem.entity&&(e.relation.isManyToMany||e.relation.isOneToMany?(e.parentLoadMapItem.entity[e.relation.propertyName]||(e.parentLoadMapItem.entity[e.relation.propertyName]=[]),e.parentLoadMapItem.entity[e.relation.propertyName].push(e.entity)):e.parentLoadMapItem.entity[e.relation.propertyName]=e.entity)})),n.mainLoadMapItem?n.mainLoadMapItem.entity:void 0}}class At{get repository(){const e=this.getCustomRepositoryTarget(this);if(!e)throw new v(this.constructor);return this.manager.getRepository(e)}get treeRepository(){const e=this.getCustomRepositoryTarget(this);if(!e)throw new v(this.constructor);return this.manager.getTreeRepository(e)}createQueryBuilder(e){const t=this.getCustomRepositoryTarget(this.constructor);if(!t)throw new v(this.constructor);return this.manager.getRepository(t).createQueryBuilder(e)}createQueryBuilderFor(e,t){return this.getRepositoryFor(e).createQueryBuilder(t)}getRepositoryFor(e){return this.manager.getRepository(e)}getTreeRepositoryFor(e){return this.manager.getTreeRepository(e)}getCustomRepositoryTarget(e){const t=ra().entityRepositories.find((t=>t.target===("function"==typeof e?e:e.constructor)));if(!t)throw new m(e);return t.entity}}class Ct{constructor(e){this.subjects=[...e],this.metadatas=this.getUniqueMetadatas(this.subjects)}sort(e){if(!this.metadatas.length)return this.subjects;const t=[];if("delete"===e){const e=this.subjects.filter((e=>!e.entity&&!e.databaseEntity));t.push(...e),this.removeAlreadySorted(e)}const n=this.getNonNullableDependencies();let a=this.toposort(n);"insert"===e&&(a=a.reverse()),a.forEach((e=>{const n=this.subjects.filter((t=>t.metadata.targetName===e||t.metadata.inheritanceTree.some((t=>t.name===e))));t.push(...n),this.removeAlreadySorted(n)}));const i=this.getDependencies();let r=this.toposort(i);return"insert"===e&&(r=r.reverse()),r.forEach((e=>{const n=this.subjects.filter((t=>t.metadata.targetName===e));t.push(...n),this.removeAlreadySorted(n)})),t.push(...this.subjects),t}removeAlreadySorted(e){e.forEach((e=>{this.subjects.splice(this.subjects.indexOf(e),1)}))}getUniqueMetadatas(e){const t=[];return e.forEach((e=>{-1===t.indexOf(e.metadata)&&t.push(e.metadata)})),t}getNonNullableDependencies(){return this.metadatas.reduce(((e,t)=>(t.relationsWithJoinColumns.forEach((n=>{n.isNullable||e.push([t.targetName,n.inverseEntityMetadata.targetName])})),e)),[])}getDependencies(){return this.metadatas.reduce(((e,t)=>(t.relationsWithJoinColumns.forEach((n=>{n.inverseEntityMetadata!==t&&e.push([t.targetName,n.inverseEntityMetadata.targetName])})),e)),[])}toposort(e){const t=function(e){let t=[];for(let n=0,a=e.length;n<a;n++){let a=e[n];t.indexOf(a[0])<0&&t.push(a[0]),t.indexOf(a[1])<0&&t.push(a[1])}return t}(e);let n=t.length,a=new Array(n),i={},r=n;for(;r--;)i[r]||o(t[r],r,[]);function o(r,c,h){if(h.indexOf(r)>=0)throw new s("Cyclic dependency: "+JSON.stringify(r));if(!~t.indexOf(r))throw new s("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(r));if(i[c])return;i[c]=!0;let l=e.filter((function(e){return e[0]===r}));if(c=l.length){let e=h.concat(r);do{let n=l[--c][1];o(n,t.indexOf(n),e)}while(c)}a[--n]=r}return a}}var Mt,vt=n(74353),Rt=n.n(vt);class St{static normalizeHydratedDate(e){return e&&"string"==typeof e?new Date(e):e}static mixedDateToDateString(e){return e instanceof Date?this.formatZerolessValue(e.getFullYear(),4)+"-"+this.formatZerolessValue(e.getMonth()+1)+"-"+this.formatZerolessValue(e.getDate()):e}static mixedDateToDate(e,t=!1,n=!0){let a="string"==typeof e?Rt()(e).toDate():e;return t&&(a=new Date(a.getUTCFullYear(),a.getUTCMonth(),a.getUTCDate(),a.getUTCHours(),a.getUTCMinutes(),a.getUTCSeconds(),a.getUTCMilliseconds())),n||a.setUTCMilliseconds(0),a}static mixedDateToTimeString(e,t=!1){return e instanceof Date?this.formatZerolessValue(e.getHours())+":"+this.formatZerolessValue(e.getMinutes())+(t?"":":"+this.formatZerolessValue(e.getSeconds())):e}static mixedTimeToDate(e){if("string"==typeof e){const[t,n,a]=e.split(":"),i=new Date;return t&&i.setHours(parseInt(t)),n&&i.setMinutes(parseInt(n)),a&&i.setSeconds(parseInt(a)),i}return e}static mixedTimeToString(e,t=!1){return"string"==typeof(e=e instanceof Date?e.getHours()+":"+e.getMinutes()+(t?"":":"+e.getSeconds()):e)?e.split(":").map((e=>1===e.length?"0"+e:e)).join(":"):e}static mixedDateToDatetimeString(e,t){if("string"==typeof e&&(e=new Date(e)),e instanceof Date){let n=this.formatZerolessValue(e.getFullYear(),4)+"-"+this.formatZerolessValue(e.getMonth()+1)+"-"+this.formatZerolessValue(e.getDate())+" "+this.formatZerolessValue(e.getHours())+":"+this.formatZerolessValue(e.getMinutes())+":"+this.formatZerolessValue(e.getSeconds());t&&(n+=`.${this.formatMilliseconds(e.getMilliseconds())}`),e=n}return e}static mixedDateToUtcDatetimeString(e){return"string"==typeof e&&(e=new Date(e)),e instanceof Date?this.formatZerolessValue(e.getUTCFullYear(),4)+"-"+this.formatZerolessValue(e.getUTCMonth()+1)+"-"+this.formatZerolessValue(e.getUTCDate())+" "+this.formatZerolessValue(e.getUTCHours())+":"+this.formatZerolessValue(e.getUTCMinutes())+":"+this.formatZerolessValue(e.getUTCSeconds())+"."+this.formatMilliseconds(e.getUTCMilliseconds()):e}static simpleArrayToString(e){return Array.isArray(e)?e.map((e=>String(e))).join(","):e}static stringToSimpleArray(e){return"string"==typeof e?e.length>0?e.split(","):[]:e}static simpleJsonToString(e){return JSON.stringify(e)}static stringToSimpleJson(e){return"string"==typeof e?JSON.parse(e):e}static simpleEnumToString(e){return""+e}static stringToSimpleEnum(e,t){return t.enum&&!isNaN(e)&&t.enum.indexOf(parseInt(e))>=0&&(e=parseInt(e)),e}static formatZerolessValue(e,t=2){const n="0".repeat(t);return String(`${n}${e}`).slice(-t)}static formatMilliseconds(e){return e<10?"00"+e:e<100?"0"+e:String(e)}}class Ot{compute(e){e.forEach((t=>{this.computeDiffColumns(t),this.computeDiffRelationalColumns(e,t)}))}computeDiffColumns(e){e.entity&&e.metadata.columns.forEach((t=>{if(t.isVirtual||t.isDiscriminator)return;const n=e.changeMaps.find((e=>e.column===t));n&&e.changeMaps.splice(e.changeMaps.indexOf(n),1);const a=t.getEntityValue(e.entity);if(void 0!==a){if(e.databaseEntity){const n="json"!==t.type&&"jsonb"!==t.type;let i=t.getEntityValue(e.databaseEntity,n);if(t.relationMetadata){if(null!=t.relationMetadata.getEntityValue(e.entity))return}let r=a;if(null!==a){switch(t.type){case"date":r=St.mixedDateToDateString(a);break;case"time":case"time with time zone":case"time without time zone":case"timetz":r=St.mixedDateToTimeString(a);break;case"datetime":case"datetime2":case Date:case"timestamp":case"timestamp without time zone":case"timestamp with time zone":case"timestamp with local time zone":case"timestamptz":r=St.mixedDateToUtcDatetimeString(a),i=St.mixedDateToUtcDatetimeString(i);break;case"json":case"jsonb":if(xe.deepCompare(a,i))return;break;case"simple-array":r=St.simpleArrayToString(a),i=St.simpleArrayToString(i);break;case"simple-enum":r=St.simpleEnumToString(a),i=St.simpleEnumToString(i);break;case"simple-json":r=St.simpleJsonToString(a),i=St.simpleJsonToString(i)}t.transformer&&(r=ue.transformTo(t.transformer,a))}if(Buffer.isBuffer(r)&&Buffer.isBuffer(i)){if(r.equals(i))return}else if(r===i)return}e.diffColumns.includes(t)||e.diffColumns.push(t),e.changeMaps.push({column:t,value:a})}}))}computeDiffRelationalColumns(e,t){t.entity&&t.metadata.relationsWithJoinColumns.forEach((n=>{let a=n.getEntityValue(t.entity);if(void 0===a)return;if(t.databaseEntity){let e=a;null!==e&&r.isObject(e)&&(e=n.getRelationIdMap(e));const i=n.getEntityValue(t.databaseEntity);if(xe.compareIds(e,i))return;t.diffRelations.push(n)}const i=e.find((e=>e.mustBeInserted&&e.entity===a));i&&(a=i);const s=t.changeMaps.find((e=>e.relation===n));s?s.value=a:t.changeMaps.push({relation:n,value:a})}))}}class xt extends s{constructor(){super("Nested sets do not support multiple root entities.")}}class Pt{constructor(e){this.queryRunner=e}async insert(e){const t=e=>this.queryRunner.connection.driver.escape(e),n=this.getTableName(e.metadata.tablePath),a=t(e.metadata.nestedSetLeftColumn.databaseName),i=t(e.metadata.nestedSetRightColumn.databaseName);let r=e.metadata.treeParentRelation.getEntityValue(e.entity);!r&&e.parentSubject&&e.parentSubject.entity&&(r=e.parentSubject.insertedValueSet?e.parentSubject.insertedValueSet:e.parentSubject.entity);const s=e.metadata.getEntityIdMap(r);let o;if(s&&(o=await this.queryRunner.manager.createQueryBuilder().select(e.metadata.targetName+"."+e.metadata.nestedSetRightColumn.propertyPath,"right").from(e.metadata.target,e.metadata.targetName).whereInIds(s).getRawOne().then((e=>{const t=e?e.right:void 0;return"string"==typeof t?parseInt(t):t}))),void 0!==o)await this.queryRunner.query(`UPDATE ${n} SET ${a} = CASE WHEN ${a} > ${o} THEN ${a} + 2 ELSE ${a} END,${i} = ${i} + 2 WHERE ${i} >= ${o}`),xe.mergeDeep(e.insertedValueSet,e.metadata.nestedSetLeftColumn.createValueMap(o),e.metadata.nestedSetRightColumn.createValueMap(o+1));else{if(!await this.isUniqueRootEntity(e,r))throw new xt;xe.mergeDeep(e.insertedValueSet,e.metadata.nestedSetLeftColumn.createValueMap(1),e.metadata.nestedSetRightColumn.createValueMap(2))}}async update(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.entity);let n=e.databaseEntity;if(!n&&t&&(n=e.metadata.treeChildrenRelation.getEntityValue(t).find((t=>Object.entries(e.identifier).every((([e,n])=>t[e]===n))))),void 0===n||void 0===t)return;const a=e.metadata.treeParentRelation.getEntityValue(n),i=e.metadata.getEntityIdMap(a),r=e.metadata.getEntityIdMap(t);if(!xe.compareIds(i,r))if(t){const t=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(e.metadata.tablePath),i=t(e.metadata.nestedSetLeftColumn.databaseName),s=t(e.metadata.nestedSetRightColumn.databaseName),o=e.metadata.getEntityIdMap(n);let c,h;if(o&&(c=(await this.getNestedSetIds(e.metadata,o))[0]),r&&(h=(await this.getNestedSetIds(e.metadata,r))[0]),void 0!==c&&void 0!==h){const e=h.left>c.left,t=c.right-c.left+1;let n;n=e?h.left-c.right:h.right-c.left;const r=`WHEN ${i} >= ${c.left} AND ${i} < ${c.right} THEN ${i} + ${n} `,o=`WHEN ${s} > ${c.left} AND ${s} <= ${c.right} THEN ${s} + ${n} `;e?await this.queryRunner.query(`UPDATE ${a} SET ${i} = CASE WHEN ${i} > ${c.right} AND ${i} <= ${h.left} THEN ${i} - ${t} `+r+`ELSE ${i} END, `+`${s} = CASE `+`WHEN ${s} > ${c.right} AND `+`${s} < ${h.left} `+`THEN ${s} - ${t} `+o+`ELSE ${s} END`):await this.queryRunner.query(`UPDATE ${a} SET ${i} = CASE WHEN ${i} < ${c.left} AND ${i} > ${h.right} THEN ${i} + ${t} `+r+`ELSE ${i} END, `+`${s} = CASE `+`WHEN ${s} < ${c.left} AND `+`${s} >= ${h.right} `+`THEN ${s} + ${t} `+o+`ELSE ${s} END`)}}else if(!await this.isUniqueRootEntity(e,t))throw new xt}async remove(e){Array.isArray(e)||(e=[e]);const t=e[0].metadata,n=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(t.tablePath),i=n(t.nestedSetLeftColumn.databaseName),r=n(t.nestedSetRightColumn.databaseName);let s=[];for(const n of e){const e=t.getEntityIdMap(n.entity);e&&s.push(e)}let o=await this.getNestedSetIds(t,s);for(const e of o){const t=e.right-e.left+1;await this.queryRunner.query(`UPDATE ${a} SET ${i} = CASE WHEN ${i} > ${e.left} THEN ${i} - ${t} ELSE ${i} END, ${r} = CASE WHEN ${r} > ${e.right} THEN ${r} - ${t} ELSE ${r} END`)}}getNestedSetIds(e,t){const n={left:`${e.targetName}.${e.nestedSetLeftColumn.propertyPath}`,right:`${e.targetName}.${e.nestedSetRightColumn.propertyPath}`},a=this.queryRunner.manager.createQueryBuilder();return Object.entries(n).forEach((([e,t])=>{a.addSelect(t,e)})),a.from(e.target,e.targetName).whereInIds(t).orderBy(n.right,"DESC").getRawMany().then((e=>{const t=[];for(const a of e){const e={};for(const t of Object.keys(n)){const n=a?a[t]:void 0;e[t]="string"==typeof n?parseInt(n):n}t.push(e)}return t}))}async isUniqueRootEntity(e,t){const n=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(e.metadata.tablePath),i=[],r=e.metadata.treeParentRelation.joinColumns.map((e=>{const a=n(e.databaseName),r=e.getEntityValue(t);return null==r?`${a} IS NULL`:(i.push(r),`${a} = ${this.queryRunner.connection.driver.createParameter("entity_"+e.databaseName,i.length-1)}`)})).join(" AND "),s="count",o=await this.queryRunner.query(`SELECT COUNT(1) AS ${n(s)} FROM ${a} WHERE ${r}`,i,!0);return 0===parseInt(o.records[0][s])}getTableName(e){return e.split(".").map((e=>""===e?e:this.queryRunner.connection.driver.escape(e))).join(".")}}class It{constructor(e){this.queryRunner=e}async insert(e){const t={};e.metadata.closureJunctionTable.ancestorColumns.forEach((n=>{t[n.databaseName]=e.identifier})),e.metadata.closureJunctionTable.descendantColumns.forEach((n=>{t[n.databaseName]=e.identifier})),await this.queryRunner.manager.createQueryBuilder().insert().into(e.metadata.closureJunctionTable.tablePath).values(t).updateEntity(!1).callListeners(!1).execute();let n=e.metadata.treeParentRelation.getEntityValue(e.entity);if(!n&&e.parentSubject&&e.parentSubject.entity&&(n=e.parentSubject.insertedValueSet?e.parentSubject.insertedValueSet:e.parentSubject.entity),n){const t=e=>this.queryRunner.connection.driver.escape(e),a=this.getTableName(e.metadata.closureJunctionTable.tablePath),i=[],r=e.metadata.closureJunctionTable.ancestorColumns.map((e=>t(e.databaseName))),s=e.metadata.closureJunctionTable.descendantColumns.map((e=>t(e.databaseName))),o=e.metadata.primaryColumns.map((t=>(i.push(t.getEntityValue(e.insertedValueSet?e.insertedValueSet:e.entity)),this.queryRunner.connection.driver.createParameter("child_entity_"+t.databaseName,i.length-1)))),c=e.metadata.closureJunctionTable.descendantColumns.map((a=>{const r=t(a.databaseName),s=a.referencedColumn.getEntityValue(n);if(!s)throw new M(e.metadata.name);return i.push(s),`${r} = ${this.queryRunner.connection.driver.createParameter("parent_entity_"+a.referencedColumn.databaseName,i.length-1)}`}));await this.queryRunner.query(`INSERT INTO ${a} (${[...r,...s].join(", ")}) SELECT ${r.join(", ")}, ${o.join(", ")} FROM ${a} WHERE ${c.join(" AND ")}`,i)}}async update(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.entity);let n=e.databaseEntity;if(!n&&t&&(n=e.metadata.treeChildrenRelation.getEntityValue(t).find((t=>Object.entries(e.identifier).every((([e,n])=>t[e]===n))))),void 0===n||void 0===t)return;const a=e.metadata.treeParentRelation.getEntityValue(n),i=e.metadata.getEntityIdMap(a),r=e.metadata.getEntityIdMap(t);if(xe.compareIds(i,r))return;const s=e=>this.queryRunner.connection.driver.escape(e),o=e.metadata.closureJunctionTable,c=o.ancestorColumns.map((e=>s(e.databaseName))),h=o.descendantColumns.map((e=>s(e.databaseName))),l=(e,t)=>{const n=`sub${t}`,a=e.createQueryBuilder().select(h.join(", ")).from(o.tablePath,n);for(const e of o.ancestorColumns)a.andWhere(`${s(n)}.${s(e.databaseName)} = :value_${e.referencedColumn.databaseName}`);return e.createQueryBuilder().select(h.join(", ")).from(`(${a.getQuery()})`,t).setParameters(a.getParameters()).getQuery()},u={};for(const t of e.metadata.primaryColumns)u[`value_${t.databaseName}`]=n[t.databaseName];if(await this.queryRunner.manager.createQueryBuilder().delete().from(o.tablePath).where((e=>`(${h.join(", ")}) IN (${l(e,"descendant")})`)).andWhere((e=>`(${c.join(", ")}) NOT IN (${l(e,"ancestor")})`)).setParameters(u).execute(),t){const a=[],i=this.getTableName(o.tablePath),r=s("supertree"),l=s("subtree"),u=[...c.map((e=>`${r}.${e}`)),...h.map((e=>`${l}.${e}`))],p=e.metadata.closureJunctionTable.ancestorColumns.map((e=>{const t=s(e.databaseName),i=e.referencedColumn.getEntityValue(n);a.push(i);const r=this.queryRunner.connection.driver.createParameter("entity_"+e.referencedColumn.databaseName,a.length-1);return`${l}.${t} = ${r}`})),d=e.metadata.closureJunctionTable.descendantColumns.map((n=>{const i=s(n.databaseName),o=n.referencedColumn.getEntityValue(t);if(!o)throw new M(e.metadata.name);a.push(o);const c=this.queryRunner.connection.driver.createParameter("parent_entity_"+n.referencedColumn.databaseName,a.length-1);return`${r}.${i} = ${c}`}));await this.queryRunner.query(`INSERT INTO ${i} (${[...c,...h].join(", ")}) SELECT ${u.join(", ")} FROM ${i} AS ${r}, ${i} AS ${l} WHERE ${[...p,...d].join(" AND ")}`,a)}}async remove(e){if("mssql"!==this.queryRunner.connection.driver.options.type)return;Array.isArray(e)||(e=[e]);const t=e=>this.queryRunner.connection.driver.escape(e),n=e.map((e=>e.identifier)),a=e[0].metadata.closureJunctionTable,i=e=>e.map((e=>{const a=n.map((t=>t[e.referencedColumn.databaseName]));return`${t(e.databaseName)} IN (${a.join(", ")})`})).join(" AND "),r=i(a.ancestorColumns),s=i(a.descendantColumns);await this.queryRunner.manager.createQueryBuilder().delete().from(a.tablePath).where(r).orWhere(s).execute()}getTableName(e){return e.split(".").map((e=>""===e?e:this.queryRunner.connection.driver.escape(e))).join(".")}}class $t{constructor(e){this["@instanceof"]=Symbol.for("EntityMetadata"),this.childEntityMetadatas=[],this.inheritanceTree=[],this.tableType="regular",this.withoutRowid=!1,this.synchronize=!0,this.hasNonNullableRelations=!1,this.isJunction=!1,this.isAlwaysUsingConstructor=!0,this.isClosureJunction=!1,this.hasMultiplePrimaryKeys=!1,this.hasUUIDGeneratedColumns=!1,this.ownColumns=[],this.columns=[],this.ancestorColumns=[],this.descendantColumns=[],this.nonVirtualColumns=[],this.ownerColumns=[],this.inverseColumns=[],this.generatedColumns=[],this.primaryColumns=[],this.ownRelations=[],this.relations=[],this.eagerRelations=[],this.lazyRelations=[],this.oneToOneRelations=[],this.ownerOneToOneRelations=[],this.oneToManyRelations=[],this.manyToOneRelations=[],this.manyToManyRelations=[],this.ownerManyToManyRelations=[],this.relationsWithJoinColumns=[],this.relationIds=[],this.relationCounts=[],this.foreignKeys=[],this.embeddeds=[],this.allEmbeddeds=[],this.ownIndices=[],this.indices=[],this.uniques=[],this.ownUniques=[],this.checks=[],this.exclusions=[],this.ownListeners=[],this.listeners=[],this.afterLoadListeners=[],this.beforeInsertListeners=[],this.afterInsertListeners=[],this.beforeUpdateListeners=[],this.afterUpdateListeners=[],this.beforeRemoveListeners=[],this.beforeSoftRemoveListeners=[],this.beforeRecoverListeners=[],this.afterRemoveListeners=[],this.afterSoftRemoveListeners=[],this.afterRecoverListeners=[],this.connection=e.connection,this.inheritanceTree=e.inheritanceTree||[],this.inheritancePattern=e.inheritancePattern,this.treeType=e.tableTree?e.tableTree.type:void 0,this.treeOptions=e.tableTree?e.tableTree.options:void 0,this.parentClosureEntityMetadata=e.parentClosureEntityMetadata,this.tableMetadataArgs=e.args,this.target=this.tableMetadataArgs.target,this.tableType=this.tableMetadataArgs.type,this.expression=this.tableMetadataArgs.expression,this.withoutRowid=this.tableMetadataArgs.withoutRowid,this.dependsOn=this.tableMetadataArgs.dependsOn}create(e,t){const n=!(!t||!0!==t.pojo);let a;return a="function"!=typeof this.target||n?{}:!t?.fromDeserializer||this.isAlwaysUsingConstructor?new this.target:Object.create(this.target.prototype),this.connection.options.typename&&(a[this.connection.options.typename]=this.targetName),this.lazyRelations.forEach((t=>this.connection.relationLoader.enableLazyLoad(t,a,e))),a}hasId(e){return!!e&&this.primaryColumns.every((t=>{const n=t.getEntityValue(e);return null!=n&&""!==n}))}hasAllPrimaryKeys(e){return this.primaryColumns.every((t=>null!=t.getEntityValue(e)))}ensureEntityIdMap(e){if(r.isObject(e))return e;if(this.hasMultiplePrimaryKeys)throw new l(this,e);return this.primaryColumns[0].createValueMap(e)}getEntityIdMap(e){if(e)return $t.getValueMap(e,this.primaryColumns,{skipNulls:!0})}getEntityIdMixedMap(e){if(!e)return e;const t=this.getEntityIdMap(e);return this.hasMultiplePrimaryKeys?t:t?this.primaryColumns[0].getEntityValue(t):t}compareEntities(e,t){const n=this.getEntityIdMap(e);if(!n)return!1;const a=this.getEntityIdMap(t);return!!a&&xe.compareIds(n,a)}findColumnWithPropertyName(e){return this.columns.find((t=>t.propertyName===e))}findColumnWithDatabaseName(e){return this.columns.find((t=>t.databaseName===e))}hasColumnWithPropertyPath(e){return this.columns.some((t=>t.propertyPath===e))||this.hasRelationWithPropertyPath(e)}findColumnWithPropertyPath(e){const t=this.columns.find((t=>t.propertyPath===e));if(t)return t;const n=this.relations.find((t=>t.propertyPath===e));return n&&1===n.joinColumns.length?n.joinColumns[0]:void 0}findColumnWithPropertyPathStrict(e){return this.columns.find((t=>t.propertyPath===e))}findColumnsWithPropertyPath(e){const t=this.columns.find((t=>t.propertyPath===e));if(t)return[t];const n=this.findRelationWithPropertyPath(e);return n&&n.joinColumns?n.joinColumns:[]}hasRelationWithPropertyPath(e){return this.relations.some((t=>t.propertyPath===e))}findRelationWithPropertyPath(e){return this.relations.find((t=>t.propertyPath===e))}hasEmbeddedWithPropertyPath(e){return this.allEmbeddeds.some((t=>t.propertyPath===e))}findEmbeddedWithPropertyPath(e){return this.allEmbeddeds.find((t=>t.propertyPath===e))}mapPropertyPathsToColumns(e){return e.map((e=>{const t=this.findColumnWithPropertyPath(e);if(null==t)throw new P(e,this);return t}))}extractRelationValuesFromEntity(e,t){const n=[];return t.forEach((t=>{const a=t.getEntityValue(e);Array.isArray(a)?a.forEach((e=>n.push([t,e,$t.getInverseEntityMetadata(e,t)]))):a&&n.push([t,a,$t.getInverseEntityMetadata(a,t)])})),n}findInheritanceMetadata(e){if("STI"===this.inheritancePattern&&this.childEntityMetadatas.length>0){let t;return this.discriminatorColumn&&(t=e[this.discriminatorColumn.propertyName]),this.childEntityMetadatas.find((n=>t===n.discriminatorValue||e.constructor===n.target))||this}return this}static getInverseEntityMetadata(e,t){return t.inverseEntityMetadata.findInheritanceMetadata(e)}static createPropertyPath(e,t,n=""){const a=[];return Object.keys(t).forEach((i=>{const r=n?n+"."+i:i;if(e.hasEmbeddedWithPropertyPath(r)){const n=this.createPropertyPath(e,t[i],r);a.push(...n)}else{const e=n?n+"."+i:i;a.push(e)}})),a}static difference(e,t){return e.filter((e=>!t.find((t=>xe.compareIds(e,t)))))}static getValueMap(e,t,n){return t.reduce(((t,a)=>{const i=a.getEntityValueMap(e,n);if(void 0!==t&&null!=i)return xe.mergeDeep(t,i)}),{})}build(){const e=this.connection.namingStrategy,t=this.connection.options.entityPrefix,n=this.connection.options.entitySkipConstructor;this.engine=this.tableMetadataArgs.engine,this.database="entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.parentEntityMetadata.database:this.tableMetadataArgs.database,this.tableMetadataArgs.schema?this.schema=this.tableMetadataArgs.schema:"entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.schema=this.parentEntityMetadata.schema:this.connection.options?.hasOwnProperty("schema")&&(this.schema=this.connection.options.schema),this.givenTableName="entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.parentEntityMetadata.givenTableName:this.tableMetadataArgs.name,this.synchronize=!1!==this.tableMetadataArgs.synchronize,this.targetName="function"==typeof this.tableMetadataArgs.target?this.tableMetadataArgs.target.name:this.tableMetadataArgs.target,"closure-junction"===this.tableMetadataArgs.type?this.tableNameWithoutPrefix=e.closureJunctionTableName(this.givenTableName):"entity-child"===this.tableMetadataArgs.type&&this.parentEntityMetadata?this.tableNameWithoutPrefix=e.tableName(this.parentEntityMetadata.targetName,this.parentEntityMetadata.givenTableName):(this.tableNameWithoutPrefix=e.tableName(this.targetName,this.givenTableName),"junction"===this.tableMetadataArgs.type&&this.connection.driver.maxAliasLength&&this.connection.driver.maxAliasLength>0&&this.tableNameWithoutPrefix.length>this.connection.driver.maxAliasLength&&(this.tableNameWithoutPrefix=ne(this.tableNameWithoutPrefix,{separator:"_",segmentLength:3}))),this.tableName=t?e.prefixTableName(t,this.tableNameWithoutPrefix):this.tableNameWithoutPrefix,this.target=this.target?this.target:this.tableName,this.name=this.targetName?this.targetName:this.tableName,this.expression=this.tableMetadataArgs.expression,this.withoutRowid=!0===this.tableMetadataArgs.withoutRowid,this.tablePath=this.connection.driver.buildTableName(this.tableName,this.schema,this.database),this.orderBy="function"==typeof this.tableMetadataArgs.orderBy?this.tableMetadataArgs.orderBy(this.propertiesMap):this.tableMetadataArgs.orderBy,void 0!==n&&(this.isAlwaysUsingConstructor=!n),this.isJunction="closure-junction"===this.tableMetadataArgs.type||"junction"===this.tableMetadataArgs.type,this.isClosureJunction="closure-junction"===this.tableMetadataArgs.type,this.comment=this.tableMetadataArgs.comment}registerColumn(e){-1===this.ownColumns.indexOf(e)&&(this.ownColumns.push(e),this.columns=this.embeddeds.reduce(((e,t)=>e.concat(t.columnsFromTree)),this.ownColumns),this.primaryColumns=this.columns.filter((e=>e.isPrimary)),this.hasMultiplePrimaryKeys=this.primaryColumns.length>1,this.hasUUIDGeneratedColumns=this.columns.filter((e=>e.isGenerated||"uuid"===e.generationStrategy)).length>0,this.propertiesMap=this.createPropertiesMap(),this.childEntityMetadatas&&this.childEntityMetadatas.forEach((t=>t.registerColumn(e))))}createPropertiesMap(){const e={};return this.columns.forEach((t=>xe.mergeDeep(e,t.createValueMap(t.propertyPath)))),this.relations.forEach((t=>xe.mergeDeep(e,t.createValueMap(t.propertyPath)))),e}getInsertionReturningColumns(){return this.columns.filter((e=>void 0!==e.default||void 0!==e.asExpression||e.isGenerated||e.isCreateDate||e.isUpdateDate||e.isDeleteDate||e.isVersion))}}class qt{constructor(e){this.queryRunner=e}async insert(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.insertedValueSet?e.parentSubject.insertedValueSet:e.parentSubject.entity);const n=e.metadata.getEntityIdMap(t);let a="";n&&(a=await this.getEntityPath(e,n));const i=e.metadata.treeParentRelation.joinColumns.map((t=>t.referencedColumn.getEntityValue(e.insertedValueSet))).join("_");await this.queryRunner.manager.createQueryBuilder().update(e.metadata.target).set({[e.metadata.materializedPathColumn.propertyPath]:a+i+"."}).where(e.identifier).execute()}async update(e){let t=e.metadata.treeParentRelation.getEntityValue(e.entity);!t&&e.parentSubject&&e.parentSubject.entity&&(t=e.parentSubject.entity);let n=e.databaseEntity;!n&&t&&(n=e.metadata.treeChildrenRelation.getEntityValue(t).find((t=>Object.entries(e.identifier).every((([e,n])=>t[e]===n)))));const a=e.metadata.treeParentRelation.getEntityValue(n),i=this.getEntityParentReferencedColumnMap(e,a),r=this.getEntityParentReferencedColumnMap(e,t);if(xe.compareIds(i,r))return;let s="";r&&(s=await this.getEntityPath(e,r));let o="";i&&(o=await this.getEntityPath(e,i)||"");const c=e.metadata.treeParentRelation.joinColumns.map((e=>e.referencedColumn.getEntityValue(n))).join("_"),h=e.metadata.materializedPathColumn.propertyPath;await this.queryRunner.manager.createQueryBuilder().update(e.metadata.target).set({[h]:()=>`REPLACE(${this.queryRunner.connection.driver.escape(h)}, '${o}${c}.', '${s}${c}.')`}).where(`${h} LIKE :path`,{path:`${o}${c}.%`}).execute()}getEntityParentReferencedColumnMap(e,t){if(t)return $t.getValueMap(t,e.metadata.treeParentRelation.joinColumns.map((e=>e.referencedColumn)).filter((e=>null!=e)),{skipNulls:!0})}getEntityPath(e,t){const n=e.metadata,a=(Array.isArray(t)?t:[t]).map((e=>n.ensureEntityIdMap(e)));return this.queryRunner.manager.createQueryBuilder().select(e.metadata.targetName+"."+e.metadata.materializedPathColumn.propertyPath,"path").from(e.metadata.target,e.metadata.targetName).where(new le((e=>{for(const t of a)e.orWhere(new le((e=>e.where(t))))}))).getRawOne().then((e=>e?e.path:""))}}class Dt{constructor(e,t,n){this.hasExecutableOperations=!1,this.insertSubjects=[],this.updateSubjects=[],this.removeSubjects=[],this.softRemoveSubjects=[],this.recoverSubjects=[],this.queryRunner=e,this.allSubjects=t,this.options=n,this.validate(),this.recompute()}async execute(){let e;this.options&&!1===this.options.listeners||(e=this.broadcastBeforeEventsForAll(),e.promises.length>0&&await Promise.all(e.promises)),e&&e.count>0&&(this.insertSubjects.forEach((e=>e.recompute())),this.updateSubjects.forEach((e=>e.recompute())),this.removeSubjects.forEach((e=>e.recompute())),this.softRemoveSubjects.forEach((e=>e.recompute())),this.recoverSubjects.forEach((e=>e.recompute())),this.recompute()),this.insertSubjects=new Ct(this.insertSubjects).sort("insert"),await this.executeInsertOperations(),this.updateSubjects=this.allSubjects.filter((e=>e.mustBeUpdated)),await this.executeUpdateOperations(),this.removeSubjects=new Ct(this.removeSubjects).sort("delete"),await this.executeRemoveOperations(),this.softRemoveSubjects=this.allSubjects.filter((e=>e.mustBeSoftRemoved)),await this.executeSoftRemoveOperations(),this.recoverSubjects=this.allSubjects.filter((e=>e.mustBeRecovered)),await this.executeRecoverOperations(),this.updateSpecialColumnsInPersistedEntities(),this.options&&!1===this.options.listeners||(e=this.broadcastAfterEventsForAll(),e.promises.length>0&&await Promise.all(e.promises))}validate(){this.allSubjects.forEach((e=>{if(e.mustBeUpdated&&e.mustBeRemoved)throw new Q(e)}))}recompute(){(new Ot).compute(this.allSubjects),this.insertSubjects=this.allSubjects.filter((e=>e.mustBeInserted)),this.updateSubjects=this.allSubjects.filter((e=>e.mustBeUpdated)),this.removeSubjects=this.allSubjects.filter((e=>e.mustBeRemoved)),this.softRemoveSubjects=this.allSubjects.filter((e=>e.mustBeSoftRemoved)),this.recoverSubjects=this.allSubjects.filter((e=>e.mustBeRecovered)),this.hasExecutableOperations=this.insertSubjects.length>0||this.updateSubjects.length>0||this.removeSubjects.length>0||this.softRemoveSubjects.length>0||this.recoverSubjects.length>0}broadcastBeforeEventsForAll(){const e=new Ae;return this.insertSubjects.length&&this.insertSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeInsertEvent(e,t.metadata,t.entity))),this.updateSubjects.length&&this.updateSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeUpdateEvent(e,t.metadata,t.entity,t.databaseEntity,t.diffColumns,t.diffRelations))),this.removeSubjects.length&&this.removeSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeRemoveEvent(e,t.metadata,t.entity,t.databaseEntity,t.identifier))),this.softRemoveSubjects.length&&this.softRemoveSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeSoftRemoveEvent(e,t.metadata,t.entity,t.databaseEntity,t.identifier))),this.recoverSubjects.length&&this.recoverSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastBeforeRecoverEvent(e,t.metadata,t.entity,t.databaseEntity,t.identifier))),e}broadcastAfterEventsForAll(){const e=new Ae;return this.insertSubjects.length&&this.insertSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterInsertEvent(e,t.metadata,t.entity,t.identifier))),this.updateSubjects.length&&this.updateSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterUpdateEvent(e,t.metadata,t.entity,t.databaseEntity,t.diffColumns,t.diffRelations))),this.removeSubjects.length&&this.removeSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterRemoveEvent(e,t.metadata,t.entity,t.databaseEntity,t.identifier))),this.softRemoveSubjects.length&&this.softRemoveSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterSoftRemoveEvent(e,t.metadata,t.entity,t.databaseEntity,t.identifier))),this.recoverSubjects.length&&this.recoverSubjects.forEach((t=>this.queryRunner.broadcaster.broadcastAfterRecoverEvent(e,t.metadata,t.entity,t.databaseEntity,t.identifier))),e}async executeInsertOperations(){const[e,t]=this.groupBulkSubjects(this.insertSubjects,"insert");for(const n of t){const t=e[n],a=[],i=[],r=[];if("mongodb"===this.queryRunner.connection.driver.options.type?t.forEach((e=>{e.metadata.createDateColumn&&e.entity&&(e.entity[e.metadata.createDateColumn.databaseName]=new Date),e.metadata.updateDateColumn&&e.entity&&(e.entity[e.metadata.updateDateColumn.databaseName]=new Date),e.createValueSetAndPopChangeMap(),i.push(e),a.push(e.entity)})):"oracle"===this.queryRunner.connection.driver.options.type?t.forEach((e=>{r.push(e)})):t.forEach((e=>{0===e.changeMaps.length||e.metadata.treeType||"oracle"===this.queryRunner.connection.driver.options.type||"sap"===this.queryRunner.connection.driver.options.type?r.push(e):(i.push(e),a.push(e.createValueSetAndPopChangeMap()))})),g.isMongoEntityManager(this.queryRunner.manager)){const e=await this.queryRunner.manager.insert(t[0].metadata.target,a);t.forEach(((t,n)=>{t.identifier=e.identifiers[n],t.generatedMap=e.generatedMaps[n],t.insertedValueSet=a[n]}))}else{if(a.length>0){const e=await this.queryRunner.manager.createQueryBuilder().insert().into(t[0].metadata.target).values(a).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1).execute();i.forEach(((t,n)=>{t.identifier=e.identifiers[n],t.generatedMap=e.generatedMaps[n],t.insertedValueSet=a[n]}))}if(r.length>0)for(const e of r)e.insertedValueSet=e.createValueSetAndPopChangeMap(),"nested-set"===e.metadata.treeType&&await new Pt(this.queryRunner).insert(e),await this.queryRunner.manager.createQueryBuilder().insert().into(e.metadata.target).values(e.insertedValueSet).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1).execute().then((t=>{e.identifier=t.identifiers[0],e.generatedMap=t.generatedMaps[0]})),"closure-table"===e.metadata.treeType?await new It(this.queryRunner).insert(e):"materialized-path"===e.metadata.treeType&&await new qt(this.queryRunner).insert(e)}t.forEach((e=>{e.generatedMap&&e.metadata.columns.forEach((t=>{const n=t.getEntityValue(e.generatedMap);if(null!=n){const a=this.queryRunner.connection.driver.prepareHydratedValue(n,t);t.setEntityValue(e.generatedMap,a)}}))}))}}async executeUpdateOperations(){const e=async e=>{if(!e.identifier)throw new o(e);if(g.isMongoEntityManager(this.queryRunner.manager)){const t=this.cloneMongoSubjectEntity(e);e.metadata.objectIdColumn&&e.metadata.objectIdColumn.propertyName&&delete t[e.metadata.objectIdColumn.propertyName],e.metadata.createDateColumn&&e.metadata.createDateColumn.propertyName&&delete t[e.metadata.createDateColumn.propertyName],e.metadata.updateDateColumn&&e.metadata.updateDateColumn.propertyName&&(t[e.metadata.updateDateColumn.propertyName]=new Date);const n=this.queryRunner.manager;await n.update(e.metadata.target,e.identifier,t)}else{const t=e.createValueSetAndPopChangeMap();switch(e.metadata.treeType){case"nested-set":await new Pt(this.queryRunner).update(e);break;case"closure-table":await new It(this.queryRunner).update(e);break;case"materialized-path":await new qt(this.queryRunner).update(e)}const n=this.queryRunner.manager.createQueryBuilder().update(e.metadata.target).set(t).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1);e.entity?n.whereEntity(e.identifier):n.where(e.identifier);let a=(await n.execute()).generatedMaps[0];a&&(e.metadata.columns.forEach((e=>{const t=e.getEntityValue(a);if(null!=t){const n=this.queryRunner.connection.driver.prepareHydratedValue(t,e);e.setEntityValue(a,n)}})),e.generatedMap||(e.generatedMap={}),Object.assign(e.generatedMap,a))}},t=[],n=[];for(const e of this.updateSubjects)"nested-set"===e.metadata.treeType?t.push(e):n.push(e);const a=new Promise((async(n,a)=>{for(const n of t)try{await e(n)}catch(e){a(e)}n()}));await Promise.all([...n.map(e),a])}async executeRemoveOperations(){const[e,t]=this.groupBulkSubjects(this.removeSubjects,"delete");for(const n of t){const t=e[n],a=t.map((e=>{if(!e.identifier)throw new o(e);return e.identifier}));if(g.isMongoEntityManager(this.queryRunner.manager)){const e=this.queryRunner.manager;await e.delete(t[0].metadata.target,a)}else{switch(t[0].metadata.treeType){case"nested-set":await new Pt(this.queryRunner).remove(t);break;case"closure-table":await new It(this.queryRunner).remove(t)}await this.queryRunner.manager.createQueryBuilder().delete().from(t[0].metadata.target).where(a).callListeners(!1).execute()}}}cloneMongoSubjectEntity(e){const t={};if(e.entity)for(const n of e.metadata.columns)xe.mergeDeep(t,n.getEntityValueMap(e.entity));return t}async executeSoftRemoveOperations(){await Promise.all(this.softRemoveSubjects.map((async e=>{if(!e.identifier)throw new o(e);let t;if(g.isMongoEntityManager(this.queryRunner.manager)){const n=this.cloneMongoSubjectEntity(e);e.metadata.objectIdColumn&&e.metadata.objectIdColumn.propertyName&&delete n[e.metadata.objectIdColumn.propertyName],e.metadata.createDateColumn&&e.metadata.createDateColumn.propertyName&&delete n[e.metadata.createDateColumn.propertyName],e.metadata.updateDateColumn&&e.metadata.updateDateColumn.propertyName&&(n[e.metadata.updateDateColumn.propertyName]=new Date),e.metadata.deleteDateColumn&&e.metadata.deleteDateColumn.propertyName&&(n[e.metadata.deleteDateColumn.propertyName]=new Date);const a=this.queryRunner.manager;t=await a.update(e.metadata.target,e.identifier,n)}else{const n=this.queryRunner.manager.createQueryBuilder().softDelete().from(e.metadata.target).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1);e.entity?n.whereEntity(e.identifier):n.where(e.identifier),t=await n.execute()}e.generatedMap=t.generatedMaps[0],e.generatedMap&&e.metadata.columns.forEach((t=>{const n=t.getEntityValue(e.generatedMap);if(null!=n){const a=this.queryRunner.connection.driver.prepareHydratedValue(n,t);t.setEntityValue(e.generatedMap,a)}}))})))}async executeRecoverOperations(){await Promise.all(this.recoverSubjects.map((async e=>{if(!e.identifier)throw new o(e);let t;if(g.isMongoEntityManager(this.queryRunner.manager)){const n=this.cloneMongoSubjectEntity(e);e.metadata.objectIdColumn&&e.metadata.objectIdColumn.propertyName&&delete n[e.metadata.objectIdColumn.propertyName],e.metadata.createDateColumn&&e.metadata.createDateColumn.propertyName&&delete n[e.metadata.createDateColumn.propertyName],e.metadata.updateDateColumn&&e.metadata.updateDateColumn.propertyName&&(n[e.metadata.updateDateColumn.propertyName]=new Date),e.metadata.deleteDateColumn&&e.metadata.deleteDateColumn.propertyName&&(n[e.metadata.deleteDateColumn.propertyName]=null);const a=this.queryRunner.manager;t=await a.update(e.metadata.target,e.identifier,n)}else{const n=this.queryRunner.manager.createQueryBuilder().restore().from(e.metadata.target).updateEntity(!this.options||!1!==this.options.reload).callListeners(!1);e.entity?n.whereEntity(e.identifier):n.where(e.identifier),t=await n.execute()}e.generatedMap=t.generatedMaps[0],e.generatedMap&&e.metadata.columns.forEach((t=>{const n=t.getEntityValue(e.generatedMap);if(null!=n){const a=this.queryRunner.connection.driver.prepareHydratedValue(n,t);t.setEntityValue(e.generatedMap,a)}}))})))}updateSpecialColumnsInPersistedEntities(){this.insertSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.insertSubjects),this.updateSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.updateSubjects),this.softRemoveSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.softRemoveSubjects),this.recoverSubjects.length&&this.updateSpecialColumnsInInsertedAndUpdatedEntities(this.recoverSubjects),this.removeSubjects.length&&this.removeSubjects.forEach((e=>{e.entity&&e.metadata.primaryColumns.forEach((t=>{t.setEntityValue(e.entity,void 0)}))})),this.allSubjects.forEach((e=>{e.entity&&(e.metadata.relationIds.forEach((t=>{t.setValue(e.entity)})),g.isMongoEntityManager(this.queryRunner.manager)&&e.metadata.objectIdColumn&&e.metadata.objectIdColumn.databaseName&&e.metadata.objectIdColumn.databaseName!==e.metadata.objectIdColumn.propertyName&&delete e.entity[e.metadata.objectIdColumn.databaseName])}))}updateSpecialColumnsInInsertedAndUpdatedEntities(e){e.forEach((e=>{e.entity&&(e.metadata.columns.forEach((t=>{e.metadata.childEntityMetadatas.length>0&&-1!==e.metadata.childEntityMetadatas.map((e=>e.target)).indexOf(t.target)||t.isVirtual||t.isDeleteDate||(t.isNullable&&void 0===t.getEntityValue(e.entity)&&t.setEntityValue(e.entity,null),e.updatedRelationMaps.length>0&&e.updatedRelationMaps.forEach((t=>{t.relation.joinColumns.forEach((n=>{!0!==n.isVirtual&&n.setEntityValue(e.entity,r.isObject(t.value)?n.referencedColumn.getEntityValue(t.value):t.value)}))})))})),e.generatedMap&&this.queryRunner.manager.merge(e.metadata.target,e.entity,e.generatedMap))}))}groupBulkSubjects(e,t){const n={},a=[],i=e.some((e=>e.metadata.getInsertionReturningColumns().length>0)),r="delete"===t||this.queryRunner.connection.driver.isReturningSqlSupported("insert")||!1===i;return e.forEach(((e,t)=>{const i=r||e.metadata.isJunction?e.metadata.name:e.metadata.name+"_"+t;n[i]?n[i].push(e):(n[i]=[e],a.push(i))})),[n,a]}}class Lt{constructor(e){this["@instanceof"]=Symbol.for("Subject"),this.identifier=void 0,this.entityWithFulfilledIds=void 0,this.databaseEntityLoaded=!1,this.changeMaps=[],this.canBeInserted=!1,this.canBeUpdated=!1,this.mustBeRemoved=!1,this.canBeSoftRemoved=!1,this.canBeRecovered=!1,this.updatedRelationMaps=[],this.diffColumns=[],this.diffRelations=[],this.metadata=e.metadata,this.entity=e.entity,this.parentSubject=e.parentSubject,void 0!==e.canBeInserted&&(this.canBeInserted=e.canBeInserted),void 0!==e.canBeUpdated&&(this.canBeUpdated=e.canBeUpdated),void 0!==e.mustBeRemoved&&(this.mustBeRemoved=e.mustBeRemoved),void 0!==e.canBeSoftRemoved&&(this.canBeSoftRemoved=e.canBeSoftRemoved),void 0!==e.canBeRecovered&&(this.canBeRecovered=e.canBeRecovered),void 0!==e.identifier&&(this.identifier=e.identifier),void 0!==e.changeMaps&&this.changeMaps.push(...e.changeMaps),this.recompute()}get mustBeInserted(){return this.canBeInserted&&!this.databaseEntity}get mustBeUpdated(){return this.canBeUpdated&&this.identifier&&(!1===this.databaseEntityLoaded||this.databaseEntityLoaded&&this.databaseEntity)&&this.changeMaps.some((e=>!e.column||e.column.isUpdate))}get mustBeSoftRemoved(){return this.canBeSoftRemoved&&this.identifier&&(!1===this.databaseEntityLoaded||this.databaseEntityLoaded&&this.databaseEntity)}get mustBeRecovered(){return this.canBeRecovered&&this.identifier&&(!1===this.databaseEntityLoaded||this.databaseEntityLoaded&&this.databaseEntity)}createValueSetAndPopChangeMap(){const e=[],t=this.changeMaps.reduce(((t,n)=>{let a,i=n.value;if(g.isSubject(i)&&(i=i.insertedValueSet?i.insertedValueSet:i.entity),this.metadata.isJunction&&n.column)a=n.column.createValueMap(n.column.referencedColumn.getEntityValue(i));else if(n.column)a=n.column.createValueMap(i);else if(n.relation)if(r.isObject(i)&&!Buffer.isBuffer(i)){const r=n.relation.getRelationIdMap(i);if(void 0===r)return e.push(n),this.canBeUpdated=!0,t;a=n.relation.createValueMap(r),this.updatedRelationMaps.push({relation:n.relation,value:r})}else a=n.relation.createValueMap(i),this.updatedRelationMaps.push({relation:n.relation,value:i});return xe.mergeDeep(t,a),t}),{});return this.changeMaps=e,t}recompute(){this.entity?(this.entityWithFulfilledIds=Object.assign({},this.entity),this.parentSubject&&this.metadata.primaryColumns.forEach((e=>{if(e.relationMetadata&&e.relationMetadata.inverseEntityMetadata===this.parentSubject.metadata){const t=e.referencedColumn.getEntityValue(this.parentSubject.entity);e.setEntityValue(this.entityWithFulfilledIds,t)}})),this.identifier=this.metadata.getEntityIdMap(this.entityWithFulfilledIds)):this.databaseEntity&&(this.identifier=this.metadata.getEntityIdMap(this.databaseEntity))}}class _t{constructor(e){this.subjects=e}build(){this.subjects.forEach((e=>{e.metadata.oneToManyRelations.forEach((t=>{!1!==t.persistenceEnabled&&this.buildForSubjectRelation(e,t)}))}))}buildForSubjectRelation(e,t){let n=[];if(e.databaseEntity){const a=t.getEntityValue(e.databaseEntity);a&&(n=a.map((e=>t.inverseEntityMetadata.getEntityIdMap(e))))}let a=t.getEntityValue(e.entity);if(null===a&&(a=[]),void 0===a)return;const i=[];a.forEach((a=>{let r=t.inverseEntityMetadata.getEntityIdMap(a),s=this.subjects.find((e=>e.entity===a));if(s&&(r=s.identifier),r)n.find((e=>xe.compareIds(r,e)))||(s||(s=new Lt({metadata:t.inverseEntityMetadata,parentSubject:e,canBeUpdated:!0,identifier:r}),this.subjects.push(s)),s.changeMaps.push({relation:t.inverseRelation,value:e})),i.push(r);else{if(!s)return;s.changeMaps.push({relation:t.inverseRelation,value:e})}})),"disable"!==t.inverseRelation?.orphanedRowAction&&$t.difference(n,i).forEach((n=>{const a=new Lt({metadata:t.inverseEntityMetadata,parentSubject:e,identifier:n});t.inverseRelation&&"nullify"!==t.inverseRelation.orphanedRowAction?"delete"===t.inverseRelation.orphanedRowAction?a.mustBeRemoved=!0:"soft-delete"===t.inverseRelation.orphanedRowAction&&(a.canBeSoftRemoved=!0):(a.canBeUpdated=!0,a.changeMaps=[{relation:t.inverseRelation,value:null}]),this.subjects.push(a)}))}}class Bt{constructor(e){this.subjects=e}build(){this.subjects.forEach((e=>{e.metadata.oneToOneRelations.forEach((t=>{t.isOwning||!1===t.persistenceEnabled||this.buildForSubjectRelation(e,t)}))}))}buildForSubjectRelation(e,t){let n;e.databaseEntity&&(n=t.getEntityValue(e.databaseEntity));let a=t.getEntityValue(e.entity);if(void 0===a)return;if(null===a){if(n){const a=new Lt({metadata:t.inverseEntityMetadata,parentSubject:e,canBeUpdated:!0,identifier:n,changeMaps:[{relation:t.inverseRelation,value:null}]});this.subjects.push(a)}return}let i=t.inverseEntityMetadata.getEntityIdMap(a),r=this.subjects.find((e=>!!e.entity&&e.entity===a));if(r&&(i=r.identifier),!i){if(!r)return;r.changeMaps.push({relation:t.inverseRelation,value:e})}n&&xe.compareIds(i,n)||(r||(r=new Lt({metadata:t.inverseEntityMetadata,canBeUpdated:!0,identifier:i}),this.subjects.push(r)),r.changeMaps.push({relation:t.inverseRelation,value:e}))}}class jt{constructor(e){this.subjects=e}build(){this.subjects.forEach((e=>{e.entity&&e.metadata.manyToManyRelations.forEach((t=>{!1!==t.persistenceEnabled&&this.buildForSubjectRelation(e,t)}))}))}buildForAllRemoval(e){e.databaseEntity&&e.metadata.manyToManyRelations.forEach((t=>{!1!==t.persistenceEnabled&&t.getEntityValue(e.databaseEntity).forEach((n=>{const a=new Lt({metadata:t.junctionEntityMetadata,parentSubject:e,mustBeRemoved:!0,identifier:this.buildJunctionIdentifier(e,t,n)});this.subjects.push(a)}))}))}buildForSubjectRelation(e,t){let n=[];if(e.databaseEntity){const a=t.getEntityValue(e.databaseEntity);a&&(n=a.map((e=>t.inverseEntityMetadata.getEntityIdMap(e))))}let a=t.getEntityValue(e.entity);if(null===a&&(a=[]),!Array.isArray(a))return;a.forEach((a=>{let i=t.inverseEntityMetadata.getEntityIdMap(a);const r=this.subjects.find((e=>e.entity===a));if(r&&(i=r.identifier),!i&&!r)return;if(n.find((e=>xe.compareIds(e,i))))return;const s=t.isOwning?e:r||a,o=t.isOwning?r||a:e,c=new Lt({metadata:t.junctionEntityMetadata,parentSubject:e,canBeInserted:!0});this.subjects.push(c),t.junctionEntityMetadata.ownerColumns.forEach((e=>{c.changeMaps.push({column:e,value:s})})),t.junctionEntityMetadata.inverseColumns.forEach((e=>{c.changeMaps.push({column:e,value:o})}))}));const i=[];a.forEach((e=>{let n=t.inverseEntityMetadata.getEntityIdMap(e);const a=this.subjects.find((t=>t.entity===e));a&&(n=a.identifier),null!=n&&i.push(n)})),n.filter((e=>!i.find((t=>xe.compareIds(t,e))))).forEach((n=>{const a=new Lt({metadata:t.junctionEntityMetadata,parentSubject:e,mustBeRemoved:!0,identifier:this.buildJunctionIdentifier(e,t,n)});this.subjects.push(a)}))}buildJunctionIdentifier(e,t,n){const a=t.isOwning?e.entity:n,i=t.isOwning?n:e.entity,r={};return t.junctionEntityMetadata.ownerColumns.forEach((e=>{xe.mergeDeep(r,e.createValueMap(e.referencedColumn.getEntityValue(a)))})),t.junctionEntityMetadata.inverseColumns.forEach((e=>{xe.mergeDeep(r,e.createValueMap(e.referencedColumn.getEntityValue(i)))})),r}}class Ut{constructor(e,t){this.queryRunner=e,this.subjects=t}async load(e){const t=this.groupByEntityTargets().map((async t=>{const n=[],a=[];if(t.subjects.forEach((e=>{!e.databaseEntity&&e.identifier&&(n.push(e.identifier),a.push(e))})),!n.length)return;const i=[];"save"===e||"soft-remove"===e||"recover"===e?t.subjects.forEach((e=>{e.metadata.relations.forEach((t=>{void 0!==t.getEntityValue(e.entityWithFulfilledIds)&&-1===i.indexOf(t.propertyPath)&&i.push(t.propertyPath)}))})):i.push(...t.subjects[0].metadata.manyToManyRelations.map((e=>e.propertyPath)));const r={loadEagerRelations:!1,loadRelationIds:{relations:i,disableMixedMap:!0},withDeleted:!0};let s=[];if("mongodb"===this.queryRunner.connection.driver.options.type){const e=this.queryRunner.manager.getRepository(t.target);s=await e.findByIds(n,r)}else s=await this.queryRunner.manager.getRepository(t.target).createQueryBuilder().setFindOptions(r).whereInIds(n).getMany();s.forEach((e=>{this.findByPersistEntityLike(t.target,e).forEach((t=>{t.databaseEntity=e,t.identifier||(t.identifier=t.metadata.hasAllPrimaryKeys(e)?t.metadata.getEntityIdMap(e):void 0)}))}));for(let e of a)e.databaseEntityLoaded=!0}));await Promise.all(t)}findByPersistEntityLike(e,t){return this.subjects.filter((n=>!!n.entity&&(n.entity===t||n.metadata.target===e&&n.metadata.compareEntities(n.entityWithFulfilledIds,t))))}groupByEntityTargets(){return this.subjects.reduce(((e,t)=>{let n=e.find((e=>e.target===t.metadata.target));return n||(n={target:t.metadata.target,subjects:[]},e.push(n)),n.subjects.push(t),e}),[])}}class Ft{constructor(e){this.allSubjects=e}build(e,t){e.metadata.extractRelationValuesFromEntity(e.entity,e.metadata.relations).forEach((([n,a,i])=>{if(null==a||!n.isCascadeInsert&&!n.isCascadeUpdate&&!n.isCascadeSoftRemove&&!n.isCascadeRecover)return;if(!r.isObject(a))return;const s=this.findByPersistEntityLike(i.target,a);if(s)return!1===s.canBeInserted&&(s.canBeInserted=!0===n.isCascadeInsert&&"save"===t),!1===s.canBeUpdated&&(s.canBeUpdated=!0===n.isCascadeUpdate&&"save"===t),!1===s.canBeSoftRemoved&&(s.canBeSoftRemoved=!0===n.isCascadeSoftRemove&&"soft-remove"===t),void(!1===s.canBeRecovered&&(s.canBeRecovered=!0===n.isCascadeRecover&&"recover"===t));const o=new Lt({metadata:i,parentSubject:e,entity:a,canBeInserted:!0===n.isCascadeInsert&&"save"===t,canBeUpdated:!0===n.isCascadeUpdate&&"save"===t,canBeSoftRemoved:!0===n.isCascadeSoftRemove&&"soft-remove"===t,canBeRecovered:!0===n.isCascadeRecover&&"recover"===t});this.allSubjects.push(o),this.build(o,t)}))}findByPersistEntityLike(e,t){return this.allSubjects.find((n=>!!n.entity&&(n.entity===t||n.metadata.target===e&&n.metadata.compareEntities(n.entityWithFulfilledIds,t))))}}class kt{constructor(e,t,n,a,i,r){this.connection=e,this.queryRunner=t,this.mode=n,this.target=a,this.entity=i,this.options=r}async execute(){if(!this.entity||"object"!=typeof this.entity)return Promise.reject(new T(this.mode,this.entity));await Promise.resolve();const e=this.queryRunner||this.connection.createQueryRunner();let t=e.data;this.options&&this.options.data&&(e.data=this.options.data);try{const t=Array.isArray(this.entity)?this.entity:[this.entity],n=this.options&&this.options.chunk&&this.options.chunk>0?xe.chunk(t,this.options.chunk):[t],a=await Promise.all(n.map((async t=>{const n=[];t.forEach((e=>{const t=this.target?this.target:e.constructor;if(t===Object)throw new u(this.mode);let a=this.connection.getMetadata(t).findInheritanceMetadata(e);n.push(new Lt({metadata:a,entity:e,canBeInserted:"save"===this.mode,canBeUpdated:"save"===this.mode,mustBeRemoved:"remove"===this.mode,canBeSoftRemoved:"soft-remove"===this.mode,canBeRecovered:"recover"===this.mode}))}));const a=new Ft(n);return n.forEach((e=>{a.build(e,this.mode)})),await new Ut(e,n).load(this.mode),"save"===this.mode||"soft-remove"===this.mode||"recover"===this.mode?(new _t(n).build(),new Bt(n).build(),new jt(n).build()):n.forEach((e=>{e.mustBeRemoved&&new jt(n).buildForAllRemoval(e)})),new Dt(e,n,this.options)}))),i=a.filter((e=>e.hasExecutableOperations));if(0===i.length)return;let r=!1;try{e.isTransactionActive||"none"===this.connection.driver.transactionSupport||this.options&&!1===this.options.transaction||(r=!0,await e.startTransaction());for(const e of i)await e.execute();!0===r&&await e.commitTransaction()}catch(t){if(r)try{await e.rollbackTransaction()}catch(e){}throw t}}finally{e.data=t,this.queryRunner||await e.release()}}}class Vt{constructor(e,t){this["@instanceof"]=Symbol.for("EntityManager"),this.repositories=new Map,this.treeRepositories=[],this.plainObjectToEntityTransformer=new bt,this.connection=e,t&&(this.queryRunner=t,r.assign(this.queryRunner,{manager:this}))}async transaction(e,t){const n="string"==typeof e?e:void 0,a="function"==typeof e?e:t;if(!a)throw new s("Transaction method requires callback in second parameter if isolation level is supplied.");if(this.queryRunner&&this.queryRunner.isReleased)throw new C;const i=this.queryRunner||this.connection.createQueryRunner();try{await i.startTransaction(n);const e=await a(i.manager);return await i.commitTransaction(),e}catch(e){try{await i.rollbackTransaction()}catch(e){}throw e}finally{this.queryRunner||await i.release()}}async query(e,t){return this.connection.query(e,t,this.queryRunner)}createQueryBuilder(e,t,n){return t?this.connection.createQueryBuilder(e,t,n||this.queryRunner):this.connection.createQueryBuilder(e||n||this.queryRunner)}hasId(e,t){const n=2===arguments.length?e:e.constructor,a=2===arguments.length?t:e;return this.connection.getMetadata(n).hasId(a)}getId(e,t){const n=2===arguments.length?e:e.constructor,a=2===arguments.length?t:e;return this.connection.getMetadata(n).getEntityIdMixedMap(a)}create(e,t){const n=this.connection.getMetadata(e);if(!t)return n.create(this.queryRunner);if(Array.isArray(t))return t.map((t=>this.create(e,t)));const a=n.create(this.queryRunner);return this.plainObjectToEntityTransformer.transform(a,t,n,!0),a}merge(e,t,...n){const a=this.connection.getMetadata(e);return n.forEach((e=>this.plainObjectToEntityTransformer.transform(t,e,a))),t}async preload(e,t){const n=this.connection.getMetadata(e),a=new Nt(this.connection.manager),i=await a.transform(t,n);if(i)return this.merge(e,i,t)}save(e,t,n){let a=arguments.length>1&&("function"==typeof e||g.isEntitySchema(e)||"string"==typeof e)?e:void 0;const i=a?t:e,r=a?n:t;return g.isEntitySchema(a)&&(a=a.options.name),Array.isArray(i)&&0===i.length?Promise.resolve(i):new kt(this.connection,this.queryRunner,"save",a,i,r).execute().then((()=>i))}remove(e,t,n){const a=arguments.length>1&&("function"==typeof e||g.isEntitySchema(e)||"string"==typeof e)?e:void 0,i=a?t:e,r=a?n:t;return Array.isArray(i)&&0===i.length?Promise.resolve(i):new kt(this.connection,this.queryRunner,"remove",a,i,r).execute().then((()=>i))}softRemove(e,t,n){let a=arguments.length>1&&("function"==typeof e||g.isEntitySchema(e)||"string"==typeof e)?e:void 0;const i=a?t:e,r=a?n:t;return g.isEntitySchema(a)&&(a=a.options.name),Array.isArray(i)&&0===i.length?Promise.resolve(i):new kt(this.connection,this.queryRunner,"soft-remove",a,i,r).execute().then((()=>i))}recover(e,t,n){let a=arguments.length>1&&("function"==typeof e||g.isEntitySchema(e)||"string"==typeof e)?e:void 0;const i=a?t:e,r=a?n:t;return g.isEntitySchema(a)&&(a=a.options.name),Array.isArray(i)&&0===i.length?Promise.resolve(i):new kt(this.connection,this.queryRunner,"recover",a,i,r).execute().then((()=>i))}async insert(e,t){return this.createQueryBuilder().insert().into(e).values(t).execute()}async upsert(e,t,n){const a=this.connection.getMetadata(e);let i,r;i=Array.isArray(n)?{conflictPaths:n}:n,r=Array.isArray(t)?t:[t];const s=a.mapPropertyPathsToColumns(Array.isArray(i.conflictPaths)?i.conflictPaths:Object.keys(i.conflictPaths)),o=a.columns.filter((e=>!s.includes(e)&&r.some((t=>void 0!==e.getEntityValue(t)))));return this.createQueryBuilder().insert().into(e).values(r).orUpdate([...s,...o].map((e=>e.databaseName)),s.map((e=>e.databaseName)),{skipUpdateIfNoValuesChanged:i.skipUpdateIfNoValuesChanged,indexPredicate:i.indexPredicate,upsertType:i.upsertType||this.connection.driver.supportedUpsertTypes[0]}).execute()}update(e,t,n){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new s("Empty criteria(s) are not allowed for the update method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().update(e).set(n).whereInIds(t).execute():this.createQueryBuilder().update(e).set(n).where(t).execute()}delete(e,t){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new s("Empty criteria(s) are not allowed for the delete method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().delete().from(e).whereInIds(t).execute():this.createQueryBuilder().delete().from(e).where(t).execute()}softDelete(e,t){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new s("Empty criteria(s) are not allowed for the delete method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().softDelete().from(e).whereInIds(t).execute():this.createQueryBuilder().softDelete().from(e).where(t).execute()}restore(e,t){return null==t||""===t||Array.isArray(t)&&0===t.length?Promise.reject(new s("Empty criteria(s) are not allowed for the delete method.")):"string"==typeof t||"number"==typeof t||t instanceof Date||Array.isArray(t)?this.createQueryBuilder().restore().from(e).whereInIds(t).execute():this.createQueryBuilder().restore().from(e).where(t).execute()}exists(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,_e.extractFindManyOptionsAlias(t)||n.name).setFindOptions(t||{}).getExists()}async existsBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t}).getExists()}count(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,_e.extractFindManyOptionsAlias(t)||n.name).setFindOptions(t||{}).getCount()}countBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t}).getCount()}sum(e,t,n){return this.callAggregateFun(e,"SUM",t,n)}average(e,t,n){return this.callAggregateFun(e,"AVG",t,n)}minimum(e,t,n){return this.callAggregateFun(e,"MIN",t,n)}maximum(e,t,n){return this.callAggregateFun(e,"MAX",t,n)}async callAggregateFun(e,t,n,a={}){const i=this.connection.getMetadata(e),r=i.columns.find((e=>e.propertyPath===n));if(!r)throw new s(`Column "${n}" was not found in table "${i.name}"`);const o=await this.createQueryBuilder(e,i.name).setFindOptions({where:a}).select(`${t}(${this.connection.driver.escape(r.databaseName)})`,t).getRawOne();return null===o[t]?null:parseFloat(o[t])}async find(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,_e.extractFindManyOptionsAlias(t)||n.name).setFindOptions(t||{}).getMany()}async findBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t}).getMany()}findAndCount(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,_e.extractFindManyOptionsAlias(t)||n.name).setFindOptions(t||{}).getManyAndCount()}findAndCountBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t}).getManyAndCount()}async findByIds(e,t){if(!t.length)return Promise.resolve([]);const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).andWhereInIds(t).getMany()}async findOne(e,t){let n=this.connection.getMetadata(e).name;if(t&&t.join&&(n=t.join.alias),!t.where)throw new Error("You must provide selection conditions in order to find a single row.");return this.createQueryBuilder(e,n).setFindOptions({...t,take:1}).getOne()}async findOneBy(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({where:t,take:1}).getOne()}async findOneById(e,t){const n=this.connection.getMetadata(e);return this.createQueryBuilder(e,n.name).setFindOptions({take:1}).whereInIds(n.ensureEntityIdMap(t)).getOne()}async findOneOrFail(e,t){return this.findOne(e,t).then((n=>null===n?Promise.reject(new E(e,t)):Promise.resolve(n)))}async findOneByOrFail(e,t){return this.findOneBy(e,t).then((n=>null===n?Promise.reject(new E(e,t)):Promise.resolve(n)))}async clear(e){const t=this.connection.getMetadata(e),n=this.queryRunner||this.connection.createQueryRunner();try{return await n.clearTable(t.tablePath)}finally{this.queryRunner||await n.release()}}async increment(e,t,n,a){const i=this.connection.getMetadata(e),r=i.findColumnWithPropertyPath(n);if(!r)throw new s(`Column ${n} was not found in ${i.targetName} entity.`);if(isNaN(Number(a)))throw new s(`Value "${a}" is not a number.`);const o=n.split(".").reduceRight(((e,t)=>({[t]:e})),(()=>this.connection.driver.escape(r.databaseName)+" + "+a));return this.createQueryBuilder(e,"entity").update(e).set(o).where(t).execute()}async decrement(e,t,n,a){const i=this.connection.getMetadata(e),r=i.findColumnWithPropertyPath(n);if(!r)throw new s(`Column ${n} was not found in ${i.targetName} entity.`);if(isNaN(Number(a)))throw new s(`Value "${a}" is not a number.`);const o=n.split(".").reduceRight(((e,t)=>({[t]:e})),(()=>this.connection.driver.escape(r.databaseName)+" - "+a));return this.createQueryBuilder(e,"entity").update(e).set(o).where(t).execute()}getRepository(e){const t=this.repositories.get(e);if(t)return t;if("mongodb"===this.connection.driver.options.type){const t=new ot(e,this,this.queryRunner);return this.repositories.set(e,t),t}{const t=new gt(e,this,this.queryRunner);return this.repositories.set(e,t),t}}getTreeRepository(e){if(!1===this.connection.driver.treeSupport)throw new d(this.connection.driver);const t=this.treeRepositories.find((t=>t.target===e));if(t)return t;const n=new Et(e,this,this.queryRunner);return this.treeRepositories.push(n),n}getMongoRepository(e){return this.connection.getMongoRepository(e)}withRepository(e){const t=e.constructor,{target:n,manager:a,queryRunner:i,...r}=e;return Object.assign(new t(e.target,this),{...r})}getCustomRepository(e){const t=ra().entityRepositories.find((t=>t.target===("function"==typeof e?e:e.constructor)));if(!t)throw new m(e);const n=t.entity?this.connection.getMetadata(t.entity):void 0,a=new t.target(this,n);if(a instanceof At)a.manager||(a.manager=this);else{if(!n)throw new A(e);a.manager=this,a.metadata=n}return a}async release(){if(!this.queryRunner)throw new V;return this.queryRunner.release()}}class Qt extends Vt{constructor(e,t){super(e,t),this["@instanceof"]=Symbol.for("SqljsEntityManager"),this.driver=e.driver}async loadDatabase(e){await this.driver.load(e)}async saveDatabase(e){await this.driver.save(e)}exportDatabase(){return this.driver.export()}}class Wt{create(e,t){return"mongodb"===e.driver.options.type?new st(e):"sqljs"===e.driver.options.type?new Qt(e,t):new Vt(e,t)}}class Kt{constructor(e){this["@instanceof"]=Symbol.for("View"),this.indices=[],e&&(this.database=e.database,this.schema=e.schema,this.name=e.name,this.expression=e.expression,this.materialized=!!e.materialized)}clone(){return new Kt({database:this.database,schema:this.schema,name:this.name,expression:this.expression,materialized:this.materialized})}addIndex(e){this.indices.push(e)}removeIndex(e){const t=this.indices.find((t=>t.name===e.name));t&&this.indices.splice(this.indices.indexOf(t),1)}static create(e,t){const n={database:e.database,schema:e.schema,name:t.buildTableName(e.tableName,e.schema,e.database),expression:e.expression,materialized:e.tableMetadataArgs.materialized};return new Kt(n)}}class Ht{static viewMetadataCmp(e,t){return e&&t?e.dependsOn&&(e.dependsOn.has(t.target)||e.dependsOn.has(t.name))?1:t.dependsOn&&(t.dependsOn.has(e.target)||t.dependsOn.has(e.name))?-1:0:0}}class Gt{constructor(e){this.connection=e,this["@instanceof"]=Symbol.for("RdbmsSchemaBuilder")}async build(){this.queryRunner=this.connection.createQueryRunner(),this.currentDatabase=this.connection.driver.database,this.currentSchema=this.connection.driver.schema;const e=!("cockroachdb"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type||"none"===this.connection.options.migrationsTransactionMode);await this.queryRunner.beforeMigration(),e&&await this.queryRunner.startTransaction();try{await this.createMetadataTableIfNecessary(this.queryRunner);const t=this.entityToSyncMetadatas.map((e=>this.getTablePath(e))),n=this.viewEntityToSyncMetadatas.map((e=>this.getTablePath(e)));await this.queryRunner.getTables(t),await this.queryRunner.getViews(n),await this.executeSchemaSyncOperationsInProperOrder(),this.connection.queryResultCache&&await this.connection.queryResultCache.synchronize(this.queryRunner),e&&await this.queryRunner.commitTransaction()}catch(t){try{e&&await this.queryRunner.rollbackTransaction()}catch(e){}throw t}finally{await this.queryRunner.afterMigration(),await this.queryRunner.release()}}async createMetadataTableIfNecessary(e){(this.viewEntityToSyncMetadatas.length>0||this.hasGeneratedColumns())&&await this.createTypeormMetadataTable(e)}async log(){this.queryRunner=this.connection.createQueryRunner();try{const e=this.entityToSyncMetadatas.map((e=>this.getTablePath(e))),t=this.viewEntityToSyncMetadatas.map((e=>this.getTablePath(e)));return await this.queryRunner.getTables(e),await this.queryRunner.getViews(t),this.queryRunner.enableSqlMemory(),await this.executeSchemaSyncOperationsInProperOrder(),this.connection.queryResultCache&&await this.connection.queryResultCache.synchronize(this.queryRunner),this.queryRunner.getMemorySql()}finally{this.queryRunner.disableSqlMemory(),await this.queryRunner.release()}}get entityToSyncMetadatas(){return this.connection.entityMetadatas.filter((e=>e.synchronize&&"entity-child"!==e.tableType&&"view"!==e.tableType))}get viewEntityToSyncMetadatas(){return this.connection.entityMetadatas.filter((e=>"view"===e.tableType&&e.synchronize)).sort(Ht.viewMetadataCmp)}hasGeneratedColumns(){return this.connection.entityMetadatas.some((e=>e.columns.some((e=>e.generatedType))))}async executeSchemaSyncOperationsInProperOrder(){await this.dropOldViews(),await this.dropOldForeignKeys(),await this.dropOldIndices(),await this.dropOldChecks(),await this.dropOldExclusions(),await this.dropCompositeUniqueConstraints(),await this.renameColumns(),await this.changeTableComment(),await this.createNewTables(),await this.dropRemovedColumns(),await this.addNewColumns(),await this.updatePrimaryKeys(),await this.updateExistColumns(),await this.createNewIndices(),await this.createNewChecks(),await this.createNewExclusions(),await this.createCompositeUniqueConstraints(),await this.createForeignKeys(),await this.createViews(),await this.createNewViewIndices()}getTablePath(e){const t=this.connection.driver.parseTableName(e);return this.connection.driver.buildTableName(t.tableName,t.schema||this.currentSchema,t.database||this.currentDatabase)}async dropOldForeignKeys(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.foreignKeys.filter((t=>{const n=e.foreignKeys.find((e=>t.name===e.name&&this.getTablePath(t)===this.getTablePath(e.referencedEntityMetadata)));return!n||n.onDelete&&n.onDelete!==t.onDelete||n.onUpdate&&n.onUpdate!==t.onUpdate}));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old foreign keys of ${t.name}: ${n.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropForeignKeys(t,n))}}async renameTables(){}async renameColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;if(e.columns.length!==t.columns.length)continue;const n=e.columns.filter((e=>!e.isVirtualProperty)).filter((e=>!t.columns.find((t=>t.name===e.databaseName&&t.type===this.connection.driver.normalizeType(e)&&t.isNullable===e.isNullable&&t.isUnique===this.connection.driver.normalizeIsUnique(e)))));if(0===n.length||n.length>1)continue;const a=t.columns.filter((t=>!e.columns.find((e=>!e.isVirtualProperty&&e.databaseName===t.name&&this.connection.driver.normalizeType(e)===t.type&&e.isNullable===t.isNullable&&this.connection.driver.normalizeIsUnique(e)===t.isUnique))));if(0===a.length||a.length>1)continue;const i=a[0].clone();i.name=n[0].databaseName,this.connection.logger.logSchemaBuild(`renaming column "${a[0].name}" in "${t.name}" to "${i.name}"`),await this.queryRunner.renameColumn(t,a[0],i)}}async dropOldIndices(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.indices.filter((t=>{const n=e.indices.find((e=>e.name===t.name));return!n||!1!==n.synchronize&&(n.isUnique!==t.isUnique||n.isSpatial!==t.isSpatial||!(!this.connection.driver.isFullTextColumnTypeSupported()||n.isFulltext===t.isFulltext)||n.columns.length!==t.columnNames.length||!n.columns.every((e=>-1!==t.columnNames.indexOf(e.databaseName))))})).map((async e=>{this.connection.logger.logSchemaBuild(`dropping an index: "${e.name}" from table ${t.name}`),await this.queryRunner.dropIndex(t,e)}));await Promise.all(n)}if("postgres"===this.connection.options.type){const e=this.queryRunner;for(const t of this.viewEntityToSyncMetadatas){const n=this.queryRunner.loadedViews.find((e=>this.getTablePath(e)===this.getTablePath(t)));if(!n)continue;const a=n.indices.filter((e=>{const n=t.indices.find((t=>t.name===e.name));return!n||!1!==n.synchronize&&(n.isUnique!==e.isUnique||n.isSpatial!==e.isSpatial||!(!this.connection.driver.isFullTextColumnTypeSupported()||n.isFulltext===e.isFulltext)||n.columns.length!==e.columnNames.length||!n.columns.every((t=>-1!==e.columnNames.indexOf(t.databaseName))))})).map((async t=>{this.connection.logger.logSchemaBuild(`dropping an index: "${t.name}" from view ${n.name}`),await e.dropViewIndex(n,t)}));await Promise.all(a)}}}async dropOldChecks(){if(!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.checks.filter((t=>!e.checks.find((e=>e.name===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old check constraint: ${n.map((e=>`"${e.name}"`)).join(", ")} from table "${t.name}"`),await this.queryRunner.dropCheckConstraints(t,n))}}async dropCompositeUniqueConstraints(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.uniques.filter((t=>t.columnNames.length>1&&!e.uniques.find((e=>e.name===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old unique constraint: ${n.map((e=>`"${e.name}"`)).join(", ")} from table "${t.name}"`),await this.queryRunner.dropUniqueConstraints(t,n))}}async dropOldExclusions(){if("postgres"===this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.exclusions.filter((t=>!e.exclusions.find((e=>e.name===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`dropping old exclusion constraint: ${n.map((e=>`"${e.name}"`)).join(", ")} from table "${t.name}"`),await this.queryRunner.dropExclusionConstraints(t,n))}}async changeTableComment(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(t&&(re.isMySQLFamily(this.connection.driver)||"postgres"===this.connection.driver.options.type)){const n=e.comment;await this.queryRunner.changeTableComment(t,n)}}}async createNewTables(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(t)continue;this.connection.logger.logSchemaBuild(`creating a new table: ${this.getTablePath(e)}`);const n=Xe.create(e,this.connection.driver);await this.queryRunner.createTable(n,!1,!1),this.queryRunner.loadedTables.push(n)}}async createViews(){for(const e of this.viewEntityToSyncMetadatas){const t=this.queryRunner.loadedViews.find((t=>{const n="string"==typeof t.expression?t.expression.trim():t.expression(this.connection).getQuery(),a="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.getTablePath(t)===this.getTablePath(e)&&n===a}));if(t)continue;this.connection.logger.logSchemaBuild(`creating a new view: ${this.getTablePath(e)}`);const n=Kt.create(e,this.connection.driver);await this.queryRunner.createView(n,!0),this.queryRunner.loadedViews.push(n)}}async dropOldViews(){const e=[],t=this.viewEntityToSyncMetadatas,n=new Map;for(const e of this.queryRunner.loadedViews){const a=t.find((t=>this.getTablePath(e)===this.getTablePath(t)));a&&n.set(e,a)}for(const t of this.queryRunner.loadedViews){const a=n.get(t);a&&(("string"==typeof t.expression?t.expression.trim():t.expression(this.connection).getQuery())!==("string"==typeof a.expression?a.expression.trim():a.expression(this.connection).getQuery())&&(this.connection.logger.logSchemaBuild(`dropping an old view: ${t.name}`),e.push(t)))}const a=e=>{const t=n.get(e);let i=[e];if(!t)return i;for(const[r,s]of n.entries())r!==e&&s.dependsOn&&(s.dependsOn.has(t.target)||s.dependsOn.has(t.name))&&(i=i.concat(a(r)));return i},i=new Set(e.map((e=>a(e))).reduce(((e,t)=>e.concat(t)),[]).sort(((e,t)=>Ht.viewMetadataCmp(n.get(e),n.get(t)))).reverse());for(const e of i)await this.queryRunner.dropView(e);this.queryRunner.loadedViews=this.queryRunner.loadedViews.filter((e=>!i.has(e)))}async dropRemovedColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=t.columns.filter((t=>!e.columns.find((e=>e.isVirtualProperty||e.databaseName===t.name))));0!==n.length&&(this.connection.logger.logSchemaBuild(`columns dropped in ${t.name}: `+n.map((e=>e.name)).join(", ")),await this.queryRunner.dropColumns(t,n))}}async addNewColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.columns.filter((e=>!e.isVirtualProperty&&!t.columns.find((t=>t.name===e.databaseName))));if(0===n.length)continue;const a=this.metadataColumnsToTableColumnOptions(n).map((e=>new We(e)));0!==a.length&&(this.connection.logger.logSchemaBuild("new columns added: "+n.map((e=>e.databaseName)).join(", ")),await this.queryRunner.addColumns(t,a))}}async updatePrimaryKeys(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.columns.filter((e=>e.isPrimary));if(t.columns.filter((e=>e.isPrimary)).length!==n.length&&n.length>1){const e=n.map((e=>new We(Ge.createTableColumnOptions(e,this.connection.driver))));await this.queryRunner.updatePrimaryKeys(t,e)}}}async updateExistColumns(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=this.connection.driver.findChangedColumns(t.columns,e.columns);if(0===n.length)continue;for(const t of n)await this.dropColumnReferencedForeignKeys(this.getTablePath(e),t.databaseName);for(const t of n)await this.dropColumnCompositeIndices(this.getTablePath(e),t.databaseName);if(!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type&&"spanner"!==this.connection.driver.options.type)for(const t of n)await this.dropColumnCompositeUniques(this.getTablePath(e),t.databaseName);const a=n.map((e=>{const n=t.columns.find((t=>t.name===e.databaseName)),a=Ge.createTableColumnOptions(e,this.connection.driver);return{oldColumn:n,newColumn:new We(a)}}));0!==a.length&&(this.connection.logger.logSchemaBuild(`columns changed in "${t.name}". updating: `+n.map((e=>e.databaseName)).join(", ")),await this.queryRunner.changeColumns(t,a))}}async createNewIndices(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.indices.filter((e=>!t.indices.find((t=>t.name===e.name))&&!0===e.synchronize)).map((e=>Ke.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new indices ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createIndices(t,n))}}async createNewViewIndices(){if("postgres"!==this.connection.options.type||!re.isPostgresFamily(this.connection.driver))return;const e=this.queryRunner;for(const t of this.viewEntityToSyncMetadatas){const n=this.queryRunner.loadedViews.find((e=>{const n="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery(),a="string"==typeof t.expression?t.expression.trim():t.expression(this.connection).getQuery();return this.getTablePath(e)===this.getTablePath(t)&&n===a}));if(!n||!n.materialized)continue;const a=t.indices.filter((e=>!n.indices.find((t=>t.name===e.name))&&!0===e.synchronize)).map((e=>Ke.create(e)));0!==a.length&&(this.connection.logger.logSchemaBuild(`adding new indices ${a.map((e=>`"${e.name}"`)).join(", ")} in view "${n.name}"`),await e.createViewIndices(n,a))}}async createNewChecks(){if(!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.checks.filter((e=>!t.checks.find((t=>t.name===e.name)))).map((e=>Je.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new check constraints: ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createCheckConstraints(t,n))}}async createCompositeUniqueConstraints(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.uniques.filter((e=>e.columns.length>1&&!t.uniques.find((t=>t.name===e.name)))).map((e=>ze.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new unique constraints: ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createUniqueConstraints(t,n))}}async createNewExclusions(){if("postgres"===this.connection.driver.options.type)for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.exclusions.filter((e=>!t.exclusions.find((t=>t.name===e.name)))).map((e=>Ye.create(e)));0!==n.length&&(this.connection.logger.logSchemaBuild(`adding new exclusion constraints: ${n.map((e=>`"${e.name}"`)).join(", ")} in table "${t.name}"`),await this.queryRunner.createExclusionConstraints(t,n))}}async createForeignKeys(){for(const e of this.entityToSyncMetadatas){const t=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===this.getTablePath(e)));if(!t)continue;const n=e.foreignKeys.filter((e=>!t.foreignKeys.find((t=>t.name===e.name&&this.getTablePath(t)===this.getTablePath(e.referencedEntityMetadata)))));if(0===n.length)continue;const a=n.map((e=>He.create(e,this.connection.driver)));this.connection.logger.logSchemaBuild(`creating a foreign keys: ${n.map((e=>e.name)).join(", ")} on table "${t.name}"`),await this.queryRunner.createForeignKeys(t,a)}}async dropColumnReferencedForeignKeys(e,t){const n=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===e));if(!n)return;const a=[],i=n.foreignKeys.find((e=>-1!==e.columnNames.indexOf(t)));if(i){const e=n.clone();e.foreignKeys=[i],a.push(e),n.removeForeignKey(i)}for(const n of this.queryRunner.loadedTables){const i=n.foreignKeys.filter((n=>this.getTablePath(n)===e&&-1!==n.referencedColumnNames.indexOf(t)));if(i.length>0){const e=n.clone();e.foreignKeys=i,a.push(e),i.forEach((e=>n.removeForeignKey(e)))}}if(a.length>0)for(const e of a)this.connection.logger.logSchemaBuild(`dropping related foreign keys of ${e.name}: ${e.foreignKeys.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropForeignKeys(e,e.foreignKeys)}async dropColumnCompositeIndices(e,t){const n=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===e));if(!n)return;const a=n.indices.filter((e=>e.columnNames.length>1&&-1!==e.columnNames.indexOf(t)));0!==a.length&&(this.connection.logger.logSchemaBuild(`dropping related indices of "${e}"."${t}": ${a.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropIndices(n,a))}async dropColumnCompositeUniques(e,t){const n=this.queryRunner.loadedTables.find((t=>this.getTablePath(t)===e));if(!n)return;const a=n.uniques.filter((e=>e.columnNames.length>1&&-1!==e.columnNames.indexOf(t)));0!==a.length&&(this.connection.logger.logSchemaBuild(`dropping related unique constraints of "${e}"."${t}": ${a.map((e=>e.name)).join(", ")}`),await this.queryRunner.dropUniqueConstraints(n,a))}metadataColumnsToTableColumnOptions(e){return e.map((e=>Ge.createTableColumnOptions(e,this.connection.driver)))}async createTypeormMetadataTable(e){const t=this.currentSchema,n=this.currentDatabase,a=this.connection.driver.buildTableName(this.connection.metadataTableName,t,n),i="spanner"===this.connection.driver.options.type;await e.createTable(new Xe({database:n,schema:t,name:a,columns:[{name:"type",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataType}),isNullable:!1,isPrimary:i},{name:"database",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataDatabase}),isNullable:!0,isPrimary:i},{name:"schema",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataSchema}),isNullable:!0,isPrimary:i},{name:"table",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataTable}),isNullable:!0,isPrimary:i},{name:"name",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataName}),isNullable:!0,isPrimary:i},{name:"value",type:this.connection.driver.normalizeType({type:this.connection.driver.mappedDataTypes.metadataValue}),isNullable:!0,isPrimary:i}]}),!0)}}class zt{constructor(e){this.isReplicated=!1,this.treeSupport=!0,this.transactionSupport="nested",this.supportedDataTypes=["int","integer","tinyint","smallint","mediumint","bigint","unsigned big int","int2","int8","integer","character","varchar","varying character","nchar","native character","nvarchar","text","clob","text","blob","real","double","double precision","float","real","numeric","decimal","boolean","date","time","datetime","json"],this.supportedUpsertTypes=["on-conflict-do-update"],this.withLengthColumnTypes=["character","varchar","varying character","nchar","native character","nvarchar","text","blob","clob"],this.spatialTypes=[],this.withPrecisionColumnTypes=["real","double","double precision","float","real","numeric","decimal","date","time","datetime"],this.withScaleColumnTypes=["real","double","double precision","float","real","numeric","decimal"],this.mappedDataTypes={createDate:"datetime",createDateDefault:"datetime('now')",updateDate:"datetime",updateDateDefault:"datetime('now')",deleteDate:"datetime",deleteDateNullable:!0,version:"integer",treeLevel:"integer",migrationId:"integer",migrationName:"varchar",migrationTimestamp:"bigint",cacheId:"int",cacheIdentifier:"varchar",cacheTime:"bigint",cacheDuration:"int",cacheQuery:"text",cacheResult:"text",metadataType:"varchar",metadataDatabase:"varchar",metadataSchema:"varchar",metadataTable:"varchar",metadataName:"varchar",metadataValue:"text"},this.cteCapabilities={enabled:!0,requiresRecursiveHint:!0},this.attachedDatabases={},this.connection=e,this.options=e.options,this.database=re.buildDriverOptions(this.options).database}async connect(){this.databaseConnection=await this.createDatabaseConnection()}afterConnect(){return Promise.resolve()}async disconnect(){return new Promise(((e,t)=>{this.queryRunner=void 0,this.databaseConnection.close((n=>n?t(n):e()))}))}hasAttachedDatabases(){return!!Object.keys(this.attachedDatabases).length}getAttachedDatabaseHandleByRelativePath(e){return this.attachedDatabases?.[e]?.attachHandle}getAttachedDatabasePathRelativeByHandle(e){return Object.values(this.attachedDatabases).find((({attachHandle:t})=>e===t))?.attachFilepathRelative}createSchemaBuilder(){return new Gt(this.connection)}preparePersistentValue(e,t){return t.transformer&&(e=ue.transformTo(t.transformer,e)),null==e?e:t.type===Boolean||"boolean"===t.type?!0===e?1:0:"date"===t.type?St.mixedDateToDateString(e):"time"===t.type?St.mixedDateToTimeString(e):"datetime"===t.type||t.type===Date?St.mixedDateToUtcDatetimeString(e):"json"===t.type||"simple-json"===t.type?St.simpleJsonToString(e):"simple-array"===t.type?St.simpleArrayToString(e):"simple-enum"===t.type?St.simpleEnumToString(e):e}prepareHydratedValue(e,t){return null==e?t.transformer?ue.transformFrom(t.transformer,e):e:(t.type===Boolean||"boolean"===t.type?e=!!e:"datetime"===t.type||t.type===Date?(e&&"string"==typeof e&&(/^\d\d\d\d-\d\d-\d\d \d\d:\d\d/.test(e)&&(e=e.replace(" ","T")),/^\d\d\d\d-\d\d-\d\dT\d\d:\d\d(:\d\d(\.\d\d\d)?)?$/.test(e)&&(e+="Z")),e=St.normalizeHydratedDate(e)):"date"===t.type?e=St.mixedDateToDateString(e):"time"===t.type?e=St.mixedTimeToString(e):"json"===t.type||"simple-json"===t.type?e=St.stringToSimpleJson(e):"simple-array"===t.type?e=St.stringToSimpleArray(e):"simple-enum"===t.type?e=St.stringToSimpleEnum(e,t):t.type===Number&&(e=isNaN(+e)?e:parseInt(e)),t.transformer&&(e=ue.transformFrom(t.transformer,e)),e)}escapeQueryWithParameters(e,t,n){const a=Object.keys(n).map((e=>"boolean"==typeof n[e]?!0===n[e]?1:0:n[e]instanceof Date?St.mixedDateToUtcDatetimeString(n[e]):n[e]));return t&&Object.keys(t).length?[e=e.replace(/:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,i)=>{if(!t.hasOwnProperty(i))return e;let r=t[i];return n?r.map((e=>(a.push(e),this.createParameter(i,a.length-1)))).join(", "):"function"==typeof r?r():"number"==typeof r?String(r):"boolean"==typeof r?(a.push(+r),this.createParameter(i,a.length-1)):r instanceof Date?(a.push(St.mixedDateToUtcDatetimeString(r)),this.createParameter(i,a.length-1)):(a.push(r),this.createParameter(i,a.length-1))})),a]:[e,a]}escape(e){return'"'+e+'"'}buildTableName(e,t,n){return e}parseTableName(e){const t=this.database,n=void 0;if(g.isTable(e)||g.isView(e)){const a=this.parseTableName(e.schema?`"${e.schema}"."${e.name}"`:e.name);return{database:e.database||a.database||t,schema:e.schema||a.schema||n,tableName:a.tableName}}if(g.isTableForeignKey(e)){const a=this.parseTableName(e.referencedTableName);return{database:e.referencedDatabase||a.database||t,schema:e.referencedSchema||a.schema||n,tableName:a.tableName}}if(g.isEntityMetadata(e))return{database:e.database||t,schema:e.schema||n,tableName:e.tableName};const a=e.split(".");return 3===a.length?{database:a[0]||t,schema:a[1]||n,tableName:a[2]}:2===a.length?{database:this.getAttachedDatabasePathRelativeByHandle(a[0])??t,schema:a[0],tableName:a[1]}:{database:t,schema:n,tableName:e}}normalizeType(e){return e.type===Number||"int"===e.type?"integer":e.type===String?"varchar":e.type===Date?"datetime":e.type===Boolean?"boolean":"uuid"===e.type?"varchar":"simple-array"===e.type||"simple-json"===e.type?"text":"simple-enum"===e.type?"varchar":e.type||""}normalizeDefault(e){const t=e.default;return"number"==typeof t?""+t:"boolean"==typeof t?t?"1":"0":"function"==typeof t?t():"string"==typeof t?`'${t}'`:null!=t?`${t}`:void 0}normalizeIsUnique(e){return e.entityMetadata.uniques.some((t=>1===t.columns.length&&t.columns[0]===e))}getColumnLength(e){return e.length?e.length.toString():""}createFullType(e){let t=e.type;return e.enum?"varchar":(e.length?t+="("+e.length+")":null!==e.precision&&void 0!==e.precision&&null!==e.scale&&void 0!==e.scale?t+="("+e.precision+","+e.scale+")":null!==e.precision&&void 0!==e.precision&&(t+="("+e.precision+")"),e.isArray&&(t+=" array"),t)}obtainMasterConnection(){return Promise.resolve()}obtainSlaveConnection(){return Promise.resolve()}createGeneratedMap(e,t,n,a){const i=e.generatedColumns.reduce(((e,i)=>{let r;return"increment"===i.generationStrategy&&t&&(r=t-a+n+1),r?xe.mergeDeep(e,i.createValueMap(r)):e}),{});return Object.keys(i).length>0?i:void 0}findChangedColumns(e,t){return t.filter((t=>{const n=e.find((e=>e.name===t.databaseName));return!!n&&(n.name!==t.databaseName||n.type!==this.normalizeType(t)||n.length!==t.length||n.precision!==t.precision||n.scale!==t.scale||this.normalizeDefault(t)!==n.default||n.isPrimary!==t.isPrimary||n.isNullable!==t.isNullable||n.generatedType!==t.generatedType||n.asExpression!==t.asExpression||n.isUnique!==this.normalizeIsUnique(t)||n.enum&&t.enum&&!xe.isArraysEqual(n.enum,t.enum.map((e=>e+"")))||"uuid"!==t.generationStrategy&&n.isGenerated!==t.isGenerated)}))}isReturningSqlSupported(){return!1}isUUIDGenerationSupported(){return!1}isFullTextColumnTypeSupported(){return!1}createParameter(e,t){return"?"}createDatabaseConnection(){throw new s("Do not use AbstractSqlite directly, it has to be used with one of the sqlite drivers")}loadDependencies(){}}class Jt{constructor(e,t){this.query=e,this.parameters=t,this["@instanceof"]=Symbol.for("Query")}}class Yt{constructor(){this.upQueries=[],this.downQueries=[]}}class Xt{constructor(){this.isReleased=!1,this.isTransactionActive=!1,this.data={},this.loadedTables=[],this.loadedViews=[],this.sqlMemoryMode=!1,this.sqlInMemory=new Yt,this.transactionDepth=0,this.cachedTablePaths={}}async beforeMigration(){}async afterMigration(){}async getTable(e){return this.loadedTables=await this.loadTables([e]),this.loadedTables.length>0?this.loadedTables[0]:void 0}async getTables(e){return e?(this.loadedTables=await this.loadTables(e),this.loadedTables):await this.loadTables(e)}async getView(e){return this.loadedViews=await this.loadViews([e]),this.loadedViews.length>0?this.loadedViews[0]:void 0}async getViews(e){return this.loadedViews=await this.loadViews(e),this.loadedViews}enableSqlMemory(){this.sqlInMemory=new Yt,this.sqlMemoryMode=!0}disableSqlMemory(){this.sqlInMemory=new Yt,this.sqlMemoryMode=!1}clearSqlMemory(){this.sqlInMemory=new Yt}getMemorySql(){return this.sqlInMemory}async executeMemoryUpSql(){for(const{query:e,parameters:t}of this.sqlInMemory.upQueries)await this.query(e,t)}async executeMemoryDownSql(){for(const{query:e,parameters:t}of this.sqlInMemory.downQueries.reverse())await this.query(e,t)}getReplicationMode(){return this.mode}async getCachedView(e){const t=this.loadedViews.find((t=>t.name===e));if(t)return t;const n=await this.loadViews([e]);if(n.length>0)return this.loadedViews.push(n[0]),n[0];throw new s(`View "${e}" does not exist.`)}async getCachedTable(e){if(e in this.cachedTablePaths){const t=this.cachedTablePaths[e],n=this.loadedTables.find((e=>this.getTablePath(e)===t));if(n)return n}const t=await this.loadTables([e]);if(t.length>0){const n=this.getTablePath(t[0]);return this.loadedTables.find((e=>this.getTablePath(e)===n))||(this.cachedTablePaths[e]=this.getTablePath(t[0]),this.loadedTables.push(t[0]),t[0])}throw new s(`Table "${e}" does not exist.`)}replaceCachedTable(e,t){const n=this.getTablePath(e),a=this.loadedTables.find((e=>this.getTablePath(e)===n));for(const[e,a]of Object.entries(this.cachedTablePaths))a===n&&(this.cachedTablePaths[e]=this.getTablePath(t));a&&(a.database=t.database,a.schema=t.schema,a.name=t.name,a.columns=t.columns,a.indices=t.indices,a.foreignKeys=t.foreignKeys,a.uniques=t.uniques,a.checks=t.checks,a.justCreated=t.justCreated,a.engine=t.engine,a.comment=t.comment)}getTablePath(e){const t=this.connection.driver.parseTableName(e);return this.connection.driver.buildTableName(t.tableName,t.schema,t.database)}getTypeormMetadataTableName(){const e=this.connection.driver.options;return this.connection.driver.buildTableName(this.connection.metadataTableName,e.schema,e.database)}selectTypeormMetadataSql({database:e,schema:t,table:n,type:a,name:i}){const r=this.connection.createQueryBuilder(),s=r.select().from(this.getTypeormMetadataTableName(),"t").where(`${r.escape("type")} = :type`,{type:a}).andWhere(`${r.escape("name")} = :name`,{name:i});e&&s.andWhere(`${r.escape("database")} = :database`,{database:e}),t&&s.andWhere(`${r.escape("schema")} = :schema`,{schema:t}),n&&s.andWhere(`${r.escape("table")} = :table`,{table:n});const[o,c]=s.getQueryAndParameters();return new Jt(o,c)}insertTypeormMetadataSql({database:e,schema:t,table:n,type:a,name:i,value:r}){const[s,o]=this.connection.createQueryBuilder().insert().into(this.getTypeormMetadataTableName()).values({database:e,schema:t,table:n,type:a,name:i,value:r}).getQueryAndParameters();return new Jt(s,o)}deleteTypeormMetadataSql({database:e,schema:t,table:n,type:a,name:i}){const r=this.connection.createQueryBuilder(),s=r.delete().from(this.getTypeormMetadataTableName()).where(`${r.escape("type")} = :type`,{type:a}).andWhere(`${r.escape("name")} = :name`,{name:i});e&&s.andWhere(`${r.escape("database")} = :database`,{database:e}),t&&s.andWhere(`${r.escape("schema")} = :schema`,{schema:t}),n&&s.andWhere(`${r.escape("table")} = :table`,{table:n});const[o,c]=s.getQueryAndParameters();return new Jt(o,c)}isColumnChanged(e,t,n,a,i=!0){return e.charset!==t.charset||e.collation!==t.collation||e.precision!==t.precision||e.scale!==t.scale||e.width!==t.width||e.zerofill!==t.zerofill||e.unsigned!==t.unsigned||e.asExpression!==t.asExpression||n&&e.default!==t.default||e.onUpdate!==t.onUpdate||e.isNullable!==t.isNullable||a&&e.comment!==t.comment||i&&this.isEnumChanged(e,t)}isEnumChanged(e,t){return!xe.isArraysEqual(e.enum||[],t.enum||[])}isDefaultColumnLength(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n&&this.connection.driver.getColumnLength(n))return!1}return!!(this.connection.driver.dataTypeDefaults&&this.connection.driver.dataTypeDefaults[t.type]&&this.connection.driver.dataTypeDefaults[t.type].length)&&this.connection.driver.dataTypeDefaults[t.type].length.toString()===n.toString()}isDefaultColumnPrecision(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n&&null!==n.precision&&void 0!==n.precision)return!1}return!(!this.connection.driver.dataTypeDefaults||!this.connection.driver.dataTypeDefaults[t.type]||null===this.connection.driver.dataTypeDefaults[t.type].precision||void 0===this.connection.driver.dataTypeDefaults[t.type].precision)&&this.connection.driver.dataTypeDefaults[t.type].precision===n}isDefaultColumnScale(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n&&null!==n.scale&&void 0!==n.scale)return!1}return!(!this.connection.driver.dataTypeDefaults||!this.connection.driver.dataTypeDefaults[t.type]||null===this.connection.driver.dataTypeDefaults[t.type].scale||void 0===this.connection.driver.dataTypeDefaults[t.type].scale)&&this.connection.driver.dataTypeDefaults[t.type].scale===n}async executeQueries(e,t){if(g.isQuery(e)&&(e=[e]),g.isQuery(t)&&(t=[t]),this.sqlInMemory.upQueries.push(...e),this.sqlInMemory.downQueries.push(...t),!0===this.sqlMemoryMode)return Promise.resolve();for(const{query:t,parameters:n}of e)await this.query(t,n)}generateIndexName(e,t){return this.connection.namingStrategy.indexName(e,t.columnNames,t.where)}}!function(e){e.VIEW="VIEW",e.MATERIALIZED_VIEW="MATERIALIZED_VIEW",e.GENERATED_COLUMN="GENERATED_COLUMN"}(Mt||(Mt={}));class Zt extends Xt{constructor(){super(),this.transactionPromise=null}connect(){return Promise.resolve(this.driver.databaseConnection)}release(){return this.loadedTables=[],this.clearSqlMemory(),Promise.resolve()}async startTransaction(e){if("none"===this.driver.transactionSupport)throw new s(`Transactions aren't supported by ${this.connection.driver.options.type}.`);if(this.isTransactionActive&&"simple"===this.driver.transactionSupport)throw new f;if(e&&"READ UNCOMMITTED"!==e&&"SERIALIZABLE"!==e)throw new s("SQLite only supports SERIALIZABLE and READ UNCOMMITTED isolation");this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?(this.transactionDepth+=1,e&&("READ UNCOMMITTED"===e?await this.query("PRAGMA read_uncommitted = true"):await this.query("PRAGMA read_uncommitted = false")),await this.query("BEGIN TRANSACTION")):(this.transactionDepth+=1,await this.query("SAVEPOINT typeorm_"+(this.transactionDepth-1))),await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`RELEASE SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.query("COMMIT"),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`ROLLBACK TO SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.query("ROLLBACK"),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionRollback")}stream(e,t,n,a){throw new s("Stream is not supported by sqlite driver.")}async getDatabases(){return Promise.resolve([])}async getSchemas(e){return Promise.resolve([])}async hasDatabase(e){return Promise.resolve(!1)}async getCurrentDatabase(){return Promise.resolve(void 0)}async hasSchema(e){throw new s("This driver does not support table schemas")}async getCurrentSchema(){return Promise.resolve(void 0)}async hasTable(e){const t=`SELECT * FROM "sqlite_master" WHERE "type" = 'table' AND "name" = '${g.isTable(e)?e.name:e}'`;return!!(await this.query(t)).length}async hasColumn(e,t){const n=g.isTable(e)?e.name:e,a=`PRAGMA table_xinfo(${this.escapePath(n)})`;return!!(await this.query(a)).find((e=>e.name===t))}async createDatabase(e,t){return Promise.resolve()}async dropDatabase(e,t){return Promise.resolve()}async createSchema(e,t){return Promise.resolve()}async dropSchema(e,t){return Promise.resolve()}async createTable(e,t=!1,n=!0,a=!0){const i=[],r=[];if(t&&await this.hasTable(e))return Promise.resolve();i.push(this.createTableSql(e,n)),r.push(this.dropTableSql(e)),a&&e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),i.push(this.createIndexSql(e,t)),r.push(this.dropIndexSql(t))}));const s=e.columns.filter((e=>e.generatedType&&e.asExpression));for(const t of s){const n=this.insertTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:t.name,value:t.asExpression}),a=this.deleteTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:t.name});i.push(n),r.push(a)}await this.executeQueries(i,r)}async dropTable(e,t,n=!0,a=!0){if(t&&!await this.hasTable(e))return Promise.resolve();const i=n,r=g.isTable(e)?e:await this.getCachedTable(e),s=[],o=[];a&&r.indices.forEach((e=>{s.push(this.dropIndexSql(e)),o.push(this.createIndexSql(r,e))})),s.push(this.dropTableSql(r,t)),o.push(this.createTableSql(r,i));const c=r.columns.filter((e=>e.generatedType&&e.asExpression));for(const e of c){const t=this.deleteTypeormMetadataSql({table:r.name,type:Mt.GENERATED_COLUMN,name:e.name}),n=this.insertTypeormMetadataSql({table:r.name,type:Mt.GENERATED_COLUMN,name:e.name,value:e.asExpression});s.push(t),o.push(n)}await this.executeQueries(s,o)}async createView(e,t=!1){const n=[],a=[];n.push(this.createViewSql(e)),t&&n.push(this.insertViewDefinitionSql(e)),a.push(this.dropViewSql(e)),t&&a.push(this.deleteViewDefinitionSql(e)),await this.executeQueries(n,a)}async dropView(e){const t=g.isView(e)?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();a.name=t;const i=new Jt(`ALTER TABLE ${this.escapePath(n.name)} RENAME TO ${this.escapePath(t)}`),r=new Jt(`ALTER TABLE ${this.escapePath(t)} RENAME TO ${this.escapePath(n.name)}`);await this.executeQueries(i,r),a.uniques.forEach((e=>{const t=this.connection.namingStrategy.uniqueConstraintName(n,e.columnNames);e.name===t&&(e.name=this.connection.namingStrategy.uniqueConstraintName(a,e.columnNames))})),a.foreignKeys.forEach((e=>{const t=this.connection.namingStrategy.foreignKeyName(n,e.columnNames,this.getTablePath(e),e.referencedColumnNames);e.name===t&&(e.name=this.connection.namingStrategy.foreignKeyName(a,e.columnNames,this.getTablePath(e),e.referencedColumnNames))})),a.indices.forEach((e=>{const t=this.connection.namingStrategy.indexName(n,e.columnNames,e.where);e.name===t&&(e.name=this.connection.namingStrategy.indexName(a,e.columnNames,e.where))})),n.name=a.name,await this.recreateTable(a,n)}async addColumn(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);return this.addColumns(n,[t])}async addColumns(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addColumn(e))),await this.recreateTable(a,n)}async renameColumn(e,t,n){const a=g.isTable(e)?e:await this.getCachedTable(e),i=g.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!i)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);let r;return g.isTableColumn(n)?r=n:(r=i.clone(),r.name=n),this.changeColumn(a,i,r)}async changeColumn(e,t,n){const a=g.isTable(e)?e:await this.getCachedTable(e),i=g.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!i)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);await this.changeColumns(a,[{oldColumn:i,newColumn:n}])}async changeColumns(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>{e.newColumn.name!==e.oldColumn.name&&(a.findColumnUniques(e.oldColumn).forEach((t=>{const i=this.connection.namingStrategy.uniqueConstraintName(n,t.columnNames);t.columnNames.splice(t.columnNames.indexOf(e.oldColumn.name),1),t.columnNames.push(e.newColumn.name),t.name===i&&(t.name=this.connection.namingStrategy.uniqueConstraintName(a,t.columnNames))})),a.findColumnForeignKeys(e.oldColumn).forEach((t=>{const i=this.connection.namingStrategy.foreignKeyName(n,t.columnNames,this.getTablePath(t),t.referencedColumnNames);t.columnNames.splice(t.columnNames.indexOf(e.oldColumn.name),1),t.columnNames.push(e.newColumn.name),t.name===i&&(t.name=this.connection.namingStrategy.foreignKeyName(a,t.columnNames,this.getTablePath(t),t.referencedColumnNames))})),a.findColumnIndices(e.oldColumn).forEach((t=>{const i=this.connection.namingStrategy.indexName(n,t.columnNames,t.where);t.columnNames.splice(t.columnNames.indexOf(e.oldColumn.name),1),t.columnNames.push(e.newColumn.name),t.name===i&&(t.name=this.connection.namingStrategy.indexName(a,t.columnNames,t.where))})));const t=a.columns.find((t=>t.name===e.oldColumn.name));t&&(a.columns[a.columns.indexOf(t)]=e.newColumn)})),await this.recreateTable(a,n)}async dropColumn(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableColumn(t)?t:n.findColumnByName(t);if(!a)throw new s(`Column "${t}" was not found in table "${n.name}"`);await this.dropColumns(n,[a])}async dropColumns(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>{const t=g.isTableColumn(e)?e:n.findColumnByName(e);if(!t)throw new Error(`Column "${e}" was not found in table "${n.name}"`);a.removeColumn(t),a.findColumnUniques(t).forEach((e=>a.removeUniqueConstraint(e))),a.findColumnIndices(t).forEach((e=>a.removeIndex(e))),a.findColumnForeignKeys(t).forEach((e=>a.removeForeignKey(e)))})),await this.recreateTable(a,n)}async createPrimaryKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();a.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)})),await this.recreateTable(a,n),n.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)}))}async updatePrimaryKeys(e,t){await Promise.resolve()}async dropPrimaryKey(e){const t=g.isTable(e)?e:await this.getCachedTable(e),n=t.clone();n.primaryColumns.forEach((e=>{e.isPrimary=!1})),await this.recreateTable(n,t),t.primaryColumns.forEach((e=>{e.isPrimary=!1}))}async createUniqueConstraint(e,t){await this.createUniqueConstraints(e,[t])}async createUniqueConstraints(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addUniqueConstraint(e))),await this.recreateTable(a,n)}async dropUniqueConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableUnique(t)?t:n.uniques.find((e=>e.name===t));if(!a)throw new s(`Supplied unique constraint was not found in table ${n.name}`);await this.dropUniqueConstraints(n,[a])}async dropUniqueConstraints(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.removeUniqueConstraint(e))),await this.recreateTable(a,n)}async createCheckConstraint(e,t){await this.createCheckConstraints(e,[t])}async createCheckConstraints(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addCheckConstraint(e))),await this.recreateTable(a,n)}async dropCheckConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableCheck(t)?t:n.checks.find((e=>e.name===t));if(!a)throw new s(`Supplied check constraint was not found in table ${n.name}`);await this.dropCheckConstraints(n,[a])}async dropCheckConstraints(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.removeCheckConstraint(e))),await this.recreateTable(a,n)}async createExclusionConstraint(e,t){throw new s("Sqlite does not support exclusion constraints.")}async createExclusionConstraints(e,t){throw new s("Sqlite does not support exclusion constraints.")}async dropExclusionConstraint(e,t){throw new s("Sqlite does not support exclusion constraints.")}async dropExclusionConstraints(e,t){throw new s("Sqlite does not support exclusion constraints.")}async createForeignKey(e,t){await this.createForeignKeys(e,[t])}async createForeignKeys(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.addForeignKey(e))),await this.recreateTable(a,n)}async dropForeignKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableForeignKey(t)?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new s(`Supplied foreign key was not found in table ${n.name}`);await this.dropForeignKeys(e,[a])}async dropForeignKeys(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone();t.forEach((e=>a.removeForeignKey(e))),await this.recreateTable(a,n)}async createIndex(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.generateIndexName(n,t));const a=this.createIndexSql(n,t),i=this.dropIndexSql(t);await this.executeQueries(a,i),n.addIndex(t)}async createIndices(e,t){const n=t.map((t=>this.createIndex(e,t)));await Promise.all(n)}async dropIndex(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableIndex(t)?t:n.indices.find((e=>e.name===t));if(!a)throw new s(`Supplied index ${t} was not found in table ${n.name}`);a.name||(a.name=this.generateIndexName(n,a));const i=this.dropIndexSql(a),r=this.createIndexSql(n,a);await this.executeQueries(i,r),n.removeIndex(a)}async dropIndices(e,t){const n=t.map((t=>this.dropIndex(e,t)));await Promise.all(n)}async clearTable(e){await this.query(`DELETE FROM ${this.escapePath(e)}`)}async clearDatabase(e){let t;e&&this.driver.getAttachedDatabaseHandleByRelativePath(e)&&(t=this.driver.getAttachedDatabaseHandleByRelativePath(e)),await this.query("PRAGMA foreign_keys = OFF");const n=this.isTransactionActive;n||await this.startTransaction();try{const e=t?`SELECT 'DROP VIEW "${t}"."' || name || '";' as query FROM "${t}"."sqlite_master" WHERE "type" = 'view'`:"SELECT 'DROP VIEW \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'view'",a=await this.query(e);await Promise.all(a.map((e=>this.query(e.query))));const i=t?`SELECT 'DROP TABLE "${t}"."' || name || '";' as query FROM "${t}"."sqlite_master" WHERE "type" = 'table' AND "name" != 'sqlite_sequence'`:"SELECT 'DROP TABLE \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'table' AND \"name\" != 'sqlite_sequence'",r=await this.query(i);await Promise.all(r.map((e=>this.query(e.query)))),n||await this.commitTransaction()}catch(e){try{n||await this.rollbackTransaction()}catch(e){}throw e}finally{await this.query("PRAGMA foreign_keys = ON")}}async loadViews(e){if(!await this.hasTable(this.getTypeormMetadataTableName()))return[];e||(e=[]);const t=e.map((e=>"'"+e+"'")).join(", ");let n=`SELECT "t".* FROM "${this.getTypeormMetadataTableName()}" "t" INNER JOIN "sqlite_master" s ON "s"."name" = "t"."name" AND "s"."type" = 'view' WHERE "t"."type" = '${Mt.VIEW}'`;return t.length>0&&(n+=` AND "t"."name" IN (${t})`),(await this.query(n)).map((e=>{const t=new Kt;return t.name=e.name,t.expression=e.value,t}))}async loadTableRecords(e,t){let n;const[a,i]=this.splitTablePath(e);return a&&this.driver.getAttachedDatabasePathRelativeByHandle(a)&&(n=this.driver.getAttachedDatabasePathRelativeByHandle(a)),this.query(`SELECT ${n?`'${n}'`:null} as database, ${a?`'${a}'`:null} as schema, * FROM ${a?`"${a}".`:""}${this.escapePath("sqlite_master")} WHERE "type" = '${t}' AND "${"table"===t?"name":"tbl_name"}" IN ('${i}')`)}async loadPragmaRecords(e,t){const[,n]=this.splitTablePath(e);return this.query(`PRAGMA ${t}("${n}")`)}async loadTables(e){if(e&&0===e.length)return[];let t,n=[];if(e){const a=e.filter((e=>1===e.split(".").length)).map((e=>`'${e}'`)),i=e.filter((e=>e.split(".").length>1)),r=e=>{const t=[...i.map((t=>this.loadTableRecords(t,e)))];return a.length&&t.push(this.query(`SELECT * FROM "sqlite_master" WHERE "type" = '${e}' AND "${"table"===e?"name":"tbl_name"}" IN (${a})`)),t};n=(await Promise.all(r("table"))).reduce(((e,t)=>[...e,...t]),[]).filter(Boolean),t=(await Promise.all(r("index"))).reduce(((e,t)=>[...e,...t]),[]).filter(Boolean)}else{const e='SELECT * FROM "sqlite_master" WHERE "type" = \'table\'';n.push(...await this.query(e));const a=n.map((({name:e})=>`'${e}'`)).join(", ");t=await this.query(`SELECT * FROM "sqlite_master" WHERE "type" = 'index' AND "tbl_name" IN (${a})`)}return 0===n.length?[]:Promise.all(n.map((async e=>{const n=e.database&&this.driver.getAttachedDatabaseHandleByRelativePath(e.database)?`${this.driver.getAttachedDatabaseHandleByRelativePath(e.database)}.${e.name}`:e.name,a=e.sql,i=a.includes("WITHOUT ROWID"),r=new Xe({name:n,withoutRowid:i}),[s,o,c]=await Promise.all([this.loadPragmaRecords(n,"table_xinfo"),this.loadPragmaRecords(n,"index_list"),this.loadPragmaRecords(n,"foreign_key_list")]);let h;const l=e.sql;let u,p=l.toUpperCase().indexOf("AUTOINCREMENT");if(-1!==p){h=l.substr(0,p);const e=h.lastIndexOf(","),t=h.lastIndexOf("(");-1!==e?(h=h.substr(e),h=h.substr(0,h.lastIndexOf('"')),h=h.substr(h.indexOf('"')+1)):-1!==t&&(h=h.substr(t),h=h.substr(0,h.lastIndexOf('"')),h=h.substr(h.indexOf('"')+1))}r.columns=await Promise.all(s.map((async e=>{const t=new We;if(t.name=e.name,t.type=e.type.toLowerCase(),t.default=null!==e.dflt_value&&void 0!==e.dflt_value?e.dflt_value:void 0,t.isNullable=0===e.notnull,t.isPrimary=e.pk>0,t.comment="",t.isGenerated=h===e.name,t.isGenerated&&(t.generationStrategy="increment"),2===e.hidden||3===e.hidden){t.generatedType=2===e.hidden?"VIRTUAL":"STORED";const n=this.selectTypeormMetadataSql({table:r.name,type:Mt.GENERATED_COLUMN,name:t.name}),a=await this.query(n.query,n.parameters);a[0]&&a[0].value?t.asExpression=a[0].value:t.asExpression=""}"varchar"===t.type&&(t.enum=xe.parseSqlCheckExpression(a,t.name));let n=t.type.indexOf("(");if(-1!==n){const e=t.type;let a=e.substr(0,n);if(this.driver.withLengthColumnTypes.find((e=>e===a))){let i=parseInt(e.substring(n+1,e.length-1));i&&(t.length=i.toString(),t.type=a)}if(this.driver.withPrecisionColumnTypes.find((e=>e===a))){const n=new RegExp(`^${a}\\((\\d+),?\\s?(\\d+)?\\)`),i=e.match(n);i&&i[1]&&(t.precision=+i[1]),this.driver.withScaleColumnTypes.find((e=>e===a))&&i&&i[2]&&(t.scale=+i[2]),t.type=a}}return t})));const d=[],m=/CONSTRAINT "([^"]*)" FOREIGN KEY ?\((.*?)\) REFERENCES "([^"]*)"/g;for(;null!==(u=m.exec(a));)d.push({name:u[1],columns:u[2].substr(1,u[2].length-2).split('", "'),referencedTableName:u[3]});const y=xe.uniq(c,(e=>e.id));let f;r.foreignKeys=y.map((e=>{const t=c.filter((t=>t.id===e.id&&t.table===e.table)),n=t.map((e=>e.from)),a=t.map((e=>e.to)),i=d.find((t=>t.referencedTableName===e.table&&t.columns.every((e=>-1!==n.indexOf(e)))));return new He({name:i?.name,columnNames:n,referencedTableName:e.table,referencedColumnNames:a,onDelete:e.on_delete,onUpdate:e.on_update})}));const g=[],E=/CONSTRAINT "([^"]*)" UNIQUE ?\((.*?)\)/g;for(;null!==(f=E.exec(a));)g.push({name:f[1],columns:f[2].substr(1,f[2].length-2).split('", "')});const b=o.filter((e=>"u"===e.origin)).map((e=>e.name)).filter(((e,t,n)=>n.indexOf(e)===t)).map((async e=>{const t=o.find((t=>t.name===e)),n=(await this.query(`PRAGMA index_info("${t.name}")`)).sort(((e,t)=>parseInt(e.seqno)-parseInt(t.seqno))).map((e=>e.name));if(1===n.length){const e=r.columns.find((e=>!!n.find((t=>t===e.name))));e&&(e.isUnique=!0)}const a=g.find((e=>e.columns.every((e=>-1!==n.indexOf(e)))));return new ze({name:a?a.name:this.connection.namingStrategy.uniqueConstraintName(r,n),columnNames:n})}));let T;r.uniques=await Promise.all(b);const w=/CONSTRAINT "([^"]*)" CHECK ?(\(.*?\))([,]|[)]$)/g;for(;null!==(T=w.exec(a));)r.checks.push(new Je({name:T[1],expression:T[2]}));const N=o.filter((e=>"c"===e.origin)).map((e=>e.name)).filter(((e,t,n)=>n.indexOf(e)===t)).map((async n=>{const a=t.find((e=>e.name===n)),i=/WHERE (.*)/.exec(a.sql),s=o.find((e=>e.name===n)),c=(await this.query(`PRAGMA index_info("${s.name}")`)).sort(((e,t)=>parseInt(e.seqno)-parseInt(t.seqno))).map((e=>e.name)),h=`${e.database?`${e.database}.`:""}${s.name}`,l="1"===s.unique||1===s.unique;return new Ke({table:r,name:h,columnNames:c,isUnique:l,where:i?i[1]:void 0})})),A=await Promise.all(N);return r.indices=A.filter((e=>!!e)),r})))}createTableSql(e,t,n){const a=e.columns.filter((e=>e.isPrimary)),i=a.find((e=>e.isGenerated&&"increment"===e.generationStrategy)),r=a.length>1;if(r&&i)throw new s("Sqlite does not support AUTOINCREMENT on composite primary key");const o=e.columns.map((e=>this.buildCreateColumnSql(e,r))).join(", "),[c]=this.splitTablePath(e.name);let h=`CREATE TABLE ${this.escapePath(e.name)} (${o}`,[l,u]=this.splitTablePath(e.name);const p=n?`${l?`${l}.`:""}${u.replace(/^temporary_/,"")}`:e.name;return e.columns.filter((e=>e.isUnique)).forEach((t=>{e.uniques.some((e=>1===e.columnNames.length&&e.columnNames[0]===t.name))||e.uniques.push(new ze({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name]}))})),e.uniques.length>0&&(h+=`, ${e.uniques.map((e=>`CONSTRAINT "${e.name?e.name:this.connection.namingStrategy.uniqueConstraintName(p,e.columnNames)}" UNIQUE (${e.columnNames.map((e=>`"${e}"`)).join(", ")})`)).join(", ")}`),e.checks.length>0&&(h+=`, ${e.checks.map((e=>`CONSTRAINT "${e.name?e.name:this.connection.namingStrategy.checkConstraintName(p,e.expression)}" CHECK (${e.expression})`)).join(", ")}`),e.foreignKeys.length>0&&t&&(h+=`, ${e.foreignKeys.filter((e=>{const[t]=this.splitTablePath(e.referencedTableName);return t===c})).map((e=>{const[,t]=this.splitTablePath(e.referencedTableName),n=e.columnNames.map((e=>`"${e}"`)).join(", ");e.name||(e.name=this.connection.namingStrategy.foreignKeyName(p,e.columnNames,this.getTablePath(e),e.referencedColumnNames));const a=e.referencedColumnNames.map((e=>`"${e}"`)).join(", ");let i=`CONSTRAINT "${e.name}" FOREIGN KEY (${n}) REFERENCES "${t}" (${a})`;return e.onDelete&&(i+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(i+=` ON UPDATE ${e.onUpdate}`),e.deferrable&&(i+=` DEFERRABLE ${e.deferrable}`),i})).join(", ")}`),a.length>1&&(h+=`, PRIMARY KEY (${a.map((e=>`"${e.name}"`)).join(", ")})`),h+=")",e.withoutRowid&&(h+=" WITHOUT ROWID"),new Jt(h)}dropTableSql(e,t){const n=g.isTable(e)?e.name:e,a=t?`DROP TABLE IF EXISTS ${this.escapePath(n)}`:`DROP TABLE ${this.escapePath(n)}`;return new Jt(a)}createViewSql(e){return"string"==typeof e.expression?new Jt(`CREATE VIEW "${e.name}" AS ${e.expression}`):new Jt(`CREATE VIEW "${e.name}" AS ${e.expression(this.connection).getQuery()}`)}insertViewDefinitionSql(e){const t="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:Mt.VIEW,name:e.name,value:t})}dropViewSql(e){const t=g.isView(e)?e.name:e;return new Jt(`DROP VIEW "${t}"`)}deleteViewDefinitionSql(e){const t=g.isView(e)?e.name:e;return this.deleteTypeormMetadataSql({type:Mt.VIEW,name:t})}createIndexSql(e,t){const n=t.columnNames.map((e=>`"${e}"`)).join(", "),[a,i]=this.splitTablePath(e.name);return new Jt(`CREATE ${t.isUnique?"UNIQUE ":""}INDEX ${a?`"${a}".`:""}${this.escapePath(t.name)} ON "${i}" (${n}) ${t.where?"WHERE "+t.where:""}`)}dropIndexSql(e){let t=g.isTableIndex(e)?e.name:e;return new Jt(`DROP INDEX ${this.escapePath(t)}`)}buildCreateColumnSql(e,t){let n='"'+e.name+'"';return g.isColumnMetadata(e)?n+=" "+this.driver.normalizeType(e):n+=" "+this.connection.driver.createFullType(e),e.enum&&(n+=' CHECK( "'+e.name+'" IN ('+e.enum.map((e=>"'"+e+"'")).join(",")+") )"),e.isPrimary&&!t&&(n+=" PRIMARY KEY"),!0===e.isGenerated&&"increment"===e.generationStrategy&&(n+=" AUTOINCREMENT"),e.collation&&(n+=" COLLATE "+e.collation),!0!==e.isNullable&&(n+=" NOT NULL"),e.asExpression?n+=` AS (${e.asExpression}) ${e.generatedType?e.generatedType:"VIRTUAL"}`:void 0!==e.default&&null!==e.default&&(n+=" DEFAULT ("+e.default+")"),n}async recreateTable(e,t,n=!0){const a=[],i=[];t.indices.forEach((e=>{a.push(this.dropIndexSql(e)),i.push(this.createIndexSql(t,e))}));let[r,s]=this.splitTablePath(e.name),[,o]=this.splitTablePath(t.name);if(e.name=s=`${r?`${r}.`:""}temporary_${s}`,a.push(this.createTableSql(e,!0,!0)),i.push(this.dropTableSql(e)),n){let n=e.columns.filter((e=>!e.generatedType)).map((e=>`"${e.name}"`)),r=t.columns.filter((e=>!e.generatedType)).map((e=>`"${e.name}"`));r.length<n.length?n=e.columns.filter((e=>{const n=t.columns.find((t=>t.name===e.name));return(!n||!n.generatedType)&&!e.generatedType&&n})).map((e=>`"${e.name}"`)):r.length>n.length&&(r=t.columns.filter((t=>!t.generatedType&&e.columns.find((e=>e.name===t.name)))).map((e=>`"${e.name}"`))),a.push(new Jt(`INSERT INTO ${this.escapePath(e.name)}(${n.join(", ")}) SELECT ${r.join(", ")} FROM ${this.escapePath(t.name)}`)),i.push(new Jt(`INSERT INTO ${this.escapePath(t.name)}(${r.join(", ")}) SELECT ${n.join(", ")} FROM ${this.escapePath(e.name)}`))}a.push(this.dropTableSql(t)),i.push(this.createTableSql(t,!0)),a.push(new Jt(`ALTER TABLE ${this.escapePath(e.name)} RENAME TO ${this.escapePath(o)}`)),i.push(new Jt(`ALTER TABLE ${this.escapePath(t.name)} RENAME TO ${this.escapePath(s)}`)),e.name=t.name,e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),a.push(this.createIndexSql(e,t)),i.push(this.dropIndexSql(t))})),t.columns.filter((t=>{const n=e.columns.find((e=>e.name===t.name));return t.generatedType&&t.asExpression&&(!n||!n.generatedType&&!n.asExpression)})).forEach((e=>{const n=this.deleteTypeormMetadataSql({table:t.name,type:Mt.GENERATED_COLUMN,name:e.name}),r=this.insertTypeormMetadataSql({table:t.name,type:Mt.GENERATED_COLUMN,name:e.name,value:e.asExpression});a.push(n),i.push(r)})),e.columns.filter((e=>e.generatedType&&e.asExpression&&!t.columns.some((t=>t.name===e.name)))).forEach((t=>{const n=this.insertTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:t.name,value:t.asExpression}),r=this.deleteTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:t.name});a.push(n),i.push(r)})),e.columns.filter((e=>e.generatedType&&e.asExpression)).forEach((n=>{const r=t.columns.find((e=>e.name===n.name&&e.generatedType&&n.generatedType&&e.asExpression!==n.asExpression));if(!r)return;const s=this.deleteTypeormMetadataSql({table:t.name,type:Mt.GENERATED_COLUMN,name:r.name}),o=this.insertTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:n.name,value:n.asExpression});a.push(s),a.push(o);const c=this.insertTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:r.name,value:r.asExpression}),h=this.deleteTypeormMetadataSql({table:t.name,type:Mt.GENERATED_COLUMN,name:n.name});i.push(c),i.push(h)})),await this.executeQueries(a,i),this.replaceCachedTable(t,e)}splitTablePath(e){return-1!==e.indexOf(".")?e.split("."):[void 0,e]}escapePath(e,t){return(g.isTable(e)||g.isView(e)?e.name:e).replace(/^\.+|\.+$/g,"").split(".").map((e=>t?e:`"${e}"`)).join(".")}changeTableComment(e,t){throw new s("sqlit driver does not support change comment.")}}class en{constructor(e){this.queryRunner=e}async broadcast(e,...t){const n=new Ae,a=this[`broadcast${e}Event`];"function"==typeof a&&a.call(this,n,...t),await n.wait()}broadcastBeforeInsertEvent(e,t,n){n&&t.beforeInsertListeners.length&&t.beforeInsertListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((a=>{if(this.isAllowedSubscriber(a,t.target)&&a.beforeInsert){const i=a.beforeInsert({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t});i instanceof Promise&&e.promises.push(i),e.count++}}))}broadcastBeforeUpdateEvent(e,t,n,a,i,r){n&&t.beforeUpdateListeners.length&&t.beforeUpdateListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((s=>{if(this.isAllowedSubscriber(s,t.target)&&s.beforeUpdate){const o=s.beforeUpdate({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,updatedColumns:i||[],updatedRelations:r||[]});o instanceof Promise&&e.promises.push(o),e.count++}}))}broadcastBeforeRemoveEvent(e,t,n,a,i){n&&t.beforeRemoveListeners.length&&t.beforeRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.beforeRemove){const s=r.beforeRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a??i)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastBeforeSoftRemoveEvent(e,t,n,a,i){n&&t.beforeSoftRemoveListeners.length&&t.beforeSoftRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.beforeSoftRemove){const s=r.beforeSoftRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a??i)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastBeforeRecoverEvent(e,t,n,a,i){n&&t.beforeRecoverListeners.length&&t.beforeRecoverListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.beforeRecover){const s=r.beforeRecover({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a??i)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastAfterInsertEvent(e,t,n,a){n&&t.afterInsertListeners.length&&t.afterInsertListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((i=>{if(this.isAllowedSubscriber(i,t.target)&&i.afterInsert){const r=i.afterInsert({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,entityId:t.getEntityIdMixedMap(a)});r instanceof Promise&&e.promises.push(r),e.count++}}))}broadcastBeforeQueryEvent(e,t,n){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((a=>{if(a.beforeQuery){const i=a.beforeQuery({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,query:t,parameters:n});i instanceof Promise&&e.promises.push(i),e.count++}}))}broadcastAfterQueryEvent(e,t,n,a,i,r,s){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((o=>{if(o.afterQuery){const c=o.afterQuery({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,query:t,parameters:n,success:a,executionTime:i,rawResults:r,error:s});c instanceof Promise&&e.promises.push(c),e.count++}}))}broadcastBeforeTransactionStartEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.beforeTransactionStart){const n=t.beforeTransactionStart({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterTransactionStartEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.afterTransactionStart){const n=t.afterTransactionStart({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastBeforeTransactionCommitEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.beforeTransactionCommit){const n=t.beforeTransactionCommit({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterTransactionCommitEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.afterTransactionCommit){const n=t.afterTransactionCommit({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastBeforeTransactionRollbackEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.beforeTransactionRollback){const n=t.beforeTransactionRollback({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterTransactionRollbackEvent(e){this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((t=>{if(t.afterTransactionRollback){const n=t.afterTransactionRollback({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});n instanceof Promise&&e.promises.push(n),e.count++}}))}broadcastAfterUpdateEvent(e,t,n,a,i,r){n&&t.afterUpdateListeners.length&&t.afterUpdateListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((s=>{if(this.isAllowedSubscriber(s,t.target)&&s.afterUpdate){const o=s.afterUpdate({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,updatedColumns:i||[],updatedRelations:r||[]});o instanceof Promise&&e.promises.push(o),e.count++}}))}broadcastAfterRemoveEvent(e,t,n,a,i){n&&t.afterRemoveListeners.length&&t.afterRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.afterRemove){const s=r.afterRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a??i)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastAfterSoftRemoveEvent(e,t,n,a,i){n&&t.afterSoftRemoveListeners.length&&t.afterSoftRemoveListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.afterSoftRemove){const s=r.afterSoftRemove({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a??i)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastAfterRecoverEvent(e,t,n,a,i){n&&t.afterRecoverListeners.length&&t.afterRecoverListeners.forEach((t=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}})),this.queryRunner.connection.subscribers.length&&this.queryRunner.connection.subscribers.forEach((r=>{if(this.isAllowedSubscriber(r,t.target)&&r.afterRecover){const s=r.afterRecover({connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager,entity:n,metadata:t,databaseEntity:a,entityId:t.getEntityIdMixedMap(a??i)});s instanceof Promise&&e.promises.push(s),e.count++}}))}broadcastLoadEventsForAll(e,t,n){return this.broadcastLoadEvent(e,t,n)}broadcastLoadEvent(e,t,n){const a=this.queryRunner.connection.subscribers.filter((e=>this.isAllowedSubscriber(e,t.target)&&e.afterLoad));if(t.relations.length||t.afterLoadListeners.length||a.length){const i=n.filter((e=>!(e instanceof Promise)));t.relations.length&&t.relations.forEach((t=>{i.forEach((n=>{if(t.isLazy&&!n.hasOwnProperty(t.propertyName))return;const a=t.getEntityValue(n);r.isObject(a)&&this.broadcastLoadEvent(e,t.inverseEntityMetadata,Array.isArray(a)?a:[a])}))})),t.afterLoadListeners.length&&t.afterLoadListeners.forEach((t=>{i.forEach((n=>{if(t.isAllowed(n)){const a=t.execute(n);a instanceof Promise&&e.promises.push(a),e.count++}}))})),a.forEach((n=>{i.forEach((a=>{const i=n.afterLoad(a,{entity:a,metadata:t,connection:this.queryRunner.connection,queryRunner:this.queryRunner,manager:this.queryRunner.manager});i instanceof Promise&&e.promises.push(i),e.count++}))}))}}isAllowedSubscriber(e,t){return!e.listenTo||!e.listenTo()||e.listenTo()===Object||e.listenTo()===t||e.listenTo().isPrototypeOf(t)}}class tn{constructor(){this.records=[]}}class nn extends Zt{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new en(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async query(e,t,n=!1){if(this.isReleased)throw new W;const a=await this.connect(),i=new Ae;this.driver.connection.logger.logQuery(e,t,this),this.broadcaster.broadcastBeforeQueryEvent(i,e,t);const r=+new Date;try{const s=await new Promise((async(n,i)=>{a.executeSql(e,t,(e=>n(e)),(e=>i(e)))})),o=this.driver.options.maxQueryExecutionTime,c=+new Date-r;this.broadcaster.broadcastAfterQueryEvent(i,e,t,!0,c,s,void 0),o&&c>o&&this.driver.connection.logger.logQuerySlow(c,e,t,this);const h=new tn;if("INSERT INTO"===e.substr(0,11))h.raw=s.insertId;else{let e=[];for(let t=0;t<s.rows.length;t++)e.push(s.rows.item(t));h.records=e,h.raw=e}return n?h:h.raw}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),this.broadcaster.broadcastAfterQueryEvent(i,e,t,!1,void 0,void 0,n),new k(e,t,n)}finally{await i.wait()}}async startTransaction(){throw new s("Transactions are not supported by the Cordova driver")}async commitTransaction(){throw new s("Transactions are not supported by the Cordova driver")}async rollbackTransaction(){throw new s("Transactions are not supported by the Cordova driver")}async clearDatabase(){await this.query("PRAGMA foreign_keys = OFF");try{const e="SELECT 'DROP VIEW \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'view'",t=await this.query(e),n="SELECT 'DROP TABLE \"' || name || '\";' as query FROM \"sqlite_master\" WHERE \"type\" = 'table' AND \"name\" != 'sqlite_sequence'",a=await this.query(n);await Promise.all(t.map((e=>this.query(e.query)))),await Promise.all(a.map((e=>this.query(e.query))))}finally{await this.query("PRAGMA foreign_keys = ON")}}parametrize(e,t=0){return Object.keys(e).map(((e,t)=>`"${e}"=?`))}}class an extends zt{constructor(e){super(e),this.transactionSupport="none",this.database=this.options.database,this.loadDependencies()}async disconnect(){return this.queryRunner=void 0,new Promise(((e,t)=>{this.databaseConnection.close(e,t)}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new nn(this)),this.queryRunner}async createDatabaseConnection(){const e=Object.assign({},{name:this.options.database,location:this.options.location},this.options.extra||{}),t=await new Promise(((t,n)=>{this.sqlite.openDatabase(e,(e=>t(e)),(e=>n(e)))}));return await new Promise(((e,n)=>{t.executeSql("PRAGMA foreign_keys = ON",[],(()=>e()),(e=>n(e)))})),t}loadDependencies(){try{const e=this.options.driver||window.sqlitePlugin;this.sqlite=e}catch(e){throw new $("Cordova-SQLite","cordova-sqlite-storage")}}}class rn extends Zt{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new en(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}query(e,t,n=!1){if(this.isReleased)throw new W;return new Promise((async(a,i)=>{const r=await this.connect(),s=new Ae;this.driver.connection.logger.logQuery(e,t,this),this.broadcaster.broadcastBeforeQueryEvent(s,e,t);const o=+new Date;r.executeSql(e,t,(async i=>{const r=this.driver.options.maxQueryExecutionTime,c=+new Date-o;this.broadcaster.broadcastAfterQueryEvent(s,e,t,!0,c,i,void 0),r&&c>r&&this.driver.connection.logger.logQuerySlow(c,e,t,this),s.promises.length>0&&await Promise.all(s.promises);const h=new tn;if(i?.hasOwnProperty("rowsAffected")&&(h.affected=i.rowsAffected),i?.hasOwnProperty("rows")){let e=[];for(let t=0;t<i.rows.length;t++)e.push(i.rows.item(t));h.raw=e,h.records=e}"INSERT INTO"===e.substr(0,11)&&(h.raw=i.insertId),a(n?h:h.raw)}),(async n=>{this.driver.connection.logger.logQueryError(n,e,t,this),this.broadcaster.broadcastAfterQueryEvent(s,e,t,!1,void 0,void 0,n),await s.wait(),i(new k(e,t,n))}))}))}parametrize(e,t=0){return Object.keys(e).map(((e,t)=>`"${e}"=?`))}}class sn{constructor(e){this.isReplicated=!1,this.treeSupport=!0,this.transactionSupport="nested",this.supportedDataTypes=["int","integer","tinyint","smallint","mediumint","bigint","unsigned big int","int2","int8","integer","character","varchar","varying character","nchar","native character","nvarchar","text","clob","text","blob","real","double","double precision","float","real","numeric","decimal","boolean","date","time","datetime"],this.supportedUpsertTypes=["on-conflict-do-update"],this.withLengthColumnTypes=["character","varchar","varying character","nchar","native character","nvarchar","text","blob","clob"],this.spatialTypes=[],this.withPrecisionColumnTypes=["real","double","double precision","float","real","numeric","decimal","date","time","datetime"],this.withScaleColumnTypes=["real","double","double precision","float","real","numeric","decimal"],this.mappedDataTypes={createDate:"datetime",createDateDefault:"datetime('now')",updateDate:"datetime",updateDateDefault:"datetime('now')",deleteDate:"datetime",deleteDateNullable:!0,version:"integer",treeLevel:"integer",migrationId:"integer",migrationName:"varchar",migrationTimestamp:"bigint",cacheId:"int",cacheIdentifier:"varchar",cacheTime:"bigint",cacheDuration:"int",cacheQuery:"text",cacheResult:"text",metadataType:"varchar",metadataDatabase:"varchar",metadataSchema:"varchar",metadataTable:"varchar",metadataName:"varchar",metadataValue:"text"},this.cteCapabilities={enabled:!0,requiresRecursiveHint:!0},this.attachedDatabases={},this.connection=e,this.options=e.options,this.database=this.options.database,this.loadDependencies()}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new rn(this)),this.queryRunner}async connect(){this.databaseConnection=await this.createDatabaseConnection()}afterConnect(){return Promise.resolve()}async disconnect(){return new Promise(((e,t)=>{this.queryRunner=void 0,this.databaseConnection.close(e,t)}))}hasAttachedDatabases(){return!!Object.keys(this.attachedDatabases).length}getAttachedDatabaseHandleByRelativePath(e){return this.attachedDatabases?.[e]?.attachHandle}getAttachedDatabasePathRelativeByHandle(e){return Object.values(this.attachedDatabases).find((({attachHandle:t})=>e===t))?.attachFilepathRelative}createSchemaBuilder(){return new Gt(this.connection)}preparePersistentValue(e,t){return t.transformer&&(e=ue.transformTo(t.transformer,e)),null==e?e:t.type===Boolean||"boolean"===t.type?!0===e?1:0:"date"===t.type?St.mixedDateToDateString(e):"time"===t.type?St.mixedDateToTimeString(e):"datetime"===t.type||t.type===Date?St.mixedDateToUtcDatetimeString(e):"simple-array"===t.type?St.simpleArrayToString(e):"simple-json"===t.type?St.simpleJsonToString(e):"simple-enum"===t.type?St.simpleEnumToString(e):e}prepareHydratedValue(e,t){return null==e?t.transformer?ue.transformFrom(t.transformer,e):e:(t.type===Boolean||"boolean"===t.type?e=!!e:"datetime"===t.type||t.type===Date?(e&&"string"==typeof e&&(/^\d\d\d\d-\d\d-\d\d \d\d:\d\d/.test(e)&&(e=e.replace(" ","T")),/^\d\d\d\d-\d\d-\d\dT\d\d:\d\d(:\d\d(\.\d\d\d)?)?$/.test(e)&&(e+="Z")),e=St.normalizeHydratedDate(e)):"date"===t.type?e=St.mixedDateToDateString(e):"time"===t.type?e=St.mixedTimeToString(e):"simple-array"===t.type?e=St.stringToSimpleArray(e):"simple-json"===t.type?e=St.stringToSimpleJson(e):"simple-enum"===t.type?e=St.stringToSimpleEnum(e,t):t.type===Number&&(e=isNaN(+e)?e:parseInt(e)),t.transformer&&(e=ue.transformFrom(t.transformer,e)),e)}escapeQueryWithParameters(e,t,n){const a=Object.keys(n).map((e=>"boolean"==typeof n[e]?!0===n[e]?1:0:n[e]instanceof Date?St.mixedDateToUtcDatetimeString(n[e]):n[e]));return t&&Object.keys(t).length?[e=e.replace(/:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,i)=>{if(!t.hasOwnProperty(i))return e;let r=t[i];return n?r.map((e=>(a.push(e),this.createParameter(i,a.length-1)))).join(", "):"function"==typeof r?r():"number"==typeof r?String(r):"boolean"==typeof r?(a.push(+r),this.createParameter(i,a.length-1)):r instanceof Date?(a.push(St.mixedDateToUtcDatetimeString(r)),this.createParameter(i,a.length-1)):(a.push(r),this.createParameter(i,a.length-1))})),a]:[e,a]}escape(e){return'"'+e+'"'}buildTableName(e,t,n){return e}parseTableName(e){const t=this.database,n=void 0;if(g.isTable(e)||g.isView(e)){const a=this.parseTableName(e.schema?`"${e.schema}"."${e.name}"`:e.name);return{database:e.database||a.database||t,schema:e.schema||a.schema||n,tableName:a.tableName}}if(g.isTableForeignKey(e)){const a=this.parseTableName(e.referencedTableName);return{database:e.referencedDatabase||a.database||t,schema:e.referencedSchema||a.schema||n,tableName:a.tableName}}if(g.isEntityMetadata(e))return{database:e.database||t,schema:e.schema||n,tableName:e.tableName};const a=e.split(".");return 3===a.length?{database:a[0]||t,schema:a[1]||n,tableName:a[2]}:2===a.length?{database:this.getAttachedDatabasePathRelativeByHandle(a[0])??t,schema:a[0],tableName:a[1]}:{database:t,schema:n,tableName:e}}normalizeType(e){return e.type===Number||"int"===e.type?"integer":e.type===String?"varchar":e.type===Date?"datetime":e.type===Boolean?"boolean":"uuid"===e.type?"varchar":"simple-array"===e.type||"simple-json"===e.type?"text":"simple-enum"===e.type?"varchar":e.type||""}normalizeDefault(e){const t=e.default;return"number"==typeof t?""+t:"boolean"==typeof t?t?"1":"0":"function"==typeof t?t():"string"==typeof t?`'${t}'`:null!=t?`${t}`:void 0}normalizeIsUnique(e){return e.entityMetadata.uniques.some((t=>1===t.columns.length&&t.columns[0]===e))}getColumnLength(e){return e.length?e.length.toString():""}createFullType(e){let t=e.type;return e.enum?"varchar":(e.length?t+="("+e.length+")":null!==e.precision&&void 0!==e.precision&&null!==e.scale&&void 0!==e.scale?t+="("+e.precision+","+e.scale+")":null!==e.precision&&void 0!==e.precision&&(t+="("+e.precision+")"),e.isArray&&(t+=" array"),t)}obtainMasterConnection(){return Promise.resolve()}obtainSlaveConnection(){return Promise.resolve()}createGeneratedMap(e,t,n,a){const i=e.generatedColumns.reduce(((e,i)=>{let r;return"increment"===i.generationStrategy&&t&&(r=t-a+n+1),r?xe.mergeDeep(e,i.createValueMap(r)):e}),{});return Object.keys(i).length>0?i:void 0}findChangedColumns(e,t){return t.filter((t=>{const n=e.find((e=>e.name===t.databaseName));return!!n&&(n.name!==t.databaseName||n.type!==this.normalizeType(t)||n.length!==t.length||n.precision!==t.precision||n.scale!==t.scale||this.normalizeDefault(t)!==n.default||n.isPrimary!==t.isPrimary||n.isNullable!==t.isNullable||n.generatedType!==t.generatedType||n.asExpression!==t.asExpression||n.isUnique!==this.normalizeIsUnique(t)||n.enum&&t.enum&&!xe.isArraysEqual(n.enum,t.enum.map((e=>e+"")))||"uuid"!==t.generationStrategy&&n.isGenerated!==t.isGenerated)}))}isReturningSqlSupported(){return!1}isUUIDGenerationSupported(){return!1}isFullTextColumnTypeSupported(){return!1}createParameter(e,t){return"?"}createDatabaseConnection(){return new Promise(((e,t)=>{const n=Object.assign({},{name:this.options.database,location:this.options.location},this.options.extra||{});this.sqlite.openDatabase(n,(n=>{const a=n;a.executeSql("PRAGMA foreign_keys = ON",[],(t=>{e(a)}),(e=>{t(e)}))}),(e=>{t(e)}))}))}loadDependencies(){try{const e=this.options.driver||n(Object(function(){var e=new Error("Cannot find module 'react-native-sqlite-storage'");throw e.code="MODULE_NOT_FOUND",e}()));this.sqlite=e}catch(e){throw new $("React-Native","react-native-sqlite-storage")}}}class on extends Zt{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new en(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async query(e,t,n=!1){if(this.isReleased)throw new W;const a=this.driver.connection;return new Promise((async(i,r)=>{const s=await this.connect(),o="INSERT INTO"===e.substr(0,11);a.logger.logQuery(e,t,this);const c=(s,c)=>{const l=this.driver.options.maxQueryExecutionTime,u=+new Date-h;l&&u>l&&a.logger.logQuerySlow(u,e,t,this),s&&(a.logger.logQueryError(s,e,t,this),r(new k(e,t,s)));const p=new tn;p.raw=c,!o&&Array.isArray(c)&&(p.records=c),i(n?p:p.raw)},h=+new Date;o?s.execSQL(e,t,c):s.all(e,t,c)}))}parametrize(e,t=0){return Object.keys(e).map(((e,t)=>`"${e}"=?`))}}class cn extends zt{constructor(e){super(e),this.connection=e,this.options=e.options,this.database=this.options.database,this.driver=this.options.driver,this.loadDependencies()}async disconnect(){return new Promise(((e,t)=>{this.queryRunner=void 0,this.databaseConnection.close().then(e).catch(t)}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new on(this)),this.queryRunner}normalizeType(e){return e.type===Buffer?"blob":super.normalizeType(e)}createDatabaseConnection(){return new Promise(((e,t)=>{const n=Object.assign({},{readOnly:this.options.readOnly,key:this.options.key,multithreading:this.options.multithreading,migrate:this.options.migrate,iosFlags:this.options.iosFlags,androidFlags:this.options.androidFlags},this.options.extra||{});new this.sqlite(this.options.database,n,((n,a)=>{if(n)return t(n);a.resultType(this.sqlite.RESULTSASOBJECT),a.execSQL("PRAGMA foreign_keys = ON",[],((n,i)=>{if(n)return t(n);e(a)}))}))}))}loadDependencies(){if(this.sqlite=this.driver,!this.driver)throw new $("Nativescript","nativescript-sqlite")}}class hn extends Zt{constructor(e){super(),this.isDirty=!1,this.driver=e,this.connection=e.connection,this.broadcaster=new en(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async flush(){this.isDirty&&(await this.driver.autoSave(),this.isDirty=!1)}async release(){return await this.flush(),super.release()}async commitTransaction(){await super.commitTransaction(),this.isTransactionActive||await this.flush()}async query(e,t=[],n=!1){if(this.isReleased)throw new W;const a=e.trim().split(" ",1)[0],i=this.driver.databaseConnection,r=new Ae;this.driver.connection.logger.logQuery(e,t,this),this.broadcaster.broadcastBeforeQueryEvent(r,e,t);const s=+new Date;let o;try{o=i.prepare(e),t&&(t=t.map((e=>void 0!==e?e:null)),o.bind(t));const c=this.driver.options.maxQueryExecutionTime,h=+new Date-s;c&&h>c&&this.driver.connection.logger.logQuerySlow(h,e,t,this);const l=[];for(;o.step();)l.push(o.getAsObject());this.broadcaster.broadcastAfterQueryEvent(r,e,t,!0,h,l,void 0);const u=new tn;return u.affected=i.getRowsModified(),u.records=l,u.raw=l,o.free(),"SELECT"!==a&&(this.isDirty=!0),n?u:u.raw}catch(n){throw o&&o.free(),this.driver.connection.logger.logQueryError(n,e,t,this),this.broadcaster.broadcastAfterQueryEvent(r,e,t,!1,void 0,void 0,n),new k(e,t,n)}finally{await r.wait()}}}class ln extends zt{constructor(e){if(super(e),this.options.autoSave&&!this.options.location&&!this.options.autoSaveCallback)throw new _("location or autoSaveCallback");this.loadDependencies()}async connect(){this.databaseConnection=await this.createDatabaseConnection()}async disconnect(){this.queryRunner=void 0,this.databaseConnection.close()}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new hn(this)),this.queryRunner}async load(e,t=!0){if("string"==typeof e){if("node"===i.type){if(i.fileExist(e)){const t=i.readFileSync(e);return this.createDatabaseConnectionWithImport(t)}if(t)throw new s(`File ${e} does not exist`);return this.createDatabaseConnectionWithImport()}{let n=null;if(this.options.useLocalForage){if(!window.localforage)throw new s("localforage is not defined - please import localforage.js into your site");n=await window.localforage.getItem(e)}else n=i.getGlobalVariable().localStorage.getItem(e);if(null!=n)return this.createDatabaseConnectionWithImport(JSON.parse(n));if(t)throw new s(`File ${e} does not exist`);return this.createDatabaseConnectionWithImport()}}return this.createDatabaseConnectionWithImport(e)}async save(e){if(!e&&!this.options.location)throw new s("No location is set, specify a location parameter or add the location option to your configuration");let t="";if(e?t=e:this.options.location&&(t=this.options.location),"node"===i.type)try{const e=Buffer.from(this.databaseConnection.export());await i.writeFile(t,e)}catch(e){throw new s(`Could not save database, error: ${e}`)}else{const e=this.databaseConnection.export(),n=[].slice.call(e);if(this.options.useLocalForage){if(!window.localforage)throw new s("localforage is not defined - please import localforage.js into your site");await window.localforage.setItem(t,JSON.stringify(n))}else i.getGlobalVariable().localStorage.setItem(t,JSON.stringify(n))}}async autoSave(){this.options.autoSave&&!this.queryRunner?.isTransactionActive&&(this.options.autoSaveCallback?await this.options.autoSaveCallback(this.export()):await this.save())}export(){return this.databaseConnection.export()}createGeneratedMap(e,t){const n=e.generatedColumns.reduce(((e,t)=>{if(t.isPrimary&&"increment"===t.generationStrategy){const n="SELECT last_insert_rowid()";try{let a=this.databaseConnection.exec(n);return this.connection.logger.logQuery(n),xe.mergeDeep(e,t.createValueMap(a[0].values[0][0]))}catch(e){this.connection.logger.logQueryError(e,n,[])}}return e}),{});return Object.keys(n).length>0?n:void 0}createDatabaseConnection(){return this.options.location?this.load(this.options.location,!1):this.createDatabaseConnectionWithImport(this.options.database)}async createDatabaseConnectionWithImport(e){const t="function"==typeof this.sqlite.Database?this.sqlite:await this.sqlite(this.options.sqlJsConfig);return e&&e.length>0?this.databaseConnection=new t.Database(e):this.databaseConnection=new t.Database,this.databaseConnection.exec("PRAGMA foreign_keys = ON"),this.databaseConnection}loadDependencies(){if("browser"===i.type){const e=this.options.driver||window.SQL;this.sqlite=e}else try{const e=this.options.driver||i.load("sql.js");this.sqlite=e}catch(e){throw new $("sql.js","sql.js")}}}class un extends Zt{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new en(this)}async startTransaction(){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}this.transactionDepth+=1,await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive&&void 0===this.transaction)throw new y;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transaction=void 0,this.isTransactionActive=!1,this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive&&void 0===this.transaction)throw new y;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transaction=void 0,this.isTransactionActive=!1,this.transactionDepth-=1,await this.broadcaster.broadcast("AfterTransactionRollback")}async beforeMigration(){const e=await this.connect();return new Promise(((t,n)=>{e.exec([{sql:"PRAGMA foreign_keys = OFF",args:[]}],!1,(e=>e?n(e):t()))}))}async afterMigration(){const e=await this.connect();return new Promise(((t,n)=>{e.exec([{sql:"PRAGMA foreign_keys = ON",args:[]}],!1,(e=>e?n(e):t()))}))}async query(e,t,n=!1){if(this.isReleased)throw new W;return new Promise((async(a,i)=>{const r=await this.connect(),s=new Ae;this.driver.connection.logger.logQuery(e,t,this),this.broadcaster.broadcastBeforeQueryEvent(s,e,t);const o=+new Date;r.transaction((async r=>{void 0===this.transaction&&(await this.startTransaction(),this.transaction=r),this.transaction.executeSql(e,t,(async(i,r)=>{const c=this.driver.options.maxQueryExecutionTime,h=+new Date-o;this.broadcaster.broadcastAfterQueryEvent(s,e,t,!0,h,r,void 0),await s.wait(),c&&h>c&&this.driver.connection.logger.logQuerySlow(h,e,t,this);const l=new tn;if(r?.hasOwnProperty("rowsAffected")&&(l.affected=r.rowsAffected),r?.hasOwnProperty("rows")){let e=[];for(let t=0;t<r.rows.length;t++)e.push(r.rows.item(t));l.raw=e,l.records=e}e.startsWith("INSERT INTO")&&(l.raw=r.insertId),a(n?l:l.raw)}),(async(n,a)=>{this.driver.connection.logger.logQueryError(a,e,t,this),this.broadcaster.broadcastAfterQueryEvent(s,e,t,!1,void 0,void 0,a),await s.wait(),i(new k(e,t,a))}))}),(async e=>{await this.rollbackTransaction(),i(e)}),(()=>{this.isTransactionActive=!1,this.transaction=void 0}))}))}}class pn extends zt{constructor(e){super(e),this.database=this.options.database,this.sqlite=this.options.driver}async disconnect(){return new Promise(((e,t)=>{try{this.queryRunner=void 0,this.databaseConnection._db.close(),this.databaseConnection=void 0,e()}catch(e){t(e)}}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new un(this)),this.queryRunner}createDatabaseConnection(){return new Promise(((e,t)=>{try{const n=this.sqlite.openDatabase(this.options.database);n.transaction((a=>{a.executeSql("PRAGMA foreign_keys = ON",[],((t,a)=>{e(n)}),((e,n)=>{t({transaction:e,error:n})}))}),(e=>{t(e)}))}catch(e){t(e)}}))}}class dn extends Xt{constructor(e,t){super(),this.driver=e,this.connection=e.connection,this.client=t,this.broadcaster=new en(this)}async connect(){return{}}release(){return this.isReleased=!0,this.databaseConnection&&this.databaseConnection.release(),Promise.resolve()}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?(this.transactionDepth+=1,await this.client.startTransaction()):(this.transactionDepth+=1,await this.query("SAVEPOINT typeorm_"+(this.transactionDepth-1))),await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`RELEASE SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.client.commitTransaction(),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`ROLLBACK TO SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.client.rollbackTransaction(),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new W;const a=await this.client.query(e,t),i=new tn;return i.raw=a,a?.hasOwnProperty("records")&&Array.isArray(a.records)&&(i.records=a.records),a?.hasOwnProperty("numberOfRecordsUpdated")&&(i.affected=a.numberOfRecordsUpdated),n?i:i.raw}stream(e,t,n,a){if(this.isReleased)throw new W;return new Promise((async(i,r)=>{try{const r=(await this.connect()).query(e,t);n&&r.on("end",n),a&&r.on("error",a),i(r)}catch(e){r(e)}}))}async getDatabases(){return Promise.resolve([])}async getSchemas(e){throw new s("MySql driver does not support table schemas")}async hasDatabase(e){return!!(await this.query(`SELECT * FROM \`INFORMATION_SCHEMA\`.\`SCHEMATA\` WHERE \`SCHEMA_NAME\` = '${e}'`)).length}async getCurrentDatabase(){return(await this.query("SELECT DATABASE() AS `db_name`"))[0].db_name}async hasSchema(e){throw new s("MySql driver does not support table schemas")}async getCurrentSchema(){return(await this.query("SELECT SCHEMA() AS `schema_name`"))[0].schema_name}async hasTable(e){const t=this.driver.parseTableName(e),n=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_SCHEMA\` = '${t.database}' AND \`TABLE_NAME\` = '${t.tableName}'`;return!!(await this.query(n)).length}async hasColumn(e,t){const n=this.driver.parseTableName(e),a=g.isTableColumn(t)?t.name:t,i=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_SCHEMA\` = '${n.database}' AND \`TABLE_NAME\` = '${n.tableName}' AND \`COLUMN_NAME\` = '${a}'`;return!!(await this.query(i)).length}async createDatabase(e,t){const n=t?`CREATE DATABASE IF NOT EXISTS \`${e}\``:`CREATE DATABASE \`${e}\``,a=`DROP DATABASE \`${e}\``;await this.executeQueries(new Jt(n),new Jt(a))}async dropDatabase(e,t){const n=t?`DROP DATABASE IF EXISTS \`${e}\``:`DROP DATABASE \`${e}\``,a=`CREATE DATABASE \`${e}\``;await this.executeQueries(new Jt(n),new Jt(a))}async createSchema(e,t){throw new s("Schema create queries are not supported by MySql driver.")}async dropSchema(e,t){throw new s("Schema drop queries are not supported by MySql driver.")}async createTable(e,t=!1,n=!0){if(t&&await this.hasTable(e))return Promise.resolve();const a=[],i=[];return a.push(this.createTableSql(e,n)),i.push(this.dropTableSql(e)),e.indices.forEach((t=>i.push(this.dropIndexSql(e,t)))),n&&e.foreignKeys.forEach((t=>i.push(this.dropForeignKeySql(e,t)))),this.executeQueries(a,i)}async dropTable(e,t,n=!0){if(t&&!await this.hasTable(e))return Promise.resolve();const a=n,i=this.getTablePath(e),r=await this.getCachedTable(i),s=[],o=[];n&&r.foreignKeys.forEach((e=>s.push(this.dropForeignKeySql(r,e)))),r.indices.forEach((e=>s.push(this.dropIndexSql(r,e)))),s.push(this.dropTableSql(r)),o.push(this.createTableSql(r,a)),await this.executeQueries(s,o)}async createView(e,t=!1){const n=[],a=[];n.push(this.createViewSql(e)),t&&n.push(await this.insertViewDefinitionSql(e)),a.push(this.dropViewSql(e)),t&&a.push(await this.deleteViewDefinitionSql(e)),await this.executeQueries(n,a)}async dropView(e){const t=g.isView(e)?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(await this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(await this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){const n=[],a=[],i=g.isTable(e)?e:await this.getCachedTable(e),r=i.clone(),{database:s}=this.driver.parseTableName(i);r.name=s?`${s}.${t}`:t,n.push(new Jt(`RENAME TABLE ${this.escapePath(i)} TO ${this.escapePath(r)}`)),a.push(new Jt(`RENAME TABLE ${this.escapePath(r)} TO ${this.escapePath(i)}`)),r.indices.forEach((e=>{const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),i=this.connection.namingStrategy.indexName(r,e.columnNames,e.where);let s="";e.isUnique&&(s+="UNIQUE "),e.isSpatial&&(s+="SPATIAL "),e.isFulltext&&(s+="FULLTEXT "),n.push(new Jt(`ALTER TABLE ${this.escapePath(r)} DROP INDEX \`${e.name}\`, ADD ${s}INDEX \`${i}\` (${t})`)),a.push(new Jt(`ALTER TABLE ${this.escapePath(r)} DROP INDEX \`${i}\`, ADD ${s}INDEX \`${e.name}\` (${t})`)),e.name=i})),r.foreignKeys.forEach((e=>{const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),i=e.referencedColumnNames.map((e=>`\`${e}\``)).join(","),s=this.connection.namingStrategy.foreignKeyName(r,e.columnNames);let o=`ALTER TABLE ${this.escapePath(r)} DROP FOREIGN KEY \`${e.name}\`, ADD CONSTRAINT \`${s}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${i})`;e.onDelete&&(o+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(o+=` ON UPDATE ${e.onUpdate}`);let c=`ALTER TABLE ${this.escapePath(r)} DROP FOREIGN KEY \`${s}\`, ADD CONSTRAINT \`${e.name}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${i})`;e.onDelete&&(c+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(c+=` ON UPDATE ${e.onUpdate}`),n.push(new Jt(o)),a.push(new Jt(c)),e.name=s})),await this.executeQueries(n,a),i.name=r.name,this.replaceCachedTable(i,r)}async addColumn(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=[],r=[],s=a.primaryColumns.length>0;if(i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(t,s,!1)}`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN \`${t.name}\``)),t.isPrimary&&s){const e=a.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(e){const a=e.clone();a.isGenerated=!1,a.generationStrategy=void 0,i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(a,!0)}`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${a.name}\` ${this.buildCreateColumnSql(t,!0)}`))}const s=a.primaryColumns;let o=s.map((e=>`\`${e.name}\``)).join(", ");if(i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${o})`)),s.push(t),o=s.map((e=>`\`${e.name}\``)).join(", "),i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${o})`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`)),e){const a=e.clone();a.isGenerated=!1,a.generationStrategy=void 0,i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${a.name}\` ${this.buildCreateColumnSql(t,!0)}`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(a,!0)}`))}}const o=a.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===t.name));if(o)i.push(this.createIndexSql(n,o)),r.push(this.dropIndexSql(n,o));else if(t.isUnique){const e=new Ke({name:this.connection.namingStrategy.indexName(n,[t.name]),columnNames:[t.name],isUnique:!0});a.indices.push(e),a.uniques.push(new ze({name:e.name,columnNames:e.columnNames})),i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD UNIQUE INDEX \`${e.name}\` (\`${t.name}\`)`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP INDEX \`${e.name}\``))}await this.executeQueries(i,r),a.addColumn(t),this.replaceCachedTable(n,a)}async addColumns(e,t){for(const n of t)await this.addColumn(e,n)}async renameColumn(e,t,n){const a=g.isTable(e)?e:await this.getCachedTable(e),i=g.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!i)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);let r;g.isTableColumn(n)?r=n:(r=i.clone(),r.name=n),await this.changeColumn(a,i,r)}async changeColumn(e,t,n){const a=g.isTable(e)?e:await this.getCachedTable(e);let i=a.clone();const r=[],o=[],c=g.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!c)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);if(n.isGenerated!==c.isGenerated&&"uuid"!==n.generationStrategy||c.type!==n.type||c.length!==n.length||c.generatedType!==n.generatedType)await this.dropColumn(a,c),await this.addColumn(a,n),i=a.clone();else{if(n.name!==c.name){r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${c.name}\` \`${n.name}\` ${this.buildCreateColumnSql(c,!0,!0)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${n.name}\` \`${c.name}\` ${this.buildCreateColumnSql(c,!0,!0)}`)),i.findColumnIndices(c).forEach((e=>{e.columnNames.splice(e.columnNames.indexOf(c.name),1),e.columnNames.push(n.name);const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),s=this.connection.namingStrategy.indexName(i,e.columnNames,e.where);let h="";e.isUnique&&(h+="UNIQUE "),e.isSpatial&&(h+="SPATIAL "),e.isFulltext&&(h+="FULLTEXT "),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${e.name}\`, ADD ${h}INDEX \`${s}\` (${t})`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${s}\`, ADD ${h}INDEX \`${e.name}\` (${t})`)),e.name=s})),i.findColumnForeignKeys(c).forEach((e=>{e.columnNames.splice(e.columnNames.indexOf(c.name),1),e.columnNames.push(n.name);const t=e.columnNames.map((e=>`\`${e}\``)).join(", "),s=e.referencedColumnNames.map((e=>`\`${e}\``)).join(","),h=this.connection.namingStrategy.foreignKeyName(i,e.columnNames);let l=`ALTER TABLE ${this.escapePath(a)} DROP FOREIGN KEY \`${e.name}\`, ADD CONSTRAINT \`${h}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${s})`;e.onDelete&&(l+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(l+=` ON UPDATE ${e.onUpdate}`);let u=`ALTER TABLE ${this.escapePath(a)} DROP FOREIGN KEY \`${h}\`, ADD CONSTRAINT \`${e.name}\` FOREIGN KEY (${t}) REFERENCES ${this.escapePath(this.getTablePath(e))}(${s})`;e.onDelete&&(u+=` ON DELETE ${e.onDelete}`),e.onUpdate&&(u+=` ON UPDATE ${e.onUpdate}`),r.push(new Jt(l)),o.push(new Jt(u)),e.name=h}));const e=i.columns.find((e=>e.name===c.name));i.columns[i.columns.indexOf(e)].name=n.name,c.name=n.name}if(this.isColumnChanged(c,n,!0)&&(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${c.name}\` ${this.buildCreateColumnSql(n,!0)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${n.name}\` ${this.buildCreateColumnSql(c,!0)}`))),n.isPrimary!==c.isPrimary){const e=i.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(e){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`))}const t=i.primaryColumns;if(t.length>0){const e=t.map((e=>`\`${e.name}\``)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP PRIMARY KEY`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD PRIMARY KEY (${e})`))}if(!0===n.isPrimary){t.push(n),i.columns.find((e=>e.name===n.name)).isPrimary=!0;const e=t.map((e=>`\`${e.name}\``)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD PRIMARY KEY (${e})`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP PRIMARY KEY`))}else{const e=t.find((e=>e.name===n.name));if(t.splice(t.indexOf(e),1),i.columns.find((e=>e.name===n.name)).isPrimary=!1,t.length>0){const e=t.map((e=>`\`${e.name}\``)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD PRIMARY KEY (${e})`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP PRIMARY KEY`))}}if(e){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`))}}if(n.isUnique!==c.isUnique)if(!0===n.isUnique){const e=new Ke({name:this.connection.namingStrategy.indexName(a,[n.name]),columnNames:[n.name],isUnique:!0});i.indices.push(e),i.uniques.push(new ze({name:e.name,columnNames:e.columnNames})),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD UNIQUE INDEX \`${e.name}\` (\`${n.name}\`)`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${e.name}\``))}else{const e=i.indices.find((e=>1===e.columnNames.length&&!0===e.isUnique&&!!e.columnNames.find((e=>e===n.name))));i.indices.splice(i.indices.indexOf(e),1);const t=i.uniques.find((t=>t.name===e.name));i.uniques.splice(i.uniques.indexOf(t),1),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP INDEX \`${e.name}\``)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD UNIQUE INDEX \`${e.name}\` (\`${n.name}\`)`))}}await this.executeQueries(r,o),this.replaceCachedTable(a,i)}async changeColumns(e,t){for(const{oldColumn:n,newColumn:a}of t)await this.changeColumn(e,n,a)}async dropColumn(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableColumn(t)?t:n.findColumnByName(t);if(!a)throw new s(`Column "${t}" was not found in table "${n.name}"`);const i=n.clone(),r=[],o=[];if(a.isPrimary){const e=i.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(e){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`))}const t=i.primaryColumns.map((e=>`\`${e.name}\``)).join(", ");if(r.push(new Jt(`ALTER TABLE ${this.escapePath(i)} DROP PRIMARY KEY`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(i)} ADD PRIMARY KEY (${t})`)),i.findColumnByName(a.name).isPrimary=!1,i.primaryColumns.length>0){const e=i.primaryColumns.map((e=>`\`${e.name}\``)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(i)} ADD PRIMARY KEY (${e})`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(i)} DROP PRIMARY KEY`))}if(e&&e.name!==a.name){const t=e.clone();t.isGenerated=!1,t.generationStrategy=void 0,r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${t.name}\` ${this.buildCreateColumnSql(e,!0)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(t,!0)}`))}}const c=i.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));if(c)i.indices.splice(i.indices.indexOf(c),1),r.push(this.dropIndexSql(n,c)),o.push(this.createIndexSql(n,c));else if(a.isUnique){const e=this.connection.namingStrategy.uniqueConstraintName(n,[a.name]),t=i.uniques.find((t=>t.name===e));t&&i.uniques.splice(i.uniques.indexOf(t),1);const s=this.connection.namingStrategy.indexName(n,[a.name]),c=i.indices.find((e=>e.name===s));c&&i.indices.splice(i.indices.indexOf(c),1),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP INDEX \`${s}\``)),o.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD UNIQUE INDEX \`${s}\` (\`${a.name}\`)`))}r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN \`${a.name}\``)),o.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(a,!0)}`)),await this.executeQueries(r,o),i.removeColumn(a),this.replaceCachedTable(n,i)}async dropColumns(e,t){for(const n of t)await this.dropColumn(e,n)}async createPrimaryKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=this.createPrimaryKeySql(n,t),r=this.dropPrimaryKeySql(n);await this.executeQueries(i,r),a.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)})),this.replaceCachedTable(n,a)}async updatePrimaryKeys(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=t.map((e=>e.name)),r=[],s=[],o=a.columns.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(o){const e=o.clone();e.isGenerated=!1,e.generationStrategy=void 0,r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${o.name}\` ${this.buildCreateColumnSql(e,!0)}`)),s.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(o,!0)}`))}const c=a.primaryColumns;if(c.length>0){const e=c.map((e=>`\`${e.name}\``)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`)),s.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${e})`))}a.columns.filter((e=>-1!==i.indexOf(e.name))).forEach((e=>e.isPrimary=!0));const h=i.map((e=>`\`${e}\``)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD PRIMARY KEY (${h})`)),s.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP PRIMARY KEY`));const l=o||t.find((e=>e.isGenerated&&"increment"===e.generationStrategy));if(l){const e=l.clone();e.isGenerated=!1,e.generationStrategy=void 0,r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${e.name}\` ${this.buildCreateColumnSql(l,!0)}`)),s.push(new Jt(`ALTER TABLE ${this.escapePath(n)} CHANGE \`${l.name}\` ${this.buildCreateColumnSql(e,!0)}`));const t=a.columns.find((e=>e.name===l.name));t.isGenerated=!0,t.generationStrategy="increment"}await this.executeQueries(r,s),this.replaceCachedTable(n,a)}async dropPrimaryKey(e){const t=g.isTable(e)?e:await this.getCachedTable(e),n=this.dropPrimaryKeySql(t),a=this.createPrimaryKeySql(t,t.primaryColumns.map((e=>e.name)));await this.executeQueries(n,a),t.primaryColumns.forEach((e=>{e.isPrimary=!1}))}async createUniqueConstraint(e,t){throw new s("MySql does not support unique constraints. Use unique index instead.")}async createUniqueConstraints(e,t){throw new s("MySql does not support unique constraints. Use unique index instead.")}async dropUniqueConstraint(e,t){throw new s("MySql does not support unique constraints. Use unique index instead.")}async dropUniqueConstraints(e,t){throw new s("MySql does not support unique constraints. Use unique index instead.")}async createCheckConstraint(e,t){throw new s("MySql does not support check constraints.")}async createCheckConstraints(e,t){throw new s("MySql does not support check constraints.")}async dropCheckConstraint(e,t){throw new s("MySql does not support check constraints.")}async dropCheckConstraints(e,t){throw new s("MySql does not support check constraints.")}async createExclusionConstraint(e,t){throw new s("MySql does not support exclusion constraints.")}async createExclusionConstraints(e,t){throw new s("MySql does not support exclusion constraints.")}async dropExclusionConstraint(e,t){throw new s("MySql does not support exclusion constraints.")}async dropExclusionConstraints(e,t){throw new s("MySql does not support exclusion constraints.")}async createForeignKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.foreignKeyName(n,t.columnNames));const a=this.createForeignKeySql(n,t),i=this.dropForeignKeySql(n,t);await this.executeQueries(a,i),n.addForeignKey(t)}async createForeignKeys(e,t){const n=t.map((t=>this.createForeignKey(e,t)));await Promise.all(n)}async dropForeignKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableForeignKey(t)?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new s(`Supplied foreign key was not found in table ${n.name}`);const i=this.dropForeignKeySql(n,a),r=this.createForeignKeySql(n,a);await this.executeQueries(i,r),n.removeForeignKey(a)}async dropForeignKeys(e,t){const n=t.map((t=>this.dropForeignKey(e,t)));await Promise.all(n)}async createIndex(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.generateIndexName(n,t));const a=this.createIndexSql(n,t),i=this.dropIndexSql(n,t);await this.executeQueries(a,i),n.addIndex(t,!0)}async createIndices(e,t){const n=t.map((t=>this.createIndex(e,t)));await Promise.all(n)}async dropIndex(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableIndex(t)?t:n.indices.find((e=>e.name===t));if(!a)throw new s(`Supplied index ${t} was not found in table ${n.name}`);a.name||(a.name=this.generateIndexName(n,a));const i=this.dropIndexSql(n,a),r=this.createIndexSql(n,a);await this.executeQueries(i,r),n.removeIndex(a,!0)}async dropIndices(e,t){const n=t.map((t=>this.dropIndex(e,t)));await Promise.all(n)}async clearTable(e){await this.query(`TRUNCATE TABLE ${this.escapePath(e)}`)}async clearDatabase(e){const t=e||this.driver.database;if(!t)throw new s("Can not clear database. No database is specified");if(!await this.hasDatabase(t))return Promise.resolve();const n=this.isTransactionActive;n||await this.startTransaction();try{const e=`SELECT concat('DROP VIEW IF EXISTS \`', table_schema, '\`.\`', table_name, '\`') AS \`query\` FROM \`INFORMATION_SCHEMA\`.\`VIEWS\` WHERE \`TABLE_SCHEMA\` = '${t}'`,a=await this.query(e);await Promise.all(a.map((e=>this.query(e.query))));const i="SET FOREIGN_KEY_CHECKS = 0;",r=`SELECT concat('DROP TABLE IF EXISTS \`', table_schema, '\`.\`', table_name, '\`') AS \`query\` FROM \`INFORMATION_SCHEMA\`.\`TABLES\` WHERE \`TABLE_SCHEMA\` = '${t}'`,s="SET FOREIGN_KEY_CHECKS = 1;";await this.query(i);const o=await this.query(r);await Promise.all(o.map((e=>this.query(e.query)))),await this.query(s),n||await this.commitTransaction()}catch(e){try{n||await this.rollbackTransaction()}catch(e){}throw e}}async loadViews(e){if(!await this.hasTable(this.getTypeormMetadataTableName()))return[];e||(e=[]);const t=await this.getCurrentDatabase(),n=e.map((e=>{let{database:n,tableName:a}=this.driver.parseTableName(e);return n||(n=t),`(\`t\`.\`schema\` = '${n}' AND \`t\`.\`name\` = '${a}')`})).join(" OR "),a=`SELECT \`t\`.*, \`v\`.\`check_option\` FROM ${this.escapePath(this.getTypeormMetadataTableName())} \`t\` INNER JOIN \`information_schema\`.\`views\` \`v\` ON \`v\`.\`table_schema\` = \`t\`.\`schema\` AND \`v\`.\`table_name\` = \`t\`.\`name\` WHERE \`t\`.\`type\` = '${Mt.VIEW}' ${n?`AND (${n})`:""}`;return(await this.query(a)).map((e=>{const n=new Kt,a=e.schema===t?void 0:e.schema;return n.database=e.schema,n.name=this.driver.buildTableName(e.name,void 0,a),n.expression=e.value,n}))}async loadTables(e){if(e&&0===e.length)return[];const t=[],n=await this.getCurrentDatabase();if(e){const a="SELECT TABLE_NAME, TABLE_SCHEMA FROM `INFORMATION_SCHEMA`.`TABLES` WHERE "+e.map((e=>{let[t,a]=e.split(".");return a||(a=t,t=this.driver.database||n),`(\`TABLE_SCHEMA\` = '${t}' AND \`TABLE_NAME\` = '${a}')`})).join(" OR ");t.push(...await this.query(a))}else{const e="SELECT TABLE_NAME, TABLE_SCHEMA FROM `INFORMATION_SCHEMA`.`TABLES`";t.push(...await this.query(e))}if(0===t.length)return[];const a=t.map((({TABLE_NAME:e,TABLE_SCHEMA:t})=>`(\`TABLE_SCHEMA\` = '${t}' AND \`TABLE_NAME\` = '${e}')`)).join(" OR "),i="SELECT * FROM `INFORMATION_SCHEMA`.`COLUMNS` WHERE "+a,r=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`KEY_COLUMN_USAGE\` WHERE \`CONSTRAINT_NAME\` = 'PRIMARY' AND (${a})`,s=`SELECT \`s\`.* FROM \`INFORMATION_SCHEMA\`.\`STATISTICS\` \`s\` LEFT JOIN \`INFORMATION_SCHEMA\`.\`REFERENTIAL_CONSTRAINTS\` \`rc\` ON \`s\`.\`INDEX_NAME\` = \`rc\`.\`CONSTRAINT_NAME\` WHERE (${t.map((({TABLE_NAME:e,TABLE_SCHEMA:t})=>`(\`s\`.\`TABLE_SCHEMA\` = '${t}' AND \`s\`.\`TABLE_NAME\` = '${e}')`)).join(" OR ")}) AND \`s\`.\`INDEX_NAME\` != 'PRIMARY' AND \`rc\`.\`CONSTRAINT_NAME\` IS NULL`,o="SELECT `kcu`.`TABLE_SCHEMA`, `kcu`.`TABLE_NAME`, `kcu`.`CONSTRAINT_NAME`, `kcu`.`COLUMN_NAME`, `kcu`.`REFERENCED_TABLE_SCHEMA`, `kcu`.`REFERENCED_TABLE_NAME`, `kcu`.`REFERENCED_COLUMN_NAME`, `rc`.`DELETE_RULE` `ON_DELETE`, `rc`.`UPDATE_RULE` `ON_UPDATE` FROM `INFORMATION_SCHEMA`.`KEY_COLUMN_USAGE` `kcu` INNER JOIN `INFORMATION_SCHEMA`.`REFERENTIAL_CONSTRAINTS` `rc` ON `rc`.`constraint_name` = `kcu`.`constraint_name` WHERE "+t.map((({TABLE_NAME:e,TABLE_SCHEMA:t})=>`(\`kcu\`.\`TABLE_SCHEMA\` = '${t}' AND \`kcu\`.\`TABLE_NAME\` = '${e}')`)).join(" OR "),[c,h,l,u,p]=await Promise.all([this.query(i),this.query(r),this.query("SELECT `SCHEMA_NAME`, `DEFAULT_CHARACTER_SET_NAME` as `CHARSET`, `DEFAULT_COLLATION_NAME` AS `COLLATION` FROM `INFORMATION_SCHEMA`.`SCHEMATA`"),this.query(s),this.query(o)]);return Promise.all(t.map((async e=>{const t=new Xe,a=l.find((t=>t.SCHEMA_NAME===e.TABLE_SCHEMA)),i=a.COLLATION,r=a.CHARSET,s=e.TABLE_SCHEMA===n?void 0:e.TABLE_SCHEMA;t.database=e.TABLE_SCHEMA,t.name=this.driver.buildTableName(e.TABLE_NAME,void 0,s),t.columns=c.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA)).map((n=>{const a=u.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA&&t.COLUMN_NAME===n.COLUMN_NAME&&0===parseInt(t.NON_UNIQUE,10))),s=this.connection.entityMetadatas.find((e=>this.getTablePath(t)===this.getTablePath(e))),o=a.length>0&&s&&s.indices.some((e=>a.some((t=>e.name===t.INDEX_NAME&&!1===e.synchronize)))),c=a.every((e=>u.some((t=>t.INDEX_NAME===e.INDEX_NAME&&t.COLUMN_NAME!==n.COLUMN_NAME)))),l=new We;if(l.name=n.COLUMN_NAME,l.type=n.DATA_TYPE.toLowerCase(),l.unsigned=!!l.zerofill||-1!==n.COLUMN_TYPE.indexOf("unsigned"),-1!==this.driver.withWidthColumnTypes.indexOf(l.type)){const e=n.COLUMN_TYPE.substring(n.COLUMN_TYPE.indexOf("(")+1,n.COLUMN_TYPE.indexOf(")"));l.width=e&&!this.isDefaultColumnWidth(t,l,parseInt(e))?parseInt(e):void 0}if(null===n.COLUMN_DEFAULT||void 0===n.COLUMN_DEFAULT?l.default=void 0:l.default="CURRENT_TIMESTAMP"===n.COLUMN_DEFAULT?n.COLUMN_DEFAULT:`'${n.COLUMN_DEFAULT}'`,-1!==n.EXTRA.indexOf("on update")&&(l.onUpdate=n.EXTRA.substring(n.EXTRA.indexOf("on update")+10)),n.GENERATION_EXPRESSION&&(l.asExpression=n.GENERATION_EXPRESSION,l.generatedType=-1!==n.EXTRA.indexOf("VIRTUAL")?"VIRTUAL":"STORED"),l.isUnique=a.length>0&&!o&&!c,l.isNullable="YES"===n.IS_NULLABLE,l.isPrimary=h.some((e=>e.TABLE_NAME===n.TABLE_NAME&&e.TABLE_SCHEMA===n.TABLE_SCHEMA&&e.COLUMN_NAME===n.COLUMN_NAME)),l.zerofill=-1!==n.COLUMN_TYPE.indexOf("zerofill"),l.isGenerated=-1!==n.EXTRA.indexOf("auto_increment"),l.isGenerated&&(l.generationStrategy="increment"),l.comment="string"==typeof n.COLUMN_COMMENT&&0===n.COLUMN_COMMENT.length?void 0:n.COLUMN_COMMENT,n.CHARACTER_SET_NAME&&(l.charset=n.CHARACTER_SET_NAME===r?void 0:n.CHARACTER_SET_NAME),n.COLLATION_NAME&&(l.collation=n.COLLATION_NAME===i?void 0:n.COLLATION_NAME),-1!==this.driver.withLengthColumnTypes.indexOf(l.type)&&n.CHARACTER_MAXIMUM_LENGTH){const e=n.CHARACTER_MAXIMUM_LENGTH.toString();l.length=this.isDefaultColumnLength(t,l,e)?"":e}if("decimal"!==l.type&&"double"!==l.type&&"float"!==l.type||(null===n.NUMERIC_PRECISION||this.isDefaultColumnPrecision(t,l,n.NUMERIC_PRECISION)||(l.precision=parseInt(n.NUMERIC_PRECISION)),null===n.NUMERIC_SCALE||this.isDefaultColumnScale(t,l,n.NUMERIC_SCALE)||(l.scale=parseInt(n.NUMERIC_SCALE))),"enum"===l.type||"simple-enum"===l.type||"set"===l.type){const e=n.COLUMN_TYPE,t=e.substring(e.indexOf("(")+1,e.lastIndexOf(")")).split(",");l.enum=t.map((e=>e.substring(1,e.length-1))),l.length=""}return"datetime"!==l.type&&"time"!==l.type&&"timestamp"!==l.type||null===n.DATETIME_PRECISION||void 0===n.DATETIME_PRECISION||this.isDefaultColumnPrecision(t,l,parseInt(n.DATETIME_PRECISION))||(l.precision=parseInt(n.DATETIME_PRECISION)),l}));const o=xe.uniq(p.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA)),(e=>e.CONSTRAINT_NAME));t.foreignKeys=o.map((e=>{const t=p.filter((t=>t.CONSTRAINT_NAME===e.CONSTRAINT_NAME)),a=e.REFERENCED_TABLE_SCHEMA===n?void 0:e.REFERENCED_TABLE_SCHEMA,i=this.driver.buildTableName(e.REFERENCED_TABLE_NAME,void 0,a);return new He({name:e.CONSTRAINT_NAME,columnNames:t.map((e=>e.COLUMN_NAME)),referencedDatabase:e.REFERENCED_TABLE_SCHEMA,referencedTableName:i,referencedColumnNames:t.map((e=>e.REFERENCED_COLUMN_NAME)),onDelete:e.ON_DELETE,onUpdate:e.ON_UPDATE})}));const d=xe.uniq(u.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.TABLE_SCHEMA===e.TABLE_SCHEMA)),(e=>e.INDEX_NAME));return t.indices=d.map((e=>{const n=u.filter((t=>t.TABLE_SCHEMA===e.TABLE_SCHEMA&&t.TABLE_NAME===e.TABLE_NAME&&t.INDEX_NAME===e.INDEX_NAME)),a=parseInt(e.NON_UNIQUE,10);return new Ke({table:t,name:e.INDEX_NAME,columnNames:n.map((e=>e.COLUMN_NAME)),isUnique:0===a,isSpatial:"SPATIAL"===e.INDEX_TYPE,isFulltext:"FULLTEXT"===e.INDEX_TYPE})})),t})))}createTableSql(e,t){const n=e.columns.map((e=>this.buildCreateColumnSql(e,!0))).join(", ");let a=`CREATE TABLE ${this.escapePath(e)} (${n}`;return e.columns.filter((e=>e.isUnique)).forEach((t=>{const n=e.indices.some((e=>1===e.columnNames.length&&!!e.isUnique&&-1!==e.columnNames.indexOf(t.name))),a=e.uniques.some((e=>1===e.columnNames.length&&-1!==e.columnNames.indexOf(t.name)));n||a||e.indices.push(new Ke({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name],isUnique:!0}))})),e.uniques.length>0&&e.uniques.forEach((t=>{e.indices.some((e=>e.name===t.name))||e.indices.push(new Ke({name:t.name,columnNames:t.columnNames,isUnique:!0}))})),e.indices.length>0&&(a+=`, ${e.indices.map((t=>{const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where));let a="";return t.isUnique&&(a+="UNIQUE "),t.isSpatial&&(a+="SPATIAL "),t.isFulltext&&(a+="FULLTEXT "),`${a}INDEX \`${t.name}\` (${n})`})).join(", ")}`),e.foreignKeys.length>0&&t&&(a+=`, ${e.foreignKeys.map((t=>{const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");t.name||(t.name=this.connection.namingStrategy.foreignKeyName(e,t.columnNames));const a=t.referencedColumnNames.map((e=>`\`${e}\``)).join(", ");let i=`CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),i})).join(", ")}`),e.primaryColumns.length>0&&(a+=`, PRIMARY KEY (${e.primaryColumns.map((e=>`\`${e.name}\``)).join(", ")})`),a+=`) ENGINE=${e.engine||"InnoDB"}`,new Jt(a)}dropTableSql(e){return new Jt(`DROP TABLE ${this.escapePath(e)}`)}createViewSql(e){return"string"==typeof e.expression?new Jt(`CREATE VIEW ${this.escapePath(e)} AS ${e.expression}`):new Jt(`CREATE VIEW ${this.escapePath(e)} AS ${e.expression(this.connection).getQuery()}`)}async insertViewDefinitionSql(e){const t=await this.getCurrentDatabase(),n="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:Mt.VIEW,schema:t,name:e.name,value:n})}dropViewSql(e){return new Jt(`DROP VIEW ${this.escapePath(e)}`)}async deleteViewDefinitionSql(e){const t=await this.getCurrentDatabase(),n=g.isView(e)?e.name:e;return this.deleteTypeormMetadataSql({type:Mt.VIEW,schema:t,name:n})}createIndexSql(e,t){const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");let a="";return t.isUnique&&(a+="UNIQUE "),t.isSpatial&&(a+="SPATIAL "),t.isFulltext&&(a+="FULLTEXT "),new Jt(`CREATE ${a}INDEX \`${t.name}\` ON ${this.escapePath(e)} (${n})`)}dropIndexSql(e,t){let n=g.isTableIndex(t)?t.name:t;return new Jt(`DROP INDEX \`${n}\` ON ${this.escapePath(e)}`)}createPrimaryKeySql(e,t){const n=t.map((e=>`\`${e}\``)).join(", ");return new Jt(`ALTER TABLE ${this.escapePath(e)} ADD PRIMARY KEY (${n})`)}dropPrimaryKeySql(e){return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP PRIMARY KEY`)}createForeignKeySql(e,t){const n=t.columnNames.map((e=>`\`${e}\``)).join(", "),a=t.referencedColumnNames.map((e=>`\`${e}\``)).join(",");let i=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))}(${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),new Jt(i)}dropForeignKeySql(e,t){const n=g.isTableForeignKey(t)?t.name:t;return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP FOREIGN KEY \`${n}\``)}escapeComment(e){return e&&0!==e.length?`'${e=e.replace(/\\/g,"\\\\").replace(/'/g,"''").replace(/\u0000/g,"")}'`:"''"}escapePath(e){const{database:t,tableName:n}=this.driver.parseTableName(e);return t&&t!==this.driver.database?`\`${t}\`.\`${n}\``:`\`${n}\``}buildCreateColumnSql(e,t,n=!1){let a="";return a=n?this.connection.driver.createFullType(e):`\`${e.name}\` ${this.connection.driver.createFullType(e)}`,e.asExpression&&(a+=` AS (${e.asExpression}) ${e.generatedType?e.generatedType:"VIRTUAL"}`),e.zerofill?a+=" ZEROFILL":e.unsigned&&(a+=" UNSIGNED"),e.enum&&(a+=` (${e.enum.map((e=>"'"+e+"'")).join(", ")})`),e.charset&&(a+=` CHARACTER SET "${e.charset}"`),e.collation&&(a+=` COLLATE "${e.collation}"`),e.isNullable||(a+=" NOT NULL"),e.isNullable&&(a+=" NULL"),e.isPrimary&&!t&&(a+=" PRIMARY KEY"),e.isGenerated&&"increment"===e.generationStrategy&&(a+=" AUTO_INCREMENT"),e.comment&&(a+=` COMMENT ${this.escapeComment(e.comment)}`),void 0!==e.default&&null!==e.default&&(a+=` DEFAULT ${e.default}`),e.onUpdate&&(a+=` ON UPDATE ${e.onUpdate}`),a}isDefaultColumnWidth(e,t,n){if(this.connection.hasMetadata(e.name)){const n=this.connection.getMetadata(e.name).findColumnWithDatabaseName(t.name);if(n&&n.width)return!1}const a=this.connection.driver.dataTypeDefaults&&this.connection.driver.dataTypeDefaults[t.type]&&this.connection.driver.dataTypeDefaults[t.type].width;if(a){const e=-1!==["int","tinyint","smallint","mediumint"].indexOf(t.type);return t.unsigned&&e?a-1===n:a===n}return!1}changeTableComment(e,t){throw new s("aurora-mysql driver does not support change table comment.")}}class mn{constructor(e){this.isReplicated=!1,this.treeSupport=!0,this.transactionSupport="nested",this.supportedDataTypes=["bit","int","integer","tinyint","smallint","mediumint","bigint","float","double","double precision","real","decimal","dec","numeric","fixed","bool","boolean","date","datetime","timestamp","time","year","char","nchar","national char","varchar","nvarchar","national varchar","blob","text","tinyblob","tinytext","mediumblob","mediumtext","longblob","longtext","enum","set","binary","varbinary","json","geometry","point","linestring","polygon","multipoint","multilinestring","multipolygon","geometrycollection"],this.supportedUpsertTypes=["on-duplicate-key-update"],this.spatialTypes=["geometry","point","linestring","polygon","multipoint","multilinestring","multipolygon","geometrycollection"],this.withLengthColumnTypes=["char","varchar","nvarchar","binary","varbinary"],this.withWidthColumnTypes=["bit","tinyint","smallint","mediumint","int","integer","bigint"],this.withPrecisionColumnTypes=["decimal","dec","numeric","fixed","float","double","double precision","real","time","datetime","timestamp"],this.withScaleColumnTypes=["decimal","dec","numeric","fixed","float","double","double precision","real"],this.unsignedAndZerofillTypes=["int","integer","smallint","tinyint","mediumint","bigint","decimal","dec","numeric","fixed","float","double","double precision","real"],this.mappedDataTypes={createDate:"datetime",createDatePrecision:6,createDateDefault:"CURRENT_TIMESTAMP(6)",updateDate:"datetime",updateDatePrecision:6,updateDateDefault:"CURRENT_TIMESTAMP(6)",deleteDate:"datetime",deleteDatePrecision:6,deleteDateNullable:!0,version:"int",treeLevel:"int",migrationId:"int",migrationName:"varchar",migrationTimestamp:"bigint",cacheId:"int",cacheIdentifier:"varchar",cacheTime:"bigint",cacheDuration:"int",cacheQuery:"text",cacheResult:"text",metadataType:"varchar",metadataDatabase:"varchar",metadataSchema:"varchar",metadataTable:"varchar",metadataName:"varchar",metadataValue:"text"},this.dataTypeDefaults={varchar:{length:255},nvarchar:{length:255},"national varchar":{length:255},char:{length:1},binary:{length:1},varbinary:{length:255},decimal:{precision:10,scale:0},dec:{precision:10,scale:0},numeric:{precision:10,scale:0},fixed:{precision:10,scale:0},float:{precision:12},double:{precision:22},time:{precision:0},datetime:{precision:0},timestamp:{precision:0},bit:{width:1},int:{width:11},integer:{width:11},tinyint:{width:4},smallint:{width:6},mediumint:{width:9},bigint:{width:20}},this.maxAliasLength=63,this.cteCapabilities={enabled:!1},this.connection=e,this.options=e.options,this.loadDependencies(),this.client=new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions),this.database=re.buildDriverOptions(this.options).database}async connect(){if(!this.database){const e=await this.createQueryRunner("master");this.database=await e.getCurrentDatabase(),await e.release()}}afterConnect(){return Promise.resolve()}async disconnect(){}createSchemaBuilder(){return new Gt(this.connection)}createQueryRunner(e){return new dn(this,new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions))}escapeQueryWithParameters(e,t,n){const a=Object.keys(n).map((e=>n[e]));return t&&Object.keys(t).length?[e=e.replace(/:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,i)=>{if(!t.hasOwnProperty(i))return e;let r=t[i];return n?r.map((e=>(a.push(e),this.createParameter(i,a.length-1)))).join(", "):"function"==typeof r?r():(a.push(r),this.createParameter(i,a.length-1))})),a]:[e,a]}escape(e){return"`"+e+"`"}buildTableName(e,t,n){let a=[e];return n&&a.unshift(n),a.join(".")}parseTableName(e){const t=this.database,n=void 0;if(g.isTable(e)||g.isView(e)){const a=this.parseTableName(e.name);return{database:e.database||a.database||t,schema:e.schema||a.schema||n,tableName:a.tableName}}if(g.isTableForeignKey(e)){const a=this.parseTableName(e.referencedTableName);return{database:e.referencedDatabase||a.database||t,schema:e.referencedSchema||a.schema||n,tableName:a.tableName}}if(g.isEntityMetadata(e))return{database:e.database||t,schema:e.schema||n,tableName:e.tableName};const a=e.split(".");return{database:(a.length>1?a[0]:void 0)||t,schema:n,tableName:a.length>1?a[1]:a[0]}}preparePersistentValue(e,t){return t.transformer&&(e=ue.transformTo(t.transformer,e)),this.options.formatOptions&&!1===this.options.formatOptions.castParameters?null==e?e:t.type===Boolean?!0===e?1:0:"date"===t.type?St.mixedDateToDateString(e):"time"===t.type?St.mixedDateToTimeString(e):"json"===t.type?JSON.stringify(e):"timestamp"===t.type||"datetime"===t.type||t.type===Date?St.mixedDateToDate(e):"simple-array"===t.type||"set"===t.type?St.simpleArrayToString(e):"simple-json"===t.type?St.simpleJsonToString(e):"enum"===t.type||"simple-enum"===t.type?""+e:e:this.client.preparePersistentValue(e,t)}prepareHydratedValue(e,t){return null==e?t.transformer?ue.transformFrom(t.transformer,e):e:this.options.formatOptions&&!1===this.options.formatOptions.castParameters?(t.type===Boolean||"bool"===t.type||"boolean"===t.type?e=!!e:"datetime"===t.type||t.type===Date?e=St.normalizeHydratedDate(e):"date"===t.type?e=St.mixedDateToDateString(e):"json"===t.type?e="string"==typeof e?JSON.parse(e):e:"time"===t.type?e=St.mixedTimeToString(e):"simple-array"===t.type||"set"===t.type?e=St.stringToSimpleArray(e):"simple-json"===t.type?e=St.stringToSimpleJson(e):("enum"===t.type||"simple-enum"===t.type)&&t.enum&&!isNaN(e)&&t.enum.indexOf(parseInt(e))>=0?e=parseInt(e):t.type===Number&&(e=isNaN(+e)?e:parseInt(e)),t.transformer&&(e=ue.transformFrom(t.transformer,e)),e):this.client.prepareHydratedValue(e,t)}normalizeType(e){return e.type===Number||"integer"===e.type?"int":e.type===String?"varchar":e.type===Date?"datetime":e.type===Buffer?"blob":e.type===Boolean?"tinyint":"uuid"===e.type?"varchar":"simple-array"===e.type||"simple-json"===e.type?"text":"simple-enum"===e.type?"enum":"double precision"===e.type||"real"===e.type?"double":"dec"===e.type||"numeric"===e.type||"fixed"===e.type?"decimal":"bool"===e.type||"boolean"===e.type?"tinyint":"nvarchar"===e.type||"national varchar"===e.type?"varchar":"nchar"===e.type||"national char"===e.type?"char":e.type||""}normalizeDefault(e){const t=e.default;if(null!==t){if(("enum"===e.type||"simple-enum"===e.type)&&void 0!==t)return`'${t}'`;if("set"===e.type&&void 0!==t)return`'${St.simpleArrayToString(t)}'`;if("number"==typeof t)return`${t}`;if("boolean"==typeof t)return t?"1":"0";if("function"==typeof t)return t();if("string"==typeof t)return`'${t}'`;if(void 0!==t)return`${t}`}}normalizeIsUnique(e){return e.entityMetadata.indices.some((t=>t.isUnique&&1===t.columns.length&&t.columns[0]===e))}getColumnLength(e){if(e.length)return e.length.toString();if("uuid"===e.generationStrategy)return"36";switch(e.type){case String:case"varchar":case"nvarchar":case"national varchar":case"varbinary":return"255";default:return""}}createFullType(e){let t=e.type;return this.getColumnLength(e)?t+=`(${this.getColumnLength(e)})`:e.width?t+=`(${e.width})`:null!==e.precision&&void 0!==e.precision&&null!==e.scale&&void 0!==e.scale?t+=`(${e.precision},${e.scale})`:null!==e.precision&&void 0!==e.precision&&(t+=`(${e.precision})`),e.isArray&&(t+=" array"),t}obtainMasterConnection(){return new Promise(((e,t)=>{this.poolCluster?this.poolCluster.getConnection("MASTER",((n,a)=>{n?t(n):e(this.prepareDbConnection(a))})):this.pool?this.pool.getConnection(((n,a)=>{n?t(n):e(this.prepareDbConnection(a))})):t(new s("Connection is not established with mysql database"))}))}obtainSlaveConnection(){return this.poolCluster?new Promise(((e,t)=>{this.poolCluster.getConnection("SLAVE*",((n,a)=>{n?t(n):e(this.prepareDbConnection(a))}))})):this.obtainMasterConnection()}createGeneratedMap(e,t,n){const a=e.generatedColumns.reduce(((e,a)=>{let i;return"increment"===a.generationStrategy&&t.insertId&&(i=t.insertId+n),xe.mergeDeep(e,a.createValueMap(i))}),{});return Object.keys(a).length>0?a:void 0}findChangedColumns(e,t){return t.filter((t=>{const n=e.find((e=>e.name===t.databaseName));if(!n)return!1;let a=t.length;return a||"uuid"!==t.generationStrategy||(a=this.getColumnLength(t)),n.name!==t.databaseName||n.type!==this.normalizeType(t)||n.length!==a||n.width!==t.width||n.precision!==t.precision||n.scale!==t.scale||n.zerofill!==t.zerofill||n.unsigned!==t.unsigned||n.asExpression!==t.asExpression||n.generatedType!==t.generatedType||n.comment!==this.escapeComment(t.comment)||!this.compareDefaultValues(this.normalizeDefault(t),n.default)||n.enum&&t.enum&&!xe.isArraysEqual(n.enum,t.enum.map((e=>e+"")))||n.onUpdate!==t.onUpdate||n.isPrimary!==t.isPrimary||n.isNullable!==t.isNullable||n.isUnique!==this.normalizeIsUnique(t)||"uuid"!==t.generationStrategy&&n.isGenerated!==t.isGenerated}))}isReturningSqlSupported(){return!1}isUUIDGenerationSupported(){return!1}isFullTextColumnTypeSupported(){return!0}createParameter(e,t){return"?"}loadDependencies(){const e=this.options.driver||i.load("typeorm-aurora-data-api-driver");this.DataApiDriver=e,this.DataApiDriver=this.DataApiDriver.default||this.DataApiDriver}createConnectionOptions(e,t){return t=Object.assign({},t,re.buildDriverOptions(t)),Object.assign({},{resourceArn:e.resourceArn,secretArn:e.secretArn,database:e.database,region:e.region,type:e.type},{host:t.host,user:t.username,password:t.password,database:t.database,port:t.port,ssl:e.ssl},e.extra||{})}async createPool(e){return{}}prepareDbConnection(e){const{logger:t}=this.connection;return 0===e.listeners("error").length&&e.on("error",(e=>t.log("warn",`MySQL connection raised an error. ${e}`))),e}compareDefaultValues(e,t){return"string"==typeof e&&"string"==typeof t&&(e=e.replace(/^'+|'+$/g,""),t=t.replace(/^'+|'+$/g,"")),e===t}escapeComment(e){return e?e=e.replace(/\u0000/g,""):e}}class yn extends Xt{constructor(e,t){super(),this.driver=e,this.connection=e.connection,this.mode=t,this.broadcaster=new en(this)}connect(){return this.databaseConnection?Promise.resolve(this.databaseConnection):(this.databaseConnectionPromise||("slave"===this.mode&&this.driver.isReplicated?this.databaseConnectionPromise=this.driver.obtainSlaveConnection().then((([e,t])=>{this.driver.connectedQueryRunners.push(this),this.databaseConnection=e;const n=e=>this.releasePostgresConnection(e);return this.releaseCallback=e=>{this.databaseConnection.removeListener("error",n),t(e)},this.databaseConnection.on("error",n),this.databaseConnection})):this.databaseConnectionPromise=this.driver.obtainMasterConnection().then((([e,t])=>{this.driver.connectedQueryRunners.push(this),this.databaseConnection=e;const n=e=>this.releasePostgresConnection(e);return this.releaseCallback=e=>{this.databaseConnection.removeListener("error",n),t(e)},this.databaseConnection.on("error",n),this.databaseConnection}))),this.databaseConnectionPromise)}async releasePostgresConnection(e){if(this.isReleased)return;this.isReleased=!0,this.releaseCallback&&(this.releaseCallback(e),this.releaseCallback=void 0);const t=this.driver.connectedQueryRunners.indexOf(this);-1!==t&&this.driver.connectedQueryRunners.splice(t,1)}release(){return this.releasePostgresConnection()}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?(this.transactionDepth+=1,await this.query("START TRANSACTION"),e&&await this.query("SET TRANSACTION ISOLATION LEVEL "+e)):(this.transactionDepth+=1,await this.query("SAVEPOINT typeorm_"+(this.transactionDepth-1))),await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`RELEASE SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.query("COMMIT"),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`ROLLBACK TO SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.query("ROLLBACK"),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new W;const a=await this.connect(),i=new Ae;this.driver.connection.logger.logQuery(e,t,this),this.broadcaster.broadcastBeforeQueryEvent(i,e,t);try{const r=+new Date,s=await a.query(e,t),o=this.driver.options.maxQueryExecutionTime,c=+new Date-r;this.broadcaster.broadcastAfterQueryEvent(i,e,t,!0,c,s,void 0),o&&c>o&&this.driver.connection.logger.logQuerySlow(c,e,t,this);const h=new tn;if(s){switch(s.hasOwnProperty("rows")&&(h.records=s.rows),s.hasOwnProperty("rowCount")&&(h.affected=s.rowCount),s.command){case"DELETE":case"UPDATE":h.raw=[s.rows,s.rowCount];break;default:h.raw=s.rows}if(!n)return h.raw}return h}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),this.broadcaster.broadcastAfterQueryEvent(i,e,t,!1,void 0,void 0,n),new k(e,t,n)}finally{await i.wait()}}async stream(e,t,n,a){const i=this.driver.loadStreamDependency();if(this.isReleased)throw new W;const r=await this.connect();this.driver.connection.logger.logQuery(e,t,this);const s=r.query(new i(e,t));return n&&s.on("end",n),a&&s.on("error",a),s}async getDatabases(){return Promise.resolve([])}async getSchemas(e){return Promise.resolve([])}async hasDatabase(e){return!!(await this.query(`SELECT * FROM pg_database WHERE datname='${e}';`)).length}async getCurrentDatabase(){return(await this.query("SELECT * FROM current_database()"))[0].current_database}async hasSchema(e){return!!(await this.query(`SELECT * FROM "information_schema"."schemata" WHERE "schema_name" = '${e}'`)).length}async getCurrentSchema(){return(await this.query("SELECT * FROM current_schema()"))[0].current_schema}async hasTable(e){const t=this.driver.parseTableName(e);t.schema||(t.schema=await this.getCurrentSchema());const n=`SELECT * FROM "information_schema"."tables" WHERE "table_schema" = '${t.schema}' AND "table_name" = '${t.tableName}'`;return!!(await this.query(n)).length}async hasColumn(e,t){const n=this.driver.parseTableName(e);n.schema||(n.schema=await this.getCurrentSchema());const a=`SELECT * FROM "information_schema"."columns" WHERE "table_schema" = '${n.schema}' AND "table_name" = '${n.tableName}' AND "column_name" = '${t}'`;return!!(await this.query(a)).length}async createDatabase(e,t){if(t&&await this.hasDatabase(e))return Promise.resolve();const n=`CREATE DATABASE "${e}"`,a=`DROP DATABASE "${e}"`;await this.executeQueries(new Jt(n),new Jt(a))}async dropDatabase(e,t){const n=t?`DROP DATABASE IF EXISTS "${e}"`:`DROP DATABASE "${e}"`,a=`CREATE DATABASE "${e}"`;await this.executeQueries(new Jt(n),new Jt(a))}async createSchema(e,t){const n=-1===e.indexOf(".")?e:e.split(".")[1],a=t?`CREATE SCHEMA IF NOT EXISTS "${n}"`:`CREATE SCHEMA "${n}"`,i=`DROP SCHEMA "${n}" CASCADE`;await this.executeQueries(new Jt(a),new Jt(i))}async dropSchema(e,t,n){const a=-1===e.indexOf(".")?e:e.split(".")[1],i=t?`DROP SCHEMA IF EXISTS "${a}" ${n?"CASCADE":""}`:`DROP SCHEMA "${a}" ${n?"CASCADE":""}`,r=`CREATE SCHEMA "${a}"`;await this.executeQueries(new Jt(i),new Jt(r))}async createTable(e,t=!1,n=!0,a=!0){if(t&&await this.hasTable(e))return Promise.resolve();const i=[],r=[],s=e.columns.filter((e=>"enum"===e.type||"simple-enum"===e.type)),o=[];for(const t of s){const n=await this.hasEnumType(e,t),a=this.buildEnumName(e,t);n||-1!==o.indexOf(a)||(o.push(a),i.push(this.createEnumTypeSql(e,t,a)),r.push(this.dropEnumTypeSql(e,t,a)))}const c=e.columns.filter((e=>"STORED"===e.generatedType&&e.asExpression));for(const t of c){const n=(await this.getTableNameWithSchema(e.name)).split("."),a=n[1],s=n[0],o=this.insertTypeormMetadataSql({database:this.driver.database,schema:s,table:a,type:Mt.GENERATED_COLUMN,name:t.name,value:t.asExpression}),c=this.deleteTypeormMetadataSql({database:this.driver.database,schema:s,table:a,type:Mt.GENERATED_COLUMN,name:t.name});i.push(o),r.push(c)}i.push(this.createTableSql(e,n)),r.push(this.dropTableSql(e)),n&&e.foreignKeys.forEach((t=>r.push(this.dropForeignKeySql(e,t)))),a&&e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),i.push(this.createIndexSql(e,t)),r.push(this.dropIndexSql(e,t))})),e.comment&&(i.push(new Jt("COMMENT ON TABLE "+this.escapePath(e)+" IS '"+e.comment+"'")),r.push(new Jt("COMMENT ON TABLE "+this.escapePath(e)+" IS NULL"))),await this.executeQueries(i,r)}async dropTable(e,t,n=!0,a=!0){if(t&&!await this.hasTable(e))return Promise.resolve();const i=n,r=this.getTablePath(e),s=await this.getCachedTable(r),o=[],c=[];a&&s.indices.forEach((e=>{o.push(this.dropIndexSql(s,e)),c.push(this.createIndexSql(s,e))})),n&&s.foreignKeys.forEach((e=>o.push(this.dropForeignKeySql(s,e)))),o.push(this.dropTableSql(s)),c.push(this.createTableSql(s,i));const h=s.columns.filter((e=>e.generatedType&&e.asExpression));for(const e of h){const t=(await this.getTableNameWithSchema(s.name)).split("."),n=t[1],a=t[0],i=this.deleteTypeormMetadataSql({database:this.driver.database,schema:a,table:n,type:Mt.GENERATED_COLUMN,name:e.name}),r=this.insertTypeormMetadataSql({database:this.driver.database,schema:a,table:n,type:Mt.GENERATED_COLUMN,name:e.name,value:e.asExpression});o.push(i),c.push(r)}await this.executeQueries(o,c)}async createView(e,t=!1){const n=[],a=[];n.push(this.createViewSql(e)),t&&n.push(await this.insertViewDefinitionSql(e)),a.push(this.dropViewSql(e)),t&&a.push(await this.deleteViewDefinitionSql(e)),await this.executeQueries(n,a)}async dropView(e){const t=g.isView(e)?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(await this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(await this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){const n=[],a=[],i=g.isTable(e)?e:await this.getCachedTable(e),r=i.clone(),{schema:s,tableName:o}=this.driver.parseTableName(i);if(r.name=s?`${s}.${t}`:t,n.push(new Jt(`ALTER TABLE ${this.escapePath(i)} RENAME TO "${t}"`)),a.push(new Jt(`ALTER TABLE ${this.escapePath(r)} RENAME TO "${o}"`)),r.primaryColumns.length>0&&!r.primaryColumns[0].primaryKeyConstraintName){const e=r.primaryColumns.map((e=>e.name)),t=this.connection.namingStrategy.primaryKeyName(i,e),s=this.connection.namingStrategy.primaryKeyName(r,e);n.push(new Jt(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${t}" TO "${s}"`)),a.push(new Jt(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${s}" TO "${t}"`))}r.columns.map((e=>{if(e.isGenerated&&"increment"===e.generationStrategy){const t=this.buildSequencePath(i,e.name),s=this.buildSequenceName(i,e.name),o=this.buildSequencePath(r,e.name),c=this.buildSequenceName(r,e.name),h=`ALTER SEQUENCE ${this.escapePath(t)} RENAME TO "${c}"`,l=`ALTER SEQUENCE ${this.escapePath(o)} RENAME TO "${s}"`;n.push(new Jt(h)),a.push(new Jt(l))}})),r.uniques.forEach((e=>{const t=this.connection.namingStrategy.uniqueConstraintName(i,e.columnNames);if(e.name!==t)return;const s=this.connection.namingStrategy.uniqueConstraintName(r,e.columnNames);n.push(new Jt(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${e.name}" TO "${s}"`)),a.push(new Jt(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${s}" TO "${e.name}"`)),e.name=s})),r.indices.forEach((e=>{const t=this.connection.namingStrategy.indexName(i,e.columnNames,e.where);if(e.name!==t)return;const{schema:s}=this.driver.parseTableName(r),o=this.connection.namingStrategy.indexName(r,e.columnNames,e.where),c=s?`ALTER INDEX "${s}"."${e.name}" RENAME TO "${o}"`:`ALTER INDEX "${e.name}" RENAME TO "${o}"`,h=s?`ALTER INDEX "${s}"."${o}" RENAME TO "${e.name}"`:`ALTER INDEX "${o}" RENAME TO "${e.name}"`;n.push(new Jt(c)),a.push(new Jt(h)),e.name=o})),r.foreignKeys.forEach((e=>{const t=this.connection.namingStrategy.foreignKeyName(i,e.columnNames,this.getTablePath(e),e.referencedColumnNames);if(e.name!==t)return;const s=this.connection.namingStrategy.foreignKeyName(r,e.columnNames,this.getTablePath(e),e.referencedColumnNames);n.push(new Jt(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${e.name}" TO "${s}"`)),a.push(new Jt(`ALTER TABLE ${this.escapePath(r)} RENAME CONSTRAINT "${s}" TO "${e.name}"`)),e.name=s}));const c=r.columns.filter((e=>"enum"===e.type||"simple-enum"===e.type));for(let e of c){if(e.enumName)continue;const t=await this.getUserDefinedTypeName(i,e);n.push(new Jt(`ALTER TYPE "${t.schema}"."${t.name}" RENAME TO ${this.buildEnumName(r,e,!1)}`)),a.push(new Jt(`ALTER TYPE ${this.buildEnumName(r,e)} RENAME TO "${t.name}"`))}await this.executeQueries(n,a)}async addColumn(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=[],r=[];if("enum"!==t.type&&"simple-enum"!==t.type||await this.hasEnumType(n,t)||(i.push(this.createEnumTypeSql(n,t)),r.push(this.dropEnumTypeSql(n,t))),i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(n,t)}`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN "${t.name}"`)),t.isPrimary){const e=a.primaryColumns;if(e.length>0){const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,e.map((e=>e.name))),s=e.map((e=>`"${e.name}"`)).join(", ");i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${t}"`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${t}" PRIMARY KEY (${s})`))}e.push(t);const s=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,e.map((e=>e.name))),o=e.map((e=>`"${e.name}"`)).join(", ");i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${s}" PRIMARY KEY (${o})`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${s}"`))}const s=a.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===t.name));if(s&&(i.push(this.createIndexSql(n,s)),r.push(this.dropIndexSql(n,s))),t.isUnique){const e=new ze({name:this.connection.namingStrategy.uniqueConstraintName(n,[t.name]),columnNames:[t.name]});a.uniques.push(e),i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${e.name}" UNIQUE ("${t.name}")`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${e.name}"`))}if("STORED"===t.generatedType&&t.asExpression){const e=(await this.getTableNameWithSchema(n.name)).split("."),a=e[1],s=e[0],o=this.insertTypeormMetadataSql({database:this.driver.database,schema:s,table:a,type:Mt.GENERATED_COLUMN,name:t.name,value:t.asExpression}),c=this.deleteTypeormMetadataSql({database:this.driver.database,schema:s,table:a,type:Mt.GENERATED_COLUMN,name:t.name});i.push(o),r.push(c)}t.comment&&(i.push(new Jt(`COMMENT ON COLUMN ${this.escapePath(n)}."${t.name}" IS ${this.escapeComment(t.comment)}`)),r.push(new Jt(`COMMENT ON COLUMN ${this.escapePath(n)}."${t.name}" IS ${this.escapeComment(t.comment)}`))),await this.executeQueries(i,r),a.addColumn(t),this.replaceCachedTable(n,a)}async addColumns(e,t){for(const n of t)await this.addColumn(e,n)}async renameColumn(e,t,n){const a=g.isTable(e)?e:await this.getCachedTable(e),i=g.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!i)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);let r;return g.isTableColumn(n)?r=n:(r=i.clone(),r.name=n),this.changeColumn(a,i,r)}async changeColumn(e,t,n){const a=g.isTable(e)?e:await this.getCachedTable(e);let i=a.clone();const r=[],o=[];let c=!1;const h=g.isTableColumn(t)?t:a.columns.find((e=>e.name===t));if(!h)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);if(h.type!==n.type||h.length!==n.length||n.isArray!==h.isArray||!h.generatedType&&"STORED"===n.generatedType||h.asExpression!==n.asExpression&&"STORED"===n.generatedType)await this.dropColumn(a,h),await this.addColumn(a,n),i=a.clone();else{if(h.name!==n.name){if(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME COLUMN "${h.name}" TO "${n.name}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME COLUMN "${n.name}" TO "${h.name}"`)),"enum"===h.type||"simple-enum"===h.type){const e=await this.getUserDefinedTypeName(a,h);r.push(new Jt(`ALTER TYPE "${e.schema}"."${e.name}" RENAME TO ${this.buildEnumName(a,n,!1)}`)),o.push(new Jt(`ALTER TYPE ${this.buildEnumName(a,n)} RENAME TO "${e.name}"`))}if(!0===h.isPrimary&&!h.primaryKeyConstraintName){const e=i.primaryColumns.map((e=>e.name)),t=this.connection.namingStrategy.primaryKeyName(i,e);e.splice(e.indexOf(h.name),1),e.push(n.name);const s=this.connection.namingStrategy.primaryKeyName(i,e);r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${t}" TO "${s}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${s}" TO "${t}"`))}if(!0===h.isGenerated&&"increment"===n.generationStrategy){const e=this.buildSequencePath(a,h.name),t=this.buildSequenceName(a,h.name),i=this.buildSequencePath(a,n.name),s=this.buildSequenceName(a,n.name),c=`ALTER SEQUENCE ${this.escapePath(e)} RENAME TO "${s}"`,l=`ALTER SEQUENCE ${this.escapePath(i)} RENAME TO "${t}"`;r.push(new Jt(c)),o.push(new Jt(l))}i.findColumnUniques(h).forEach((e=>{const t=this.connection.namingStrategy.uniqueConstraintName(i,e.columnNames);if(e.name!==t)return;e.columnNames.splice(e.columnNames.indexOf(h.name),1),e.columnNames.push(n.name);const s=this.connection.namingStrategy.uniqueConstraintName(i,e.columnNames);r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${e.name}" TO "${s}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${s}" TO "${e.name}"`)),e.name=s})),i.findColumnIndices(h).forEach((e=>{const t=this.connection.namingStrategy.indexName(i,e.columnNames,e.where);if(e.name!==t)return;e.columnNames.splice(e.columnNames.indexOf(h.name),1),e.columnNames.push(n.name);const{schema:s}=this.driver.parseTableName(a),c=this.connection.namingStrategy.indexName(i,e.columnNames,e.where),l=s?`ALTER INDEX "${s}"."${e.name}" RENAME TO "${c}"`:`ALTER INDEX "${e.name}" RENAME TO "${c}"`,u=s?`ALTER INDEX "${s}"."${c}" RENAME TO "${e.name}"`:`ALTER INDEX "${c}" RENAME TO "${e.name}"`;r.push(new Jt(l)),o.push(new Jt(u)),e.name=c})),i.findColumnForeignKeys(h).forEach((e=>{const t=this.connection.namingStrategy.foreignKeyName(i,e.columnNames,this.getTablePath(e),e.referencedColumnNames);if(e.name!==t)return;e.columnNames.splice(e.columnNames.indexOf(h.name),1),e.columnNames.push(n.name);const s=this.connection.namingStrategy.foreignKeyName(i,e.columnNames,this.getTablePath(e),e.referencedColumnNames);r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${e.name}" TO "${s}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME CONSTRAINT "${s}" TO "${e.name}"`)),e.name=s}));const e=i.columns.find((e=>e.name===h.name));i.columns[i.columns.indexOf(e)].name=n.name,h.name=n.name}if(n.precision===h.precision&&n.scale===h.scale||(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(n)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(h)}`))),!("enum"!==n.type&&"simple-enum"!==n.type||"enum"!==h.type&&"simple-enum"!==h.type||xe.isArraysEqual(n.enum,h.enum)&&n.enumName===h.enumName)){const e=n.isArray?"[]":"",t=this.buildEnumName(a,n),i=this.buildEnumName(a,h),s=this.buildEnumName(a,h,!1),l=this.buildEnumName(a,h,!0,!1,!0),u=this.buildEnumName(a,h,!1,!1,!0);r.push(new Jt(`ALTER TYPE ${i} RENAME TO ${u}`)),o.push(new Jt(`ALTER TYPE ${l} RENAME TO ${s}`)),r.push(this.createEnumTypeSql(a,n,t)),o.push(this.dropEnumTypeSql(a,n,t)),null!==h.default&&void 0!==h.default&&(c=!0,r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" DROP DEFAULT`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" SET DEFAULT ${h.default}`)));const p=`${t}${e} USING "${n.name}"::"text"::${t}${e}`,d=`${l}${e} USING "${n.name}"::"text"::${l}${e}`;r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${p}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${d}`)),null!==n.default&&void 0!==n.default&&(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${n.default}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))),r.push(this.dropEnumTypeSql(a,h,l)),o.push(this.createEnumTypeSql(a,h,l))}if(h.isNullable!==n.isNullable&&(n.isNullable?(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" DROP NOT NULL`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" SET NOT NULL`))):(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" SET NOT NULL`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" DROP NOT NULL`)))),h.comment!==n.comment&&(r.push(new Jt(`COMMENT ON COLUMN ${this.escapePath(a)}."${h.name}" IS ${this.escapeComment(n.comment)}`)),o.push(new Jt(`COMMENT ON COLUMN ${this.escapePath(a)}."${n.name}" IS ${this.escapeComment(h.comment)}`))),n.isPrimary!==h.isPrimary){const e=i.primaryColumns;if(e.length>0){const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(i,e.map((e=>e.name))),n=e.map((e=>`"${e.name}"`)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${t}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${t}" PRIMARY KEY (${n})`))}if(!0===n.isPrimary){e.push(n),i.columns.find((e=>e.name===n.name)).isPrimary=!0;const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(i,e.map((e=>e.name))),s=e.map((e=>`"${e.name}"`)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${t}" PRIMARY KEY (${s})`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${t}"`))}else{const t=e.find((e=>e.name===n.name));if(e.splice(e.indexOf(t),1),i.columns.find((e=>e.name===n.name)).isPrimary=!1,e.length>0){const t=e[0].primaryKeyConstraintName?e[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(i,e.map((e=>e.name))),n=e.map((e=>`"${e.name}"`)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${t}" PRIMARY KEY (${n})`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${t}"`))}}}if(n.isUnique!==h.isUnique)if(!0===n.isUnique){const e=new ze({name:this.connection.namingStrategy.uniqueConstraintName(a,[n.name]),columnNames:[n.name]});i.uniques.push(e),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${e.name}" UNIQUE ("${n.name}")`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${e.name}"`))}else{const e=i.uniques.find((e=>1===e.columnNames.length&&!!e.columnNames.find((e=>e===n.name))));i.uniques.splice(i.uniques.indexOf(e),1),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP CONSTRAINT "${e.name}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD CONSTRAINT "${e.name}" UNIQUE ("${n.name}")`))}if(h.isGenerated!==n.isGenerated&&(h.isGenerated&&("uuid"===h.generationStrategy?(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" DROP DEFAULT`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${h.name}" SET DEFAULT ${this.driver.uuidGenerator}`))):"increment"===h.generationStrategy&&(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT nextval('${this.escapePath(this.buildSequencePath(a,n))}')`)),r.push(new Jt(`DROP SEQUENCE ${this.escapePath(this.buildSequencePath(a,n))}`)),o.push(new Jt(`CREATE SEQUENCE IF NOT EXISTS ${this.escapePath(this.buildSequencePath(a,n))} OWNED BY ${this.escapePath(a)}."${n.name}"`)))),"uuid"===n.generationStrategy?!0===n.isGenerated?(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${this.driver.uuidGenerator}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))):(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${this.driver.uuidGenerator}`))):"increment"===n.generationStrategy&&(!0===n.isGenerated?(r.push(new Jt(`CREATE SEQUENCE IF NOT EXISTS ${this.escapePath(this.buildSequencePath(a,n))} OWNED BY ${this.escapePath(a)}."${n.name}"`)),o.push(new Jt(`DROP SEQUENCE ${this.escapePath(this.buildSequencePath(a,n))}`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT nextval('${this.escapePath(this.buildSequencePath(a,n))}')`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))):(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT nextval('${this.escapePath(this.buildSequencePath(a,n))}')`)),r.push(new Jt(`DROP SEQUENCE ${this.escapePath(this.buildSequencePath(a,n))}`)),o.push(new Jt(`CREATE SEQUENCE IF NOT EXISTS ${this.escapePath(this.buildSequencePath(a,n))} OWNED BY ${this.escapePath(a)}."${n.name}"`))))),n.default===h.default||c||(null!==n.default&&void 0!==n.default?(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${n.default}`)),null!==h.default&&void 0!==h.default?o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${h.default}`)):o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`))):null!==h.default&&void 0!==h.default&&(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" DROP DEFAULT`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" SET DEFAULT ${h.default}`)))),(n.spatialFeatureType||"").toLowerCase()===(h.spatialFeatureType||"").toLowerCase()&&n.srid===h.srid||(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(n)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(h)}`))),n.generatedType!==h.generatedType&&(!n.generatedType||"VIRTUAL"===n.generatedType)){const e=(await this.getTableNameWithSchema(a.name)).split("."),t=e[1],i=e[0];r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} RENAME COLUMN "${h.name}" TO "TEMP_OLD_${h.name}"`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD ${this.buildCreateColumnSql(a,n)}`)),r.push(new Jt(`UPDATE ${this.escapePath(a)} SET "${n.name}" = "TEMP_OLD_${h.name}"`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP COLUMN "TEMP_OLD_${h.name}"`)),r.push(this.deleteTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:Mt.GENERATED_COLUMN,name:h.name})),o.push(this.insertTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:Mt.GENERATED_COLUMN,name:h.name,value:h.asExpression})),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ADD ${this.buildCreateColumnSql(a,h)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} DROP COLUMN "${n.name}"`))}}await this.executeQueries(r,o),this.replaceCachedTable(a,i)}async changeColumns(e,t){for(const{oldColumn:n,newColumn:a}of t)await this.changeColumn(e,n,a)}async dropColumn(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableColumn(t)?t:n.findColumnByName(t);if(!a)throw new s(`Column "${t}" was not found in table "${n.name}"`);const i=n.clone(),r=[],o=[];if(a.isPrimary){const e=a.primaryKeyConstraintName?a.primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(i,i.primaryColumns.map((e=>e.name))),t=i.primaryColumns.map((e=>`"${e.name}"`)).join(", ");if(r.push(new Jt(`ALTER TABLE ${this.escapePath(i)} DROP CONSTRAINT "${e}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(i)} ADD CONSTRAINT "${e}" PRIMARY KEY (${t})`)),i.findColumnByName(a.name).isPrimary=!1,i.primaryColumns.length>0){const e=i.primaryColumns[0].primaryKeyConstraintName?i.primaryColumns[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(i,i.primaryColumns.map((e=>e.name))),t=i.primaryColumns.map((e=>`"${e.name}"`)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(i)} ADD CONSTRAINT "${e}" PRIMARY KEY (${t})`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(i)} DROP CONSTRAINT "${e}"`))}}const c=i.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));c&&(i.indices.splice(i.indices.indexOf(c),1),r.push(this.dropIndexSql(n,c)),o.push(this.createIndexSql(n,c)));const h=i.checks.find((e=>!!e.columnNames&&1===e.columnNames.length&&e.columnNames[0]===a.name));h&&(i.checks.splice(i.checks.indexOf(h),1),r.push(this.dropCheckConstraintSql(n,h)),o.push(this.createCheckConstraintSql(n,h)));const l=i.uniques.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));if(l&&(i.uniques.splice(i.uniques.indexOf(l),1),r.push(this.dropUniqueConstraintSql(n,l)),o.push(this.createUniqueConstraintSql(n,l))),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN "${a.name}"`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(n,a)}`)),("enum"===a.type||"simple-enum"===a.type)&&await this.hasEnumType(n,a)){const e=await this.getUserDefinedTypeName(n,a),t=`"${e.schema}"."${e.name}"`;r.push(this.dropEnumTypeSql(n,a,t)),o.push(this.createEnumTypeSql(n,a,t))}if("STORED"===a.generatedType){const e=(await this.getTableNameWithSchema(n.name)).split("."),t=e[1],i=e[0],s=this.deleteTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:Mt.GENERATED_COLUMN,name:a.name}),c=this.insertTypeormMetadataSql({database:this.driver.database,schema:i,table:t,type:Mt.GENERATED_COLUMN,name:a.name,value:a.asExpression});r.push(s),o.push(c)}await this.executeQueries(r,o),i.removeColumn(a),this.replaceCachedTable(n,i)}async dropColumns(e,t){for(const n of t)await this.dropColumn(e,n)}async createPrimaryKey(e,t,n){const a=g.isTable(e)?e:await this.getCachedTable(e),i=a.clone(),r=this.createPrimaryKeySql(a,t,n);i.columns.forEach((e=>{t.find((t=>t===e.name))&&(e.isPrimary=!0)}));const s=this.dropPrimaryKeySql(i);await this.executeQueries(r,s),this.replaceCachedTable(a,i)}async updatePrimaryKeys(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=n.clone(),i=t.map((e=>e.name)),r=[],s=[],o=a.primaryColumns;if(o.length>0){const e=o[0].primaryKeyConstraintName?o[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,o.map((e=>e.name))),t=o.map((e=>`"${e.name}"`)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${e}"`)),s.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${e}" PRIMARY KEY (${t})`))}a.columns.filter((e=>-1!==i.indexOf(e.name))).forEach((e=>e.isPrimary=!0));const c=o[0]?.primaryKeyConstraintName?o[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(a,i),h=i.map((e=>`"${e}"`)).join(", ");r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD CONSTRAINT "${c}" PRIMARY KEY (${h})`)),s.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP CONSTRAINT "${c}"`)),await this.executeQueries(r,s),this.replaceCachedTable(n,a)}async dropPrimaryKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=this.dropPrimaryKeySql(n),i=this.createPrimaryKeySql(n,n.primaryColumns.map((e=>e.name)),t);await this.executeQueries(a,i),n.primaryColumns.forEach((e=>{e.isPrimary=!1}))}async createUniqueConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.uniqueConstraintName(n,t.columnNames));const a=this.createUniqueConstraintSql(n,t),i=this.dropUniqueConstraintSql(n,t);await this.executeQueries(a,i),n.addUniqueConstraint(t)}async createUniqueConstraints(e,t){for(const n of t)await this.createUniqueConstraint(e,n)}async dropUniqueConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableUnique(t)?t:n.uniques.find((e=>e.name===t));if(!a)throw new s(`Supplied unique constraint was not found in table ${n.name}`);const i=this.dropUniqueConstraintSql(n,a),r=this.createUniqueConstraintSql(n,a);await this.executeQueries(i,r),n.removeUniqueConstraint(a)}async dropUniqueConstraints(e,t){for(const n of t)await this.dropUniqueConstraint(e,n)}async createCheckConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.checkConstraintName(n,t.expression));const a=this.createCheckConstraintSql(n,t),i=this.dropCheckConstraintSql(n,t);await this.executeQueries(a,i),n.addCheckConstraint(t)}async createCheckConstraints(e,t){const n=t.map((t=>this.createCheckConstraint(e,t)));await Promise.all(n)}async dropCheckConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableCheck(t)?t:n.checks.find((e=>e.name===t));if(!a)throw new s(`Supplied check constraint was not found in table ${n.name}`);const i=this.dropCheckConstraintSql(n,a),r=this.createCheckConstraintSql(n,a);await this.executeQueries(i,r),n.removeCheckConstraint(a)}async dropCheckConstraints(e,t){const n=t.map((t=>this.dropCheckConstraint(e,t)));await Promise.all(n)}async createExclusionConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.exclusionConstraintName(n,t.expression));const a=this.createExclusionConstraintSql(n,t),i=this.dropExclusionConstraintSql(n,t);await this.executeQueries(a,i),n.addExclusionConstraint(t)}async createExclusionConstraints(e,t){const n=t.map((t=>this.createExclusionConstraint(e,t)));await Promise.all(n)}async dropExclusionConstraint(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableExclusion(t)?t:n.exclusions.find((e=>e.name===t));if(!a)throw new s(`Supplied exclusion constraint was not found in table ${n.name}`);const i=this.dropExclusionConstraintSql(n,a),r=this.createExclusionConstraintSql(n,a);await this.executeQueries(i,r),n.removeExclusionConstraint(a)}async dropExclusionConstraints(e,t){const n=t.map((t=>this.dropExclusionConstraint(e,t)));await Promise.all(n)}async createForeignKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.foreignKeyName(n,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=this.createForeignKeySql(n,t),i=this.dropForeignKeySql(n,t);await this.executeQueries(a,i),n.addForeignKey(t)}async createForeignKeys(e,t){for(const n of t)await this.createForeignKey(e,n)}async dropForeignKey(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableForeignKey(t)?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new s(`Supplied foreign key was not found in table ${n.name}`);a.name||(a.name=this.connection.namingStrategy.foreignKeyName(n,a.columnNames,this.getTablePath(a),a.referencedColumnNames));const i=this.dropForeignKeySql(n,a),r=this.createForeignKeySql(n,a);await this.executeQueries(i,r),n.removeForeignKey(a)}async dropForeignKeys(e,t){for(const n of t)await this.dropForeignKey(e,n)}async createIndex(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e);t.name||(t.name=this.generateIndexName(n,t));const a=this.createIndexSql(n,t),i=this.dropIndexSql(n,t);await this.executeQueries(a,i),n.addIndex(t)}async createViewIndex(e,t){const n=g.isView(e)?e:await this.getCachedView(e);t.name||(t.name=this.generateIndexName(n,t));const a=this.createViewIndexSql(n,t),i=this.dropIndexSql(n,t);await this.executeQueries(a,i),n.addIndex(t)}async createIndices(e,t){for(const n of t)await this.createIndex(e,n)}async createViewIndices(e,t){for(const n of t)await this.createViewIndex(e,n)}async dropIndex(e,t){const n=g.isTable(e)?e:await this.getCachedTable(e),a=g.isTableIndex(t)?t:n.indices.find((e=>e.name===t));if(!a)throw new s(`Supplied index ${t} was not found in table ${n.name}`);a.name||(a.name=this.generateIndexName(n,a));const i=this.dropIndexSql(n,a),r=this.createIndexSql(n,a);await this.executeQueries(i,r),n.removeIndex(a)}async dropViewIndex(e,t){const n=g.isView(e)?e:await this.getCachedView(e),a=g.isTableIndex(t)?t:n.indices.find((e=>e.name===t));if(!a)throw new s(`Supplied index ${t} was not found in view ${n.name}`);a.name||(a.name=this.generateIndexName(n,a));const i=this.dropIndexSql(n,a),r=this.createViewIndexSql(n,a);await this.executeQueries(i,r),n.removeIndex(a)}async dropIndices(e,t){for(const n of t)await this.dropIndex(e,n)}async clearTable(e){await this.query(`TRUNCATE TABLE ${this.escapePath(e)}`)}async clearDatabase(){const e=[];this.connection.entityMetadatas.filter((e=>e.schema)).forEach((t=>{e.find((e=>e===t.schema))||e.push(t.schema)})),e.push(this.driver.options.schema||"current_schema()");const t=e.map((e=>"current_schema()"===e?e:"'"+e+"'")).join(", "),n=this.isTransactionActive;n||await this.startTransaction();try{const e=await this.getVersion(),a=`SELECT 'DROP VIEW IF EXISTS "' || schemaname || '"."' || viewname || '" CASCADE;' as "query" FROM "pg_views" WHERE "schemaname" IN (${t}) AND "viewname" NOT IN ('geography_columns', 'geometry_columns', 'raster_columns', 'raster_overviews')`,i=await this.query(a);if(await Promise.all(i.map((e=>this.query(e.query)))),ae.isGreaterOrEqual(e,"9.3")){const e=`SELECT 'DROP MATERIALIZED VIEW IF EXISTS "' || schemaname || '"."' || matviewname || '" CASCADE;' as "query" FROM "pg_matviews" WHERE "schemaname" IN (${t})`,n=await this.query(e);await Promise.all(n.map((e=>this.query(e.query))))}const r=`SELECT 'DROP TABLE IF EXISTS "' || schemaname || '"."' || tablename || '" CASCADE;' as "query" FROM "pg_tables" WHERE "schemaname" IN (${t}) AND "tablename" NOT IN ('spatial_ref_sys')`,s=await this.query(r);await Promise.all(s.map((e=>this.query(e.query)))),await this.dropEnumTypes(t),n||await this.commitTransaction()}catch(e){try{n||await this.rollbackTransaction()}catch(e){}throw e}}async loadViews(e){if(!await this.hasTable(this.getTypeormMetadataTableName()))return[];e||(e=[]);const t=await this.getCurrentDatabase(),n=await this.getCurrentSchema(),a=0===e.length?"1=1":e.map((e=>this.driver.parseTableName(e))).map((({schema:e,tableName:t})=>(e||(e=this.driver.options.schema||n),`("t"."schema" = '${e}' AND "t"."name" = '${t}')`))).join(" OR "),i=`SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" IN ('m') AND "cnst"."contype" IS NULL AND (${0===e.length?"1=1":e.map((e=>this.driver.parseTableName(e))).map((({schema:e,tableName:t})=>(e||(e=this.driver.options.schema||n),`("ns"."nspname" = '${e}' AND "t"."relname" = '${t}')`))).join(" OR ")})`,r=`SELECT "t".* FROM ${this.escapePath(this.getTypeormMetadataTableName())} "t" INNER JOIN "pg_catalog"."pg_class" "c" ON "c"."relname" = "t"."name" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "c"."relnamespace" AND "n"."nspname" = "t"."schema" WHERE "t"."type" IN ('${Mt.VIEW}', '${Mt.MATERIALIZED_VIEW}') ${a?`AND (${a})`:""}`,s=await this.query(r),o=await this.query(i);return s.map((e=>{const a=xe.uniq(o.filter((t=>t.table_name===e.name&&t.table_schema===e.schema)),(e=>e.constraint_name)),i=new Kt,r=e.schema!==n||this.driver.options.schema?e.schema:void 0;return i.database=t,i.schema=e.schema,i.name=this.driver.buildTableName(e.name,r),i.expression=e.value,i.materialized=e.type===Mt.MATERIALIZED_VIEW,i.indices=a.map((e=>{const t=o.filter((t=>t.table_schema===e.table_schema&&t.table_name===e.table_name&&t.constraint_name===e.constraint_name));return new Ke({view:i,name:e.constraint_name,columnNames:t.map((e=>e.column_name)),isUnique:"TRUE"===e.is_unique,where:e.condition,isFulltext:!1})})),i}))}async loadTables(e){if(e&&0===e.length)return[];const t=await this.getCurrentSchema(),n=await this.getCurrentDatabase(),a=[];if(e){const n='SELECT "table_schema", "table_name", obj_description((\'"\' || "table_schema" || \'"."\' || "table_name" || \'"\')::regclass, \'pg_class\') AS table_comment FROM "information_schema"."tables" WHERE '+e.map((e=>this.driver.parseTableName(e))).map((({schema:e,tableName:n})=>`("table_schema" = '${e||t}' AND "table_name" = '${n}')`)).join(" OR ");a.push(...await this.query(n))}else{const e='SELECT "table_schema", "table_name", obj_description((\'"\' || "table_schema" || \'"."\' || "table_name" || \'"\')::regclass, \'pg_class\') AS table_comment FROM "information_schema"."tables"';a.push(...await this.query(e))}if(0===a.length)return[];const i='SELECT columns.*, pg_catalog.col_description((\'"\' || table_catalog || \'"."\' || table_schema || \'"."\' || table_name || \'"\')::regclass::oid, ordinal_position) AS description, (\'"\' || "udt_schema" || \'"."\' || "udt_name" || \'"\')::"regtype" AS "regtype", pg_catalog.format_type("col_attr"."atttypid", "col_attr"."atttypmod") AS "format_type" FROM "information_schema"."columns" LEFT JOIN "pg_catalog"."pg_attribute" AS "col_attr" ON "col_attr"."attname" = "columns"."column_name" AND "col_attr"."attrelid" = ( SELECT "cls"."oid" FROM "pg_catalog"."pg_class" AS "cls" LEFT JOIN "pg_catalog"."pg_namespace" AS "ns" ON "ns"."oid" = "cls"."relnamespace" WHERE "cls"."relname" = "columns"."table_name" AND "ns"."nspname" = "columns"."table_schema" ) WHERE '+a.map((({table_schema:e,table_name:t})=>`("table_schema" = '${e}' AND "table_name" = '${t}')`)).join(" OR "),r=a.map((({table_schema:e,table_name:t})=>`("ns"."nspname" = '${e}' AND "t"."relname" = '${t}')`)).join(" OR "),s=`SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "cnst"."conname" AS "constraint_name", pg_get_constraintdef("cnst"."oid") AS "expression", CASE "cnst"."contype" WHEN 'p' THEN 'PRIMARY' WHEN 'u' THEN 'UNIQUE' WHEN 'c' THEN 'CHECK' WHEN 'x' THEN 'EXCLUDE' END AS "constraint_type", "a"."attname" AS "column_name" FROM "pg_constraint" "cnst" INNER JOIN "pg_class" "t" ON "t"."oid" = "cnst"."conrelid" INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "cnst"."connamespace" LEFT JOIN "pg_attribute" "a" ON "a"."attrelid" = "cnst"."conrelid" AND "a"."attnum" = ANY ("cnst"."conkey") WHERE "t"."relkind" IN ('r', 'p') AND (${r})`,o=`SELECT "ns"."nspname" AS "table_schema", "t"."relname" AS "table_name", "i"."relname" AS "constraint_name", "a"."attname" AS "column_name", CASE "ix"."indisunique" WHEN 't' THEN 'TRUE' ELSE'FALSE' END AS "is_unique", pg_get_expr("ix"."indpred", "ix"."indrelid") AS "condition", "types"."typname" AS "type_name", "am"."amname" AS "index_type" FROM "pg_class" "t" INNER JOIN "pg_index" "ix" ON "ix"."indrelid" = "t"."oid" INNER JOIN "pg_attribute" "a" ON "a"."attrelid" = "t"."oid"  AND "a"."attnum" = ANY ("ix"."indkey") INNER JOIN "pg_namespace" "ns" ON "ns"."oid" = "t"."relnamespace" INNER JOIN "pg_class" "i" ON "i"."oid" = "ix"."indexrelid" INNER JOIN "pg_type" "types" ON "types"."oid" = "a"."atttypid" INNER JOIN "pg_am" "am" ON "i"."relam" = "am"."oid" LEFT JOIN "pg_constraint" "cnst" ON "cnst"."conname" = "i"."relname" WHERE "t"."relkind" IN ('r', 'p') AND "cnst"."contype" IS NULL AND (${r})`,c=`SELECT "con"."conname" AS "constraint_name", "con"."nspname" AS "table_schema", "con"."relname" AS "table_name", "att2"."attname" AS "column_name", "ns"."nspname" AS "referenced_table_schema", "cl"."relname" AS "referenced_table_name", "att"."attname" AS "referenced_column_name", "con"."confdeltype" AS "on_delete", "con"."confupdtype" AS "on_update", "con"."condeferrable" AS "deferrable", "con"."condeferred" AS "deferred" FROM ( SELECT UNNEST ("con1"."conkey") AS "parent", UNNEST ("con1"."confkey") AS "child", "con1"."confrelid", "con1"."conrelid", "con1"."conname", "con1"."contype", "ns"."nspname", "cl"."relname", "con1"."condeferrable", CASE WHEN "con1"."condeferred" THEN 'INITIALLY DEFERRED' ELSE 'INITIALLY IMMEDIATE' END as condeferred, CASE "con1"."confdeltype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confdeltype", CASE "con1"."confupdtype" WHEN 'a' THEN 'NO ACTION' WHEN 'r' THEN 'RESTRICT' WHEN 'c' THEN 'CASCADE' WHEN 'n' THEN 'SET NULL' WHEN 'd' THEN 'SET DEFAULT' END as "confupdtype" FROM "pg_class" "cl" INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_constraint" "con1" ON "con1"."conrelid" = "cl"."oid" WHERE "con1"."contype" = 'f' AND (${a.map((({table_schema:e,table_name:t})=>`("ns"."nspname" = '${e}' AND "cl"."relname" = '${t}')`)).join(" OR ")}) ) "con" INNER JOIN "pg_attribute" "att" ON "att"."attrelid" = "con"."confrelid" AND "att"."attnum" = "con"."child" INNER JOIN "pg_class" "cl" ON "cl"."oid" = "con"."confrelid" ${await this.hasSupportForPartitionedTables()?' AND "cl"."relispartition" = \'f\'':""}INNER JOIN "pg_namespace" "ns" ON "cl"."relnamespace" = "ns"."oid" INNER JOIN "pg_attribute" "att2" ON "att2"."attrelid" = "con"."conrelid" AND "att2"."attnum" = "con"."parent"`,[h,l,u,p]=await Promise.all([this.query(i),this.query(s),this.query(o),this.query(c)]);return Promise.all(a.map((async e=>{const a=new Xe,i=(e,n)=>e[n]!==t||this.driver.options.schema&&this.driver.options.schema!==t?e[n]:void 0,r=i(e,"table_schema");a.database=n,a.schema=e.table_schema,a.comment=e.table_comment,a.name=this.driver.buildTableName(e.table_name,r),a.columns=await Promise.all(h.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema)).map((async t=>{const i=l.filter((e=>e.table_name===t.table_name&&e.table_schema===t.table_schema&&e.column_name===t.column_name)),r=new We;if(r.name=t.column_name,r.type=t.regtype.toLowerCase(),"numeric"===r.type||"numeric[]"===r.type||"decimal"===r.type||"float"===r.type){let e=t.numeric_precision,n=t.numeric_scale;if("ARRAY"===t.data_type){const a=t.format_type.match(/^numeric\(([0-9]+),([0-9]+)\)\[\]$/);a&&(e=+a[1],n=+a[2])}null===e||this.isDefaultColumnPrecision(a,r,e)?null===n||this.isDefaultColumnScale(a,r,n)||(r.precision=void 0):r.precision=e,null===n||this.isDefaultColumnScale(a,r,n)?null===e||this.isDefaultColumnPrecision(a,r,e)||(r.scale=void 0):r.scale=n}if("interval"!==r.type&&"time without time zone"!==r.type&&"time with time zone"!==r.type&&"timestamp without time zone"!==r.type&&"timestamp with time zone"!==r.type||(r.precision=this.isDefaultColumnPrecision(a,r,t.datetime_precision)?void 0:t.datetime_precision),"USER-DEFINED"===t.data_type||"ARRAY"===t.data_type){const{name:n}=await this.getUserDefinedTypeName(a,r),i=this.buildEnumName(a,r,!1,!0)!==n?n:void 0,s=`SELECT "e"."enumlabel" AS "value" FROM "pg_enum" "e" INNER JOIN "pg_type" "t" ON "t"."oid" = "e"."enumtypid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" = '${e.table_schema}' AND "t"."typname" = '${i||n}'`,o=await this.query(s);if(o.length&&(r.type="enum",r.enum=o.map((e=>e.value)),r.enumName=i),"ARRAY"===t.data_type){r.isArray=!0;const e=r.type.replace("[]","");r.type=this.connection.driver.normalizeType({type:e})}}if("geometry"===r.type||"geography"===r.type){const e=`SELECT * FROM (SELECT "f_table_schema" "table_schema", "f_table_name" "table_name", "f_${r.type}_column" "column_name", "srid", "type" FROM "${r.type}_columns") AS _ WHERE "column_name" = '${t.column_name}' AND "table_schema" = '${t.table_schema}' AND "table_name" = '${t.table_name}'`,n=await this.query(e);n.length>0&&(r.spatialFeatureType=n[0].type,r.srid=n[0].srid)}if(-1!==this.driver.withLengthColumnTypes.indexOf(r.type)){let e;if(r.isArray){const n=/\((\d+)\)/.exec(t.format_type);e=n?n[1]:void 0}else t.character_maximum_length&&(e=t.character_maximum_length.toString());e&&(r.length=this.isDefaultColumnLength(a,r,e)?"":e)}r.isNullable="YES"===t.is_nullable;const s=i.find((e=>"PRIMARY"===e.constraint_type));if(s){r.isPrimary=!0;const e=l.filter((e=>e.table_name===t.table_name&&e.table_schema===t.table_schema&&e.column_name!==t.column_name&&"PRIMARY"===e.constraint_type)).map((e=>e.column_name));e.push(t.column_name);const n=this.connection.namingStrategy.primaryKeyName(a,e);s.constraint_name!==n&&(r.primaryKeyConstraintName=s.constraint_name)}const o=i.filter((e=>"UNIQUE"===e.constraint_type)),c=o.every((e=>l.some((n=>"UNIQUE"===n.constraint_type&&n.constraint_name===e.constraint_name&&n.column_name!==t.column_name))));if(r.isUnique=o.length>0&&!c,"YES"===t.is_identity)r.isGenerated=!0,r.generationStrategy="identity",r.generatedIdentity=t.identity_generation;else if(null!==t.column_default&&void 0!==t.column_default){const e=`nextval('${this.buildSequenceName(a,t.column_name)}'::regclass)`,n=`nextval('${this.buildSequencePath(a,t.column_name)}'::regclass)`,i=t.column_default.replace(/"/g,"");i===e||i===n?(r.isGenerated=!0,r.generationStrategy="increment"):"gen_random_uuid()"===t.column_default||/^uuid_generate_v\d\(\)/.test(t.column_default)?"uuid"===r.type?(r.isGenerated=!0,r.generationStrategy="uuid"):r.default=t.column_default:"now()"===t.column_default||-1!==t.column_default.indexOf("'now'::text")?r.default=t.column_default:(r.default=t.column_default.replace(/::[\w\s.[\]\-"]+/g,""),r.default=r.default.replace(/^(-?\d+)$/,"'$1'"))}if("ALWAYS"===t.is_generated&&t.generation_expression){r.generatedType="STORED";const t=this.selectTypeormMetadataSql({database:n,schema:e.table_schema,table:e.table_name,type:Mt.GENERATED_COLUMN,name:r.name}),a=await this.query(t.query,t.parameters);a[0]&&a[0].value?r.asExpression=a[0].value:r.asExpression=""}return r.comment=t.description?t.description:void 0,t.character_set_name&&(r.charset=t.character_set_name),t.collation_name&&(r.collation=t.collation_name),r})));const s=xe.uniq(l.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema&&"UNIQUE"===t.constraint_type)),(e=>e.constraint_name));a.uniques=s.map((e=>{const t=l.filter((t=>t.constraint_name===e.constraint_name));return new ze({name:e.constraint_name,columnNames:t.map((e=>e.column_name)),deferrable:e.deferrable?e.deferred:void 0})}));const o=xe.uniq(l.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema&&"CHECK"===t.constraint_type)),(e=>e.constraint_name));a.checks=o.map((e=>{const t=l.filter((t=>t.constraint_name===e.constraint_name));return new Je({name:e.constraint_name,columnNames:t.map((e=>e.column_name)),expression:e.expression.replace(/^\s*CHECK\s*\((.*)\)\s*$/i,"$1")})}));const c=xe.uniq(l.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema&&"EXCLUDE"===t.constraint_type)),(e=>e.constraint_name));a.exclusions=c.map((e=>new Ye({name:e.constraint_name,expression:e.expression.substring(8)})));const d=xe.uniq(p.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema)),(e=>e.constraint_name));a.foreignKeys=d.map((e=>{const t=p.filter((t=>t.constraint_name===e.constraint_name)),n=i(e,"referenced_table_schema"),a=this.driver.buildTableName(e.referenced_table_name,n);return new He({name:e.constraint_name,columnNames:t.map((e=>e.column_name)),referencedSchema:e.referenced_table_schema,referencedTableName:a,referencedColumnNames:t.map((e=>e.referenced_column_name)),onDelete:e.on_delete,onUpdate:e.on_update,deferrable:e.deferrable?e.deferred:void 0})}));const m=xe.uniq(u.filter((t=>t.table_name===e.table_name&&t.table_schema===e.table_schema)),(e=>e.constraint_name));return a.indices=m.map((e=>{const t=u.filter((t=>t.table_schema===e.table_schema&&t.table_name===e.table_name&&t.constraint_name===e.constraint_name));return new Ke({table:a,name:e.constraint_name,columnNames:t.map((e=>e.column_name)),isUnique:"TRUE"===e.is_unique,where:e.condition,isSpatial:"gist"===e.index_type,isFulltext:!1})})),a})))}createTableSql(e,t){const n=e.columns.map((t=>this.buildCreateColumnSql(e,t))).join(", ");let a=`CREATE TABLE ${this.escapePath(e)} (${n}`;if(e.columns.filter((e=>e.isUnique)).forEach((t=>{e.uniques.some((e=>1===e.columnNames.length&&e.columnNames[0]===t.name))||e.uniques.push(new ze({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name]}))})),e.uniques.length>0){const t=e.uniques.map((t=>{let n=`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.uniqueConstraintName(e,t.columnNames)}" UNIQUE (${t.columnNames.map((e=>`"${e}"`)).join(", ")})`;return t.deferrable&&(n+=` DEFERRABLE ${t.deferrable}`),n})).join(", ");a+=`, ${t}`}if(e.checks.length>0){const t=e.checks.map((t=>`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.checkConstraintName(e,t.expression)}" CHECK (${t.expression})`)).join(", ");a+=`, ${t}`}if(e.exclusions.length>0){const t=e.exclusions.map((t=>`CONSTRAINT "${t.name?t.name:this.connection.namingStrategy.exclusionConstraintName(e,t.expression)}" EXCLUDE ${t.expression}`)).join(", ");a+=`, ${t}`}if(e.foreignKeys.length>0&&t){const t=e.foreignKeys.map((t=>{const n=t.columnNames.map((e=>`"${e}"`)).join(", ");t.name||(t.name=this.connection.namingStrategy.foreignKeyName(e,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=t.referencedColumnNames.map((e=>`"${e}"`)).join(", ");let i=`CONSTRAINT "${t.name}" FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),t.deferrable&&(i+=` DEFERRABLE ${t.deferrable}`),i})).join(", ");a+=`, ${t}`}const i=e.columns.filter((e=>e.isPrimary));if(i.length>0){const t=i[0].primaryKeyConstraintName?i[0].primaryKeyConstraintName:this.connection.namingStrategy.primaryKeyName(e,i.map((e=>e.name))),n=i.map((e=>`"${e.name}"`)).join(", ");a+=`, CONSTRAINT "${t}" PRIMARY KEY (${n})`}return a+=")",e.columns.filter((e=>e.comment)).forEach((t=>a+=`; COMMENT ON COLUMN ${this.escapePath(e)}."${t.name}" IS ${this.escapeComment(t.comment)}`)),new Jt(a)}async getVersion(){return(await this.query("SELECT version()"))[0].version.replace(/^PostgreSQL ([\d.]+) .*$/,"$1")}dropTableSql(e){return new Jt(`DROP TABLE ${this.escapePath(e)}`)}createViewSql(e){const t=e.materialized?"MATERIALIZED ":"",n=this.escapePath(e);return"string"==typeof e.expression?new Jt(`CREATE ${t}VIEW ${n} AS ${e.expression}`):new Jt(`CREATE ${t}VIEW ${n} AS ${e.expression(this.connection).getQuery()}`)}async insertViewDefinitionSql(e){const t=await this.getCurrentSchema();let{schema:n,tableName:a}=this.driver.parseTableName(e);n||(n=t);const i=e.materialized?Mt.MATERIALIZED_VIEW:Mt.VIEW,r="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:i,schema:n,name:a,value:r})}dropViewSql(e){const t=e.materialized?"MATERIALIZED ":"";return new Jt(`DROP ${t}VIEW ${this.escapePath(e)}`)}async deleteViewDefinitionSql(e){const t=await this.getCurrentSchema();let{schema:n,tableName:a}=this.driver.parseTableName(e);n||(n=t);const i=e.materialized?Mt.MATERIALIZED_VIEW:Mt.VIEW;return this.deleteTypeormMetadataSql({type:i,schema:n,name:a})}async dropEnumTypes(e){const t=`SELECT 'DROP TYPE IF EXISTS "' || n.nspname || '"."' || t.typname || '" CASCADE;' as "query" FROM "pg_type" "t" INNER JOIN "pg_enum" "e" ON "e"."enumtypid" = "t"."oid" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" IN (${e}) GROUP BY "n"."nspname", "t"."typname"`,n=await this.query(t);await Promise.all(n.map((e=>this.query(e.query))))}async hasEnumType(e,t){let{schema:n}=this.driver.parseTableName(e);n||(n=await this.getCurrentSchema());const a=`SELECT "n"."nspname", "t"."typname" FROM "pg_type" "t" INNER JOIN "pg_namespace" "n" ON "n"."oid" = "t"."typnamespace" WHERE "n"."nspname" = '${n}' AND "t"."typname" = '${this.buildEnumName(e,t,!1,!0)}'`;return!!(await this.query(a)).length}createEnumTypeSql(e,t,n){n||(n=this.buildEnumName(e,t));const a=t.enum.map((e=>`'${e.replace("'","''")}'`)).join(", ");return new Jt(`CREATE TYPE ${n} AS ENUM(${a})`)}dropEnumTypeSql(e,t,n){return n||(n=this.buildEnumName(e,t)),new Jt(`DROP TYPE ${n}`)}createIndexSql(e,t){const n=t.columnNames.map((e=>`"${e}"`)).join(", ");return new Jt(`CREATE ${t.isUnique?"UNIQUE ":""}INDEX${t.isConcurrent?" CONCURRENTLY":""} "${t.name}" ON ${this.escapePath(e)} ${t.isSpatial?"USING GiST ":""}(${n}) ${t.where?"WHERE "+t.where:""}`)}createViewIndexSql(e,t){const n=t.columnNames.map((e=>`"${e}"`)).join(", ");return new Jt(`CREATE ${t.isUnique?"UNIQUE ":""}INDEX "${t.name}" ON ${this.escapePath(e)} (${n}) ${t.where?"WHERE "+t.where:""}`)}dropIndexSql(e,t){const n=g.isTableIndex(t)?t.name:t,a=!!g.isTableIndex(t)&&t.isConcurrent,{schema:i}=this.driver.parseTableName(e);return new Jt(i?`DROP INDEX ${a?"CONCURRENTLY ":""}"${i}"."${n}"`:`DROP INDEX ${a?"CONCURRENTLY ":""}"${n}"`)}createPrimaryKeySql(e,t,n){const a=n||this.connection.namingStrategy.primaryKeyName(e,t),i=t.map((e=>`"${e}"`)).join(", ");return new Jt(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${a}" PRIMARY KEY (${i})`)}dropPrimaryKeySql(e){if(!e.primaryColumns.length)throw new s(`Table ${e} has no primary keys.`);const t=e.primaryColumns.map((e=>e.name)),n=e.primaryColumns[0].primaryKeyConstraintName||this.connection.namingStrategy.primaryKeyName(e,t);return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}createUniqueConstraintSql(e,t){const n=t.columnNames.map((e=>'"'+e+'"')).join(", ");let a=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" UNIQUE (${n})`;return t.deferrable&&(a+=` DEFERRABLE ${t.deferrable}`),new Jt(a)}dropUniqueConstraintSql(e,t){const n=g.isTableUnique(t)?t.name:t;return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}createCheckConstraintSql(e,t){return new Jt(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" CHECK (${t.expression})`)}dropCheckConstraintSql(e,t){const n=g.isTableCheck(t)?t.name:t;return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}createExclusionConstraintSql(e,t){return new Jt(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" EXCLUDE ${t.expression}`)}dropExclusionConstraintSql(e,t){const n=g.isTableExclusion(t)?t.name:t;return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}createForeignKeySql(e,t){const n=t.columnNames.map((e=>'"'+e+'"')).join(", "),a=t.referencedColumnNames.map((e=>'"'+e+'"')).join(",");let i=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT "${t.name}" FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))}(${a})`;return t.onDelete&&(i+=` ON DELETE ${t.onDelete}`),t.onUpdate&&(i+=` ON UPDATE ${t.onUpdate}`),t.deferrable&&(i+=` DEFERRABLE ${t.deferrable}`),new Jt(i)}dropForeignKeySql(e,t){const n=g.isTableForeignKey(t)?t.name:t;return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT "${n}"`)}buildSequenceName(e,t){const{tableName:n}=this.driver.parseTableName(e),a=g.isTableColumn(t)?t.name:t;let i=`${n}_${a}_seq`;return i.length>this.connection.driver.maxAliasLength&&(i=`${n.substring(0,29)}_${a.substring(0,Math.max(29,63-e.name.length-5))}_seq`),i}buildSequencePath(e,t){const{schema:n}=this.driver.parseTableName(e);return n?`${n}.${this.buildSequenceName(e,t)}`:this.buildSequenceName(e,t)}buildEnumName(e,t,n=!0,a,i){const{schema:r,tableName:s}=this.driver.parseTableName(e);let o=t.enumName?t.enumName:`${s}_${t.name.toLowerCase()}_enum`;return r&&n&&(o=`${r}.${o}`),i&&(o+="_old"),o.split(".").map((e=>a?e:`"${e}"`)).join(".")}async getUserDefinedTypeName(e,t){let{schema:n,tableName:a}=this.driver.parseTableName(e);n||(n=await this.getCurrentSchema());const i=await this.query(`SELECT "udt_schema", "udt_name" FROM "information_schema"."columns" WHERE "table_schema" = '${n}' AND "table_name" = '${a}' AND "column_name"='${t.name}'`);let r=i[0].udt_name;return 0===r.indexOf("_")&&(r=r.substr(1,r.length)),{schema:i[0].udt_schema,name:r}}escapeComment(e){return e&&0!==e.length?`'${e=e.replace(/'/g,"''").replace(/\u0000/g,"")}'`:"NULL"}escapePath(e){const{schema:t,tableName:n}=this.driver.parseTableName(e);return t&&t!==this.driver.searchSchema?`"${t}"."${n}"`:`"${n}"`}async getTableNameWithSchema(e){const t=g.isTable(e)?e.name:e;return-1===t.indexOf(".")?`${(await this.query("SELECT current_schema()"))[0].current_schema}.${t}`:`${t.split(".")[0]}.${t.split(".")[1]}`}buildCreateColumnSql(e,t){let n='"'+t.name+'"';if(!0===t.isGenerated&&"uuid"!==t.generationStrategy)if("identity"===t.generationStrategy){const e=t.generatedIdentity||"BY DEFAULT";n+=` ${t.type} GENERATED ${e} AS IDENTITY`}else"integer"!==t.type&&"int"!==t.type&&"int4"!==t.type||(n+=" SERIAL"),"smallint"!==t.type&&"int2"!==t.type||(n+=" SMALLSERIAL"),"bigint"!==t.type&&"int8"!==t.type||(n+=" BIGSERIAL");return"enum"===t.type||"simple-enum"===t.type?(n+=" "+this.buildEnumName(e,t),t.isArray&&(n+=" array")):t.isGenerated&&"uuid"!==t.type||(n+=" "+this.connection.driver.createFullType(t)),"STORED"===t.generatedType&&t.asExpression&&(n+=` GENERATED ALWAYS AS (${t.asExpression}) STORED`),t.charset&&(n+=' CHARACTER SET "'+t.charset+'"'),t.collation&&(n+=' COLLATE "'+t.collation+'"'),!0!==t.isNullable&&(n+=" NOT NULL"),void 0!==t.default&&null!==t.default&&(n+=" DEFAULT "+t.default),t.isGenerated&&"uuid"===t.generationStrategy&&!t.default&&(n+=` DEFAULT ${this.driver.uuidGenerator}`),n}async hasSupportForPartitionedTables(){return!!(await this.query("SELECT TRUE FROM information_schema.columns WHERE table_name = 'pg_class' and column_name = 'relispartition'")).length}async changeTableComment(e,t){const n=[],a=[],i=g.isTable(e)?e:await this.getCachedTable(e);t=this.escapeComment(t);const r=this.escapeComment(i.comment);if(t===r)return;const s=i.clone();n.push(new Jt(`COMMENT ON TABLE ${this.escapePath(s)} IS ${t}`)),a.push(new Jt(`COMMENT ON TABLE ${this.escapePath(i)} IS ${r}`)),await this.executeQueries(n,a),i.comment=s.comment,this.replaceCachedTable(i,s)}}class fn extends yn{constructor(e,t){super(e,t)}}class gn extends fn{constructor(e,t,n){super(e,n),this.client=t}connect(){return this.databaseConnection?Promise.resolve(this.databaseConnection):(this.databaseConnectionPromise||("slave"===this.mode&&this.driver.isReplicated?this.databaseConnectionPromise=this.driver.obtainSlaveConnection().then((([e,t])=>(this.driver.connectedQueryRunners.push(this),this.databaseConnection=e,this.releaseCallback=t,this.databaseConnection))):this.databaseConnectionPromise=this.driver.obtainMasterConnection().then((([e,t])=>(this.driver.connectedQueryRunners.push(this),this.databaseConnection=e,this.releaseCallback=t,this.databaseConnection)))),this.databaseConnectionPromise)}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}0===this.transactionDepth?(this.transactionDepth+=1,await this.client.startTransaction()):(this.transactionDepth+=1,await this.query(`SAVEPOINT typeorm_${this.transactionDepth} - 1`)),await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionCommit"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`RELEASE SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.client.commitTransaction(),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive)throw new y;await this.broadcaster.broadcast("BeforeTransactionRollback"),this.transactionDepth>1?(this.transactionDepth-=1,await this.query(`ROLLBACK TO SAVEPOINT typeorm_${this.transactionDepth}`)):(this.transactionDepth-=1,await this.client.rollbackTransaction(),this.isTransactionActive=!1),await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new W;const a=await this.client.query(e,t),i=new tn;return i.raw=a,a?.hasOwnProperty("records")&&Array.isArray(a.records)&&(i.records=a.records),a?.hasOwnProperty("numberOfRecordsUpdated")&&(i.affected=a.numberOfRecordsUpdated),n?i:i.raw}changeTableComment(e,t){throw new s("aurora-postgres driver does not support change comment.")}}class En extends ct{}class bn extends En{constructor(e){super(),this.transactionSupport="nested",this.connection=e,this.options=e.options,this.isReplicated=!1,this.loadDependencies(),this.client=new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions),this.database=re.buildDriverOptions(this.options).database}async connect(){}async disconnect(){}createQueryRunner(e){return new gn(this,new this.DataApiDriver(this.options.region,this.options.secretArn,this.options.resourceArn,this.options.database,((e,t)=>this.connection.logger.logQuery(e,t)),this.options.serviceConfigOptions,this.options.formatOptions),e)}preparePersistentValue(e,t){return this.options.formatOptions&&!1===this.options.formatOptions.castParameters?super.preparePersistentValue(e,t):(t.transformer&&(e=ue.transformTo(t.transformer,e)),this.client.preparePersistentValue(e,t))}prepareHydratedValue(e,t){return this.options.formatOptions&&!1===this.options.formatOptions.castParameters?super.prepareHydratedValue(e,t):(t.transformer&&(e=ue.transformFrom(t.transformer,e)),this.client.prepareHydratedValue(e,t))}loadDependencies(){const e=this.options.driver||i.load("typeorm-aurora-data-api-driver"),{pg:t}=e;this.DataApiDriver=t}executeQuery(e,t){return this.connection.query(t)}async afterConnect(){const e=await this.checkMetadataForExtensions();return e.hasExtensions&&await this.enableExtensions(e,this.connection),Promise.resolve()}}class Tn extends Zt{constructor(e){super(),this.driver=e,this.connection=e.connection,this.broadcaster=new en(this)}async beforeMigration(){await this.query("PRAGMA foreign_keys = OFF")}async afterMigration(){await this.query("PRAGMA foreign_keys = ON")}async executeSet(e){if(this.isReleased)throw new W;return(await this.connect()).executeSet(e,!1)}async query(e,t,n=!1){if(this.isReleased)throw new W;const a=await this.connect();this.driver.connection.logger.logQuery(e,t,this);const i=e.substring(0,-1!==e.indexOf(" ")?e.indexOf(" "):void 0);try{let r;r=-1!==["BEGIN","ROLLBACK","COMMIT","CREATE","ALTER","DROP"].indexOf(i)?await a.execute(e,!1):-1!==["INSERT","UPDATE","DELETE","PRAGMA"].indexOf(i)?await a.run(e,t,!1):await a.query(e,t||[]);const s=new tn;return r?.hasOwnProperty("values")&&(s.raw=r.values,s.records=r.values),r?.hasOwnProperty("changes")&&(s.affected=r.changes.changes,s.raw=r.changes.lastId||r.changes.changes),n?s:s.raw}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new k(e,t,n)}}parametrize(e){return Object.keys(e).map((e=>`"${e}"=?`))}}class wn extends zt{constructor(e){super(e),this.database=this.options.database,this.driver=this.options.driver,this.sqlite=this.options.driver}async connect(){this.databaseConnection=this.createDatabaseConnection(),await this.databaseConnection}async disconnect(){return this.queryRunner=void 0,(await this.databaseConnection).close().then((()=>{this.databaseConnection=void 0}))}createQueryRunner(e){return this.queryRunner||(this.queryRunner=new Tn(this)),this.queryRunner}async createDatabaseConnection(){const e=this.options.mode||"no-encryption",t="no-encryption"!==e,n=void 0===this.options.version?1:this.options.version,a=await this.sqlite.createConnection(this.options.database,t,e,n);return await a.open(),await a.run("PRAGMA foreign_keys = ON"),this.options.journalMode&&-1!==["DELETE","TRUNCATE","PERSIST","MEMORY","WAL","OFF"].indexOf(this.options.journalMode)&&await a.run(`PRAGMA journal_mode = ${this.options.journalMode}`),a}loadDependencies(){if(this.sqlite=this.driver,!this.driver)throw new $("Capacitor","@capacitor-community/sqlite")}}class Nn extends Xt{constructor(e,t){super(),this.driver=e,this.connection=e.connection,this.mode=t,this.broadcaster=new en(this)}async connect(){if(this.session)return Promise.resolve(this.session);const[e]=await this.driver.instanceDatabase.createSession({});return this.session=e,this.sessionTransaction=await e.transaction(),this.session}async release(){return this.isReleased=!0,this.session&&await this.session.delete(),this.session=void 0,Promise.resolve()}async startTransaction(e){this.isTransactionActive=!0;try{await this.broadcaster.broadcast("BeforeTransactionStart")}catch(e){throw this.isTransactionActive=!1,e}await this.connect(),await this.sessionTransaction.begin(),this.connection.logger.logQuery("START TRANSACTION"),await this.broadcaster.broadcast("AfterTransactionStart")}async commitTransaction(){if(!this.isTransactionActive||!this.sessionTransaction)throw new y;await this.broadcaster.broadcast("BeforeTransactionCommit"),await this.sessionTransaction.commit(),this.connection.logger.logQuery("COMMIT"),this.isTransactionActive=!1,await this.broadcaster.broadcast("AfterTransactionCommit")}async rollbackTransaction(){if(!this.isTransactionActive||!this.sessionTransaction)throw new y;await this.broadcaster.broadcast("BeforeTransactionRollback"),await this.sessionTransaction.rollback(),this.connection.logger.logQuery("ROLLBACK"),this.isTransactionActive=!1,await this.broadcaster.broadcast("AfterTransactionRollback")}async query(e,t,n=!1){if(this.isReleased)throw new W;const a=new Ae;try{const i=+new Date;let r;await this.connect();const s=e.startsWith("SELECT"),o=s&&!this.isTransactionActive?this.driver.instanceDatabase:this.sessionTransaction;this.isTransactionActive||s||await this.sessionTransaction.begin();try{this.driver.connection.logger.logQuery(e,t,this),this.broadcaster.broadcastBeforeQueryEvent(a,e,t),r=await o.run({sql:e,params:t?t.reduce(((e,t,n)=>(e["param"+n]=t,e)),{}):void 0,json:!0}),this.isTransactionActive||s||await this.sessionTransaction.commit()}catch(e){try{this.isTransactionActive||s||await this.sessionTransaction.rollback()}catch(e){}throw e}const c=this.driver.options.maxQueryExecutionTime,h=+new Date-i;this.broadcaster.broadcastAfterQueryEvent(a,e,t,!0,h,r,void 0),c&&h>c&&this.driver.connection.logger.logQuerySlow(h,e,t,this);const l=new tn;return l.raw=r,l.records=r?r[0]:[],r&&r[1]&&r[1].rowCountExact&&(l.affected=parseInt(r[1].rowCountExact)),n?l:l.records}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),this.broadcaster.broadcastAfterQueryEvent(a,e,t,!1,void 0,void 0,n),new k(e,t,n)}finally{await a.wait()}}async updateDDL(e,t){if(this.isReleased)throw new W;this.driver.connection.logger.logQuery(e,t,this);try{const n=+new Date,[a]=await this.driver.instanceDatabase.updateSchema(e);await a.promise();const i=this.driver.options.maxQueryExecutionTime,r=+new Date-n;i&&r>i&&this.driver.connection.logger.logQuerySlow(r,e,t,this)}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new k(e,t,n)}}async stream(e,t,n,a){if(this.isReleased)throw new W;try{this.driver.connection.logger.logQuery(e,t,this);const i={sql:e,params:t?t.reduce(((e,t,n)=>(e["param"+n]=t,e)),{}):void 0,json:!0},r=this.driver.instanceDatabase.runStream(i);return n&&r.on("end",n),a&&r.on("error",a),r}catch(n){throw this.driver.connection.logger.logQueryError(n,e,t,this),new k(e,t,n)}}async getDatabases(){return Promise.resolve([])}async getSchemas(e){return Promise.resolve([])}async hasDatabase(e){throw new s("Check database queries are not supported by Spanner driver.")}async getCurrentDatabase(){throw new s("Check database queries are not supported by Spanner driver.")}async hasSchema(e){return!!(await this.query(`SELECT * FROM "information_schema"."schemata" WHERE "schema_name" = '${e}'`)).length}async getCurrentSchema(){throw new s("Check schema queries are not supported by Spanner driver.")}async hasTable(e){const t=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`TABLES\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_TYPE\` = 'BASE TABLE' AND \`TABLE_NAME\` = '${e instanceof Xe?e.name:e}'`;return!!(await this.query(t)).length}async hasColumn(e,t){const n=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_NAME\` = '${e instanceof Xe?e.name:e}' AND \`COLUMN_NAME\` = '${t}'`;return!!(await this.query(n)).length}async createDatabase(e,t){if(t&&await this.hasDatabase(e))return Promise.resolve();const n=`CREATE DATABASE "${e}"`,a=`DROP DATABASE "${e}"`;await this.executeQueries(new Jt(n),new Jt(a))}async dropDatabase(e,t){const n=t?`DROP DATABASE IF EXISTS "${e}"`:`DROP DATABASE "${e}"`,a=`CREATE DATABASE "${e}"`;await this.executeQueries(new Jt(n),new Jt(a))}async createSchema(e,t){return Promise.resolve()}async dropSchema(e,t,n){return Promise.resolve()}async createTable(e,t=!1,n=!0,a=!0){if(t&&await this.hasTable(e))return Promise.resolve();const i=[],r=[];i.push(this.createTableSql(e,n)),r.push(this.dropTableSql(e)),n&&e.foreignKeys.forEach((t=>r.push(this.dropForeignKeySql(e,t)))),a&&e.indices.forEach((t=>{t.name||(t.name=this.connection.namingStrategy.indexName(e,t.columnNames,t.where)),i.push(this.createIndexSql(e,t)),r.push(this.dropIndexSql(e,t))}));const s=e.columns.filter((e=>e.generatedType&&e.asExpression));for(const t of s){const n=this.insertTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:t.name,value:t.asExpression}),a=this.deleteTypeormMetadataSql({table:e.name,type:Mt.GENERATED_COLUMN,name:t.name});i.push(n),r.push(a)}await this.executeQueries(i,r)}async dropTable(e,t,n=!0,a=!0){if(t&&!await this.hasTable(e))return Promise.resolve();const i=n,r=this.getTablePath(e),s=await this.getCachedTable(r),o=[],c=[];a&&s.indices.forEach((e=>{o.push(this.dropIndexSql(s,e)),c.push(this.createIndexSql(s,e))})),n&&s.foreignKeys.forEach((e=>o.push(this.dropForeignKeySql(s,e)))),o.push(this.dropTableSql(s)),c.push(this.createTableSql(s,i));const h=s.columns.filter((e=>e.generatedType&&e.asExpression));for(const e of h){const t=this.deleteTypeormMetadataSql({table:s.name,type:Mt.GENERATED_COLUMN,name:e.name}),n=this.insertTypeormMetadataSql({table:s.name,type:Mt.GENERATED_COLUMN,name:e.name,value:e.asExpression});o.push(t),c.push(n)}await this.executeQueries(o,c)}async createView(e){const t=[],n=[];t.push(this.createViewSql(e)),t.push(await this.insertViewDefinitionSql(e)),n.push(this.dropViewSql(e)),n.push(await this.deleteViewDefinitionSql(e)),await this.executeQueries(t,n)}async dropView(e){const t=e instanceof Kt?e.name:e,n=await this.getCachedView(t),a=[],i=[];a.push(await this.deleteViewDefinitionSql(n)),a.push(this.dropViewSql(n)),i.push(await this.insertViewDefinitionSql(n)),i.push(this.createViewSql(n)),await this.executeQueries(a,i)}async renameTable(e,t){throw new s("Rename table queries are not supported by Spanner driver.")}async addColumn(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e),a=n.clone(),i=[],r=[];i.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(t)}`)),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN ${this.driver.escape(t.name)}`));const s=a.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===t.name));if(s)i.push(this.createIndexSql(n,s)),r.push(this.dropIndexSql(n,s));else if(t.isUnique){const e=new Ke({name:this.connection.namingStrategy.indexName(n,[t.name]),columnNames:[t.name],isUnique:!0});a.indices.push(e),a.uniques.push(new ze({name:e.name,columnNames:e.columnNames})),i.push(this.createIndexSql(n,e)),r.push(this.dropIndexSql(n,e))}if(t.generatedType&&t.asExpression){const e=this.insertTypeormMetadataSql({table:n.name,type:Mt.GENERATED_COLUMN,name:t.name,value:t.asExpression}),a=this.deleteTypeormMetadataSql({table:n.name,type:Mt.GENERATED_COLUMN,name:t.name});i.push(e),r.push(a)}await this.executeQueries(i,r),a.addColumn(t),this.replaceCachedTable(n,a)}async addColumns(e,t){for(const n of t)await this.addColumn(e,n)}async renameColumn(e,t,n){const a=e instanceof Xe?e:await this.getCachedTable(e),i=t instanceof We?t:a.columns.find((e=>e.name===t));if(!i)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);let r;return n instanceof We?r=n:(r=i.clone(),r.name=n),this.changeColumn(a,i,r)}async changeColumn(e,t,n){const a=e instanceof Xe?e:await this.getCachedTable(e);let i=a.clone();const r=[],o=[],c=t instanceof We?t:a.columns.find((e=>e.name===t));if(!c)throw new s(`Column "${t}" was not found in the "${a.name}" table.`);if(c.name!==n.name||c.type!==n.type||c.length!==n.length||c.isArray!==n.isArray||c.generatedType!==n.generatedType||c.asExpression!==n.asExpression)await this.dropColumn(a,c),await this.addColumn(a,n),i=a.clone();else if(n.precision===c.precision&&n.scale===c.scale||(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(n)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${n.name}" TYPE ${this.driver.createFullType(c)}`))),c.isNullable!==n.isNullable&&(n.isNullable?(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" DROP NOT NULL`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" SET NOT NULL`))):(r.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" SET NOT NULL`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(a)} ALTER COLUMN "${c.name}" DROP NOT NULL`)))),n.isUnique!==c.isUnique)if(!0===n.isUnique){const e=new Ke({name:this.connection.namingStrategy.indexName(a,[n.name]),columnNames:[n.name],isUnique:!0});i.indices.push(e),i.uniques.push(new ze({name:e.name,columnNames:e.columnNames})),r.push(this.createIndexSql(a,e)),o.push(this.dropIndexSql(a,e))}else{const e=i.indices.find((e=>1===e.columnNames.length&&!0===e.isUnique&&!!e.columnNames.find((e=>e===n.name))));i.indices.splice(i.indices.indexOf(e),1);const t=i.uniques.find((t=>t.name===e.name));i.uniques.splice(i.uniques.indexOf(t),1),r.push(this.dropIndexSql(a,e)),o.push(this.createIndexSql(a,e))}await this.executeQueries(r,o),this.replaceCachedTable(a,i)}async changeColumns(e,t){for(const{oldColumn:n,newColumn:a}of t)await this.changeColumn(e,n,a)}async dropColumn(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e),a=t instanceof We?t:n.findColumnByName(t);if(!a)throw new s(`Column "${t}" was not found in table "${n.name}"`);const i=n.clone(),r=[],o=[],c=i.indices.find((e=>1===e.columnNames.length&&e.columnNames[0]===a.name));c&&(i.indices.splice(i.indices.indexOf(c),1),r.push(this.dropIndexSql(n,c)),o.push(this.createIndexSql(n,c)));const h=i.checks.find((e=>!!e.columnNames&&1===e.columnNames.length&&e.columnNames[0]===a.name));if(h&&(i.checks.splice(i.checks.indexOf(h),1),r.push(this.dropCheckConstraintSql(n,h)),o.push(this.createCheckConstraintSql(n,h))),r.push(new Jt(`ALTER TABLE ${this.escapePath(n)} DROP COLUMN ${this.driver.escape(a.name)}`)),o.push(new Jt(`ALTER TABLE ${this.escapePath(n)} ADD ${this.buildCreateColumnSql(a)}`)),a.generatedType&&a.asExpression){const e=this.deleteTypeormMetadataSql({table:n.name,type:Mt.GENERATED_COLUMN,name:a.name}),t=this.insertTypeormMetadataSql({table:n.name,type:Mt.GENERATED_COLUMN,name:a.name,value:a.asExpression});r.push(e),o.push(t)}await this.executeQueries(r,o),i.removeColumn(a),this.replaceCachedTable(n,i)}async dropColumns(e,t){for(const n of t)await this.dropColumn(e,n)}async createPrimaryKey(e,t){throw new Error("The keys of a table can't change; you can't add a key column to an existing table or remove a key column from an existing table.")}async updatePrimaryKeys(e,t){throw new Error("The keys of a table can't change; you can't add a key column to an existing table or remove a key column from an existing table.")}async dropPrimaryKey(e){throw new Error("The keys of a table can't change; you can't add a key column to an existing table or remove a key column from an existing table.")}async createUniqueConstraint(e,t){throw new s("Spanner does not support unique constraints. Use unique index instead.")}async createUniqueConstraints(e,t){throw new s("Spanner does not support unique constraints. Use unique index instead.")}async dropUniqueConstraint(e,t){throw new s("Spanner does not support unique constraints. Use unique index instead.")}async dropUniqueConstraints(e,t){throw new s("Spanner does not support unique constraints. Use unique index instead.")}async createCheckConstraint(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.checkConstraintName(n,t.expression));const a=this.createCheckConstraintSql(n,t),i=this.dropCheckConstraintSql(n,t);await this.executeQueries(a,i),n.addCheckConstraint(t)}async createCheckConstraints(e,t){const n=t.map((t=>this.createCheckConstraint(e,t)));await Promise.all(n)}async dropCheckConstraint(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e),a=t instanceof Je?t:n.checks.find((e=>e.name===t));if(!a)throw new s(`Supplied check constraint was not found in table ${n.name}`);const i=this.dropCheckConstraintSql(n,a),r=this.createCheckConstraintSql(n,a);await this.executeQueries(i,r),n.removeCheckConstraint(a)}async dropCheckConstraints(e,t){const n=t.map((t=>this.dropCheckConstraint(e,t)));await Promise.all(n)}async createExclusionConstraint(e,t){throw new s("Spanner does not support exclusion constraints.")}async createExclusionConstraints(e,t){throw new s("Spanner does not support exclusion constraints.")}async dropExclusionConstraint(e,t){throw new s("Spanner does not support exclusion constraints.")}async dropExclusionConstraints(e,t){throw new s("Spanner does not support exclusion constraints.")}async createForeignKey(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e);t.name||(t.name=this.connection.namingStrategy.foreignKeyName(n,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=this.createForeignKeySql(n,t),i=this.dropForeignKeySql(n,t);await this.executeQueries(a,i),n.addForeignKey(t)}async createForeignKeys(e,t){for(const n of t)await this.createForeignKey(e,n)}async dropForeignKey(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e),a=t instanceof He?t:n.foreignKeys.find((e=>e.name===t));if(!a)throw new s(`Supplied foreign key was not found in table ${n.name}`);const i=this.dropForeignKeySql(n,a),r=this.createForeignKeySql(n,a);await this.executeQueries(i,r),n.removeForeignKey(a)}async dropForeignKeys(e,t){for(const n of t)await this.dropForeignKey(e,n)}async createIndex(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e);t.name||(t.name=this.generateIndexName(n,t));const a=this.createIndexSql(n,t),i=this.dropIndexSql(n,t);await this.executeQueries(a,i),n.addIndex(t)}async createIndices(e,t){for(const n of t)await this.createIndex(e,n)}async dropIndex(e,t){const n=e instanceof Xe?e:await this.getCachedTable(e),a=t instanceof Ke?t:n.indices.find((e=>e.name===t));if(!a)throw new s(`Supplied index ${t} was not found in table ${n.name}`);a.name||(a.name=this.generateIndexName(n,a));const i=this.dropIndexSql(n,a),r=this.createIndexSql(n,a);await this.executeQueries(i,r),n.removeIndex(a)}async dropIndices(e,t){for(const n of t)await this.dropIndex(e,n)}async clearTable(e){await this.query(`DELETE FROM ${this.escapePath(e)} WHERE true`)}async clearDatabase(){const e=await this.query("SELECT concat('DROP INDEX `', INDEX_NAME, '`') AS `query` FROM `INFORMATION_SCHEMA`.`INDEXES` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `INDEX_TYPE` = 'INDEX' AND `SPANNER_IS_MANAGED` = false"),t=await this.query("SELECT concat('ALTER TABLE `', TABLE_NAME, '`', ' DROP CONSTRAINT `', CONSTRAINT_NAME, '`') AS `query` FROM `INFORMATION_SCHEMA`.`TABLE_CONSTRAINTS` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `CONSTRAINT_TYPE` = 'FOREIGN KEY'"),n=await this.query("SELECT concat('DROP TABLE `', TABLE_NAME, '`') AS `query` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `TABLE_TYPE` = 'BASE TABLE'");if(!e.length&&!t.length&&!n.length)return;const a=this.isTransactionActive;a||await this.startTransaction();try{for(let t of e)await this.updateDDL(t.query);for(let e of t)await this.updateDDL(e.query);for(let e of n)await this.updateDDL(e.query);await this.commitTransaction()}catch(e){try{a||await this.rollbackTransaction()}catch(e){}throw e}}async executeMemoryUpSql(){for(const{query:e,parameters:t}of this.sqlInMemory.upQueries)this.isDMLQuery(e)?await this.query(e,t):await this.updateDDL(e,t)}async executeMemoryDownSql(){for(const{query:e,parameters:t}of this.sqlInMemory.downQueries.reverse())this.isDMLQuery(e)?await this.query(e,t):await this.updateDDL(e,t)}async loadViews(e){return Promise.resolve([])}async loadTables(e){if(e&&0===e.length)return[];const t=[];if(e&&e.length){const n=`SELECT \`TABLE_NAME\` FROM \`INFORMATION_SCHEMA\`.\`TABLES\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_TYPE\` = 'BASE TABLE' AND \`TABLE_NAME\` IN (${e.map((e=>`'${e}'`)).join(", ")})`;t.push(...await this.query(n))}else{const e="SELECT `TABLE_NAME` FROM `INFORMATION_SCHEMA`.`TABLES` WHERE `TABLE_CATALOG` = '' AND `TABLE_SCHEMA` = '' AND `TABLE_TYPE` = 'BASE TABLE'";t.push(...await this.query(e))}if(!t.length)return[];const n=t.map((e=>`'${e.TABLE_NAME}'`)).join(", "),a=`SELECT * FROM \`INFORMATION_SCHEMA\`.\`COLUMNS\` WHERE \`TABLE_CATALOG\` = '' AND \`TABLE_SCHEMA\` = '' AND \`TABLE_NAME\` IN (${n})`,i=`SELECT \`KCU\`.\`TABLE_NAME\`, \`KCU\`.\`COLUMN_NAME\` FROM \`INFORMATION_SCHEMA\`.\`TABLE_CONSTRAINTS\` \`TC\` INNER JOIN \`INFORMATION_SCHEMA\`.\`KEY_COLUMN_USAGE\` \`KCU\` ON \`KCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` WHERE \`TC\`.\`TABLE_CATALOG\` = '' AND \`TC\`.\`TABLE_SCHEMA\` = '' AND \`TC\`.\`CONSTRAINT_TYPE\` = 'PRIMARY KEY' AND \`TC\`.\`TABLE_NAME\` IN (${n})`,r=`SELECT \`I\`.\`TABLE_NAME\`, \`I\`.\`INDEX_NAME\`, \`I\`.\`IS_UNIQUE\`, \`I\`.\`IS_NULL_FILTERED\`, \`IC\`.\`COLUMN_NAME\` FROM \`INFORMATION_SCHEMA\`.\`INDEXES\` \`I\` INNER JOIN \`INFORMATION_SCHEMA\`.\`INDEX_COLUMNS\` \`IC\` ON \`IC\`.\`INDEX_NAME\` = \`I\`.\`INDEX_NAME\` AND \`IC\`.\`TABLE_NAME\` = \`I\`.\`TABLE_NAME\` WHERE \`I\`.\`TABLE_CATALOG\` = '' AND \`I\`.\`TABLE_SCHEMA\` = '' AND \`I\`.\`TABLE_NAME\` IN (${n}) AND \`I\`.\`INDEX_TYPE\` = 'INDEX' AND \`I\`.\`SPANNER_IS_MANAGED\` = false`,s=`SELECT \`TC\`.\`TABLE_NAME\`, \`TC\`.\`CONSTRAINT_NAME\`, \`CC\`.\`CHECK_CLAUSE\`, \`CCU\`.\`COLUMN_NAME\`FROM \`INFORMATION_SCHEMA\`.\`TABLE_CONSTRAINTS\` \`TC\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CONSTRAINT_COLUMN_USAGE\` \`CCU\` ON \`CCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CHECK_CONSTRAINTS\` \`CC\` ON \`CC\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` WHERE \`TC\`.\`TABLE_CATALOG\` = '' AND \`TC\`.\`TABLE_SCHEMA\` = '' AND \`TC\`.\`CONSTRAINT_TYPE\` = 'CHECK' AND \`TC\`.\`TABLE_NAME\` IN (${n}) AND \`TC\`.\`CONSTRAINT_NAME\` NOT LIKE 'CK_IS_NOT_NULL%'`,o=`SELECT \`TC\`.\`TABLE_NAME\`, \`TC\`.\`CONSTRAINT_NAME\`, \`KCU\`.\`COLUMN_NAME\`, \`CTU\`.\`TABLE_NAME\` AS \`REFERENCED_TABLE_NAME\`, \`CCU\`.\`COLUMN_NAME\` AS \`REFERENCED_COLUMN_NAME\`, \`RC\`.\`UPDATE_RULE\`, \`RC\`.\`DELETE_RULE\` FROM \`INFORMATION_SCHEMA\`.\`TABLE_CONSTRAINTS\` \`TC\` INNER JOIN \`INFORMATION_SCHEMA\`.\`KEY_COLUMN_USAGE\` \`KCU\` ON \`KCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CONSTRAINT_TABLE_USAGE\` \`CTU\` ON \`CTU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`REFERENTIAL_CONSTRAINTS\` \`RC\` ON \`RC\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` INNER JOIN \`INFORMATION_SCHEMA\`.\`CONSTRAINT_COLUMN_USAGE\` \`CCU\` ON \`CCU\`.\`CONSTRAINT_NAME\` = \`TC\`.\`CONSTRAINT_NAME\` WHERE \`TC\`.\`TABLE_CATALOG\` = '' AND \`TC\`.\`TABLE_SCHEMA\` = '' AND \`TC\`.\`CONSTRAINT_TYPE\` = 'FOREIGN KEY' AND \`TC\`.\`TABLE_NAME\` IN (${n})`,[c,h,l,u,p]=await Promise.all([this.query(a),this.query(i),this.query(r),this.query(s),this.query(o)]);return Promise.all(t.map((async e=>{const t=new Xe;t.name=this.driver.buildTableName(e.TABLE_NAME),t.columns=await Promise.all(c.filter((t=>t.TABLE_NAME===e.TABLE_NAME)).map((async n=>{const a=l.filter((t=>t.TABLE_NAME===e.TABLE_NAME&&t.COLUMN_NAME===n.COLUMN_NAME&&!0===t.IS_UNIQUE)),i=this.connection.entityMetadatas.find((e=>this.getTablePath(t)===this.getTablePath(e))),r=a.length>0&&i&&i.indices.some((e=>a.some((t=>e.name===t.INDEX_NAME&&!1===e.synchronize)))),s=a.every((e=>l.some((t=>t.INDEX_NAME===e.INDEX_NAME&&t.COLUMN_NAME!==n.COLUMN_NAME)))),o=new We;o.name=n.COLUMN_NAME;let c=n.SPANNER_TYPE.toLowerCase();if(-1!==c.indexOf("array")&&(o.isArray=!0,c=c.substring(c.indexOf("<")+1,c.indexOf(">"))),-1!==c.indexOf("(")?o.type=c.substring(0,c.indexOf("(")):o.type=c,-1!==this.driver.withLengthColumnTypes.indexOf(o.type)&&(o.length=c.substring(c.indexOf("(")+1,c.indexOf(")"))),"ALWAYS"===n.IS_GENERATED){o.asExpression=n.GENERATION_EXPRESSION,o.generatedType="STORED";const t=this.selectTypeormMetadataSql({table:e.TABLE_NAME,type:Mt.GENERATED_COLUMN,name:o.name}),a=await this.query(t.query,t.parameters);a[0]&&a[0].value?o.asExpression=a[0].value:o.asExpression=""}return o.isUnique=a.length>0&&!r&&!s,o.isNullable="YES"===n.IS_NULLABLE,o.isPrimary=h.some((e=>e.TABLE_NAME===n.TABLE_NAME&&e.COLUMN_NAME===n.COLUMN_NAME)),o})));const n=p.filter((t=>t.TABLE_NAME===e.TABLE_NAME));t.foreignKeys=xe.uniq(n,(e=>e.CONSTRAINT_NAME)).map((e=>{const t=n.filter((t=>t.CONSTRAINT_NAME===e.CONSTRAINT_NAME));return new He({name:e.CONSTRAINT_NAME,columnNames:xe.uniq(t.map((e=>e.COLUMN_NAME))),referencedDatabase:e.REFERENCED_TABLE_SCHEMA,referencedTableName:e.REFERENCED_TABLE_NAME,referencedColumnNames:xe.uniq(t.map((e=>e.REFERENCED_COLUMN_NAME))),onDelete:e.DELETE_RULE,onUpdate:e.UPDATE_RULE})}));const a=l.filter((t=>t.TABLE_NAME===e.TABLE_NAME));t.indices=xe.uniq(a,(e=>e.INDEX_NAME)).map((e=>{const n=a.filter((t=>t.INDEX_NAME===e.INDEX_NAME));return new Ke({table:t,name:e.INDEX_NAME,columnNames:n.map((e=>e.COLUMN_NAME)),isUnique:e.IS_UNIQUE,isNullFiltered:e.IS_NULL_FILTERED})}));const i=u.filter((t=>t.TABLE_NAME===e.TABLE_NAME));return t.checks=xe.uniq(i,(e=>e.CONSTRAINT_NAME)).map((e=>{const t=i.filter((t=>t.CONSTRAINT_NAME===e.CONSTRAINT_NAME));return new Je({name:e.CONSTRAINT_NAME,columnNames:t.map((e=>e.COLUMN_NAME)),expression:e.CHECK_CLAUSE})})),t})))}createTableSql(e,t){const n=e.columns.map((e=>this.buildCreateColumnSql(e))).join(", ");let a=`CREATE TABLE ${this.escapePath(e)} (${n}`;e.columns.filter((e=>e.isUnique)).forEach((t=>{const n=e.indices.some((e=>1===e.columnNames.length&&!!e.isUnique&&-1!==e.columnNames.indexOf(t.name))),a=e.uniques.some((e=>1===e.columnNames.length&&-1!==e.columnNames.indexOf(t.name)));n||a||e.indices.push(new Ke({name:this.connection.namingStrategy.uniqueConstraintName(e,[t.name]),columnNames:[t.name],isUnique:!0}))})),e.uniques.length>0&&e.uniques.forEach((t=>{e.indices.some((e=>e.name===t.name))||e.indices.push(new Ke({name:t.name,columnNames:t.columnNames,isUnique:!0}))})),e.checks.length>0&&(a+=`, ${e.checks.map((t=>`CONSTRAINT \`${t.name?t.name:this.connection.namingStrategy.checkConstraintName(e,t.expression)}\` CHECK (${t.expression})`)).join(", ")}`),e.foreignKeys.length>0&&t&&(a+=`, ${e.foreignKeys.map((t=>{const n=t.columnNames.map((e=>`\`${e}\``)).join(", ");t.name||(t.name=this.connection.namingStrategy.foreignKeyName(e,t.columnNames,this.getTablePath(t),t.referencedColumnNames));const a=t.referencedColumnNames.map((e=>`\`${e}\``)).join(", ");return`CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`})).join(", ")}`),a+=")";const i=e.columns.filter((e=>e.isPrimary));return i.length>0&&(a+=` PRIMARY KEY (${i.map((e=>this.driver.escape(e.name))).join(", ")})`),new Jt(a)}dropTableSql(e){return new Jt(`DROP TABLE ${this.escapePath(e)}`)}createViewSql(e){const t=e.materialized?"MATERIALIZED ":"",n=this.escapePath(e),a="string"==typeof e.expression?e.expression:e.expression(this.connection).getQuery();return new Jt(`CREATE ${t}VIEW ${n} SQL SECURITY INVOKER AS ${a}`)}async insertViewDefinitionSql(e){let{schema:t,tableName:n}=this.driver.parseTableName(e);const a=e.materialized?Mt.MATERIALIZED_VIEW:Mt.VIEW,i="string"==typeof e.expression?e.expression.trim():e.expression(this.connection).getQuery();return this.insertTypeormMetadataSql({type:a,schema:t,name:n,value:i})}dropViewSql(e){const t=e.materialized?"MATERIALIZED ":"";return new Jt(`DROP ${t}VIEW ${this.escapePath(e)}`)}async deleteViewDefinitionSql(e){let{schema:t,tableName:n}=this.driver.parseTableName(e);const a=e.materialized?Mt.MATERIALIZED_VIEW:Mt.VIEW;return this.deleteTypeormMetadataSql({type:a,schema:t,name:n})}createIndexSql(e,t){const n=t.columnNames.map((e=>this.driver.escape(e))).join(", ");let a="";return t.isUnique&&(a+="UNIQUE "),t.isNullFiltered&&(a+="NULL_FILTERED "),new Jt(`CREATE ${a}INDEX \`${t.name}\` ON ${this.escapePath(e)} (${n})`)}dropIndexSql(e,t){let n=t instanceof Ke?t.name:t;return new Jt(`DROP INDEX \`${n}\``)}createCheckConstraintSql(e,t){return new Jt(`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT \`${t.name}\` CHECK (${t.expression})`)}dropCheckConstraintSql(e,t){const n=t instanceof Je?t.name:t;return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT \`${n}\``)}createForeignKeySql(e,t){const n=t.columnNames.map((e=>this.driver.escape(e))).join(", "),a=t.referencedColumnNames.map((e=>this.driver.escape(e))).join(",");let i=`ALTER TABLE ${this.escapePath(e)} ADD CONSTRAINT \`${t.name}\` FOREIGN KEY (${n}) REFERENCES ${this.escapePath(this.getTablePath(t))} (${a})`;return new Jt(i)}dropForeignKeySql(e,t){const n=t instanceof He?t.name:t;return new Jt(`ALTER TABLE ${this.escapePath(e)} DROP CONSTRAINT \`${n}\``)}escapePath(e){const{tableName:t}=this.driver.parseTableName(e);return`\`${t}\``}buildCreateColumnSql(e){let t=`${this.driver.escape(e.name)} ${this.connection.driver.createFullType(e)}`;return"STORED"===e.generatedType&&e.asExpression?t+=` AS (${e.asExpression}) STORED`:e.isNullable||(t+=" NOT NULL"),t}async executeQueries(e,t){if(e instanceof Jt&&(e=[e]),t instanceof Jt&&(t=[t]),this.sqlInMemory.upQueries.push(...e),this.sqlInMemory.downQueries.push(...t),!0===this.sqlMemoryMode)return Promise.resolve();for(const{query:t,parameters:n}of e)this.isDMLQuery(t)?await this.query(t,n):await this.updateDDL(t,n)}isDMLQuery(e){return e.startsWith("INSERT")||e.startsWith("UPDATE")||e.startsWith("DELETE")}changeTableComment(e,t){throw new s("spanner driver does not support change table comment.")}}class An{constructor(e){this.isReplicated=!1,this.treeSupport=!0,this.transactionSupport="none",this.supportedDataTypes=["bool","int64","float64","numeric","string","json","bytes","date","timestamp","array"],this.supportedUpsertTypes=[],this.spatialTypes=[],this.withLengthColumnTypes=["string","bytes"],this.withWidthColumnTypes=[],this.withPrecisionColumnTypes=[],this.withScaleColumnTypes=[],this.mappedDataTypes={createDate:"timestamp",createDateDefault:"",updateDate:"timestamp",updateDateDefault:"",deleteDate:"timestamp",deleteDateNullable:!0,version:"int64",treeLevel:"int64",migrationId:"int64",migrationName:"string",migrationTimestamp:"int64",cacheId:"string",cacheIdentifier:"string",cacheTime:"int64",cacheDuration:"int64",cacheQuery:"string",cacheResult:"string",metadataType:"string",metadataDatabase:"string",metadataSchema:"string",metadataTable:"string",metadataName:"string",metadataValue:"string"},this.parametersPrefix="@param",this.dataTypeDefaults={},this.maxAliasLength=63,this.cteCapabilities={enabled:!0},this._isReturningSqlSupported={delete:!1,insert:!1,update:!1},this.connection=e,this.options=e.options,this.isReplicated=!!this.options.replication,this.loadDependencies()}async connect(){this.instance=this.spanner.instance(this.options.instanceId),this.instanceDatabase=this.instance.database(this.options.databaseId)}afterConnect(){return Promise.resolve()}async disconnect(){this.instanceDatabase.close()}createSchemaBuilder(){return new Gt(this.connection)}createQueryRunner(e){return new Nn(this,e)}escapeQueryWithParameters(e,t,n){const a=Object.keys(n).map((e=>n[e]));if(!t||!Object.keys(t).length)return[e,a];const i=new Map;return[e=(e=e.replace(/:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,r)=>{if(!t.hasOwnProperty(r))return e;if(i.has(r))return this.parametersPrefix+i.get(r);let s=t[r];return null===s?e:n?s.map((e=>(a.push(e),this.createParameter(r,a.length-1)))).join(", "):s instanceof Function?s():(a.push(s),i.set(r,a.length-1),this.createParameter(r,a.length-1))}))).replace(/([ ]+)?=([ ]+)?:(\.\.\.)?([A-Za-z0-9_.]+)/g,((e,n,a,i,r)=>t.hasOwnProperty(r)&&null===t[r]?" IS NULL":e)),a]}escape(e){return`\`${e}\``}buildTableName(e,t,n){let a=[e];return n&&a.unshift(n),a.join(".")}parseTableName(e){const t=this.database,n=void 0;if(e instanceof Xe||e instanceof Kt){const a=this.parseTableName(e.name);return{database:e.database||a.database||t,schema:e.schema||a.schema||n,tableName:a.tableName}}if(e instanceof He){const a=this.parseTableName(e.referencedTableName);return{database:e.referencedDatabase||a.database||t,schema:e.referencedSchema||a.schema||n,tableName:a.tableName}}if(e instanceof $t)return{database:e.database||t,schema:e.schema||n,tableName:e.tableName};const a=e.split(".");return{database:(a.length>1?a[0]:void 0)||t,schema:n,tableName:a.length>1?a[1]:a[0]}}preparePersistentValue(e,t){return t.transformer&&(e=ue.transformTo(t.transformer,e)),null==e?e:"numeric"===t.type?(this.options.driver||i.load("spanner")).Spanner.numeric(e):"date"===t.type?St.mixedDateToDateString(e):"json"===t.type?e:"timestamp"===t.type||t.type===Date?St.mixedDateToDate(e):e}prepareHydratedValue(e,t){return null==e?t.transformer?ue.transformFrom(t.transformer,e):e:(t.type===Boolean||"bool"===t.type?e=!!e:"timestamp"===t.type||t.type===Date?e=new Date(e):"numeric"===t.type?e=e.value:"date"===t.type?e=St.mixedDateToDateString(e):"json"===t.type?e="string"==typeof e?JSON.parse(e):e:t.type===Number&&(e=isNaN(+e)?e:parseInt(e)),t.transformer&&(e=ue.transformFrom(t.transformer,e)),e)}normalizeType(e){return e.type===Number?"int64":e.type===String||"uuid"===e.type?"string":e.type===Date?"timestamp":e.type===Buffer?"bytes":e.type===Boolean?"bool":e.type||""}normalizeDefault(e){return""===e.default?`"${e.default}"`:`${e.default}`}normalizeIsUnique(e){return e.entityMetadata.indices.some((t=>t.isUnique&&1===t.columns.length&&t.columns[0]===e))}getColumnLength(e){if(e.length)return e.length.toString();if("uuid"===e.generationStrategy)return"36";switch(e.type){case String:case"string":case"bytes":return"max";default:return""}}createFullType(e){let t=e.type;return this.getColumnLength(e)?t+=`(${this.getColumnLength(e)})`:e.width?t+=`(${e.width})`:null!==e.precision&&void 0!==e.precision&&null!==e.scale&&void 0!==e.scale?t+=`(${e.precision},${e.scale})`:null!==e.precision&&void 0!==e.precision&&(t+=`(${e.precision})`),e.isArray&&(t=`array<${t}>`),t}obtainMasterConnection(){return this.instanceDatabase}obtainSlaveConnection(){return this.instanceDatabase}createGeneratedMap(e,t,n){if(!t)return;if(void 0===t.insertId)return Object.keys(t).reduce(((n,a)=>{const i=e.findColumnWithDatabaseName(a);return i&&xe.mergeDeep(n,i.createValueMap(t[a])),n}),{});const a=e.generatedColumns.reduce(((e,a)=>{let i;return"increment"===a.generationStrategy&&t.insertId&&(i=t.insertId+n),xe.mergeDeep(e,a.createValueMap(i))}),{});return Object.keys(a).length>0?a:void 0}findChangedColumns(e,t){return t.filter((t=>{const n=e.find((e=>e.name===t.databaseName));return!!n&&(n.name!==t.databaseName||n.type!==this.normalizeType(t)||n.length!==this.getColumnLength(t)||n.asExpression!==t.asExpression||n.generatedType!==t.generatedType||n.isPrimary!==t.isPrimary||!this.compareNullableValues(t,n)||n.isUnique!==this.normalizeIsUnique(t))}))}isReturningSqlSupported(e){return this._isReturningSqlSupported[e]}isUUIDGenerationSupported(){return!1}isFullTextColumnTypeSupported(){return!1}createParameter(e,t){return this.parametersPrefix+t}loadDependencies(){try{const e=this.options.driver||i.load("spanner");this.spanner=new e.Spanner({projectId:this.options.projectId})}catch(e){throw console.error(e),new $("Spanner","@google-cloud/spanner")}}compareNullableValues(e,t){return!!e.generatedType||e.isNullable===t.isNullable}compareDefaultValues(e,t){return"string"==typeof e&&"string"==typeof t&&(e=e.replace(/^'+|'+$/g,""),t=t.replace(/^'+|'+$/g,"")),e===t}normalizeDatetimeFunction(e){if(!e)return e;if(-1!==e.toUpperCase().indexOf("CURRENT_TIMESTAMP")||-1!==e.toUpperCase().indexOf("NOW")){const t=e.match(/\(\d+\)/);return t?`CURRENT_TIMESTAMP${t[0]}`:"CURRENT_TIMESTAMP"}return e}escapeComment(e){return e?e=e.replace(/\u0000/g,""):e}}class Cn{create(e){const{type:t}=e.options;switch(t){case"mysql":case"mariadb":return new pt(e);case"postgres":return new ct(e);case"cockroachdb":return new ht(e);case"sap":return new ut(e);case"sqlite":return new mt(e);case"better-sqlite3":return new yt(e);case"cordova":return new an(e);case"nativescript":return new cn(e);case"react-native":return new sn(e);case"sqljs":return new ln(e);case"oracle":return new dt(e);case"mssql":return new lt(e);case"mongodb":return new rt(e);case"expo":return new pn(e);case"aurora-mysql":return new mn(e);case"aurora-postgres":return new bn(e);case"capacitor":return new wn(e);case"spanner":return new An(e);default:throw new I(t,["aurora-mysql","aurora-postgres","better-sqlite3","capacitor","cockroachdb","cordova","expo","mariadb","mongodb","mssql","mysql","nativescript","oracle","postgres","react-native","sap","sqlite","sqljs","spanner"])}}}const Mn=new class{constructor(){this.instances=[]}get(e){let t=this.instances.find((t=>t.type===e));return t||(t={type:e,object:new e},this.instances.push(t)),t.object}};function vn(e){return Mn.get(e)}class Rn{constructor(e){this["@instanceof"]=Symbol.for("ColumnMetadata"),this.length="",this.isPrimary=!1,this.isGenerated=!1,this.isNullable=!1,this.isSelect=!0,this.isInsert=!0,this.isUpdate=!0,this.zerofill=!1,this.unsigned=!1,this.isArray=!1,this.isVirtual=!1,this.isVirtualProperty=!1,this.isDiscriminator=!1,this.isTreeLevel=!1,this.isCreateDate=!1,this.isUpdateDate=!1,this.isDeleteDate=!1,this.isVersion=!1,this.isObjectId=!1,this.isNestedSetLeft=!1,this.isNestedSetRight=!1,this.isMaterializedPath=!1,this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,this.referencedColumn=e.referencedColumn,e.args.target&&(this.target=e.args.target),e.args.propertyName&&(this.propertyName=e.args.propertyName),e.args.options.name&&(this.givenDatabaseName=e.args.options.name),e.args.options.type&&(this.type=e.args.options.type),e.args.options.length&&(this.length=e.args.options.length?e.args.options.length.toString():""),e.args.options.width&&(this.width=e.args.options.width),e.args.options.charset&&(this.charset=e.args.options.charset),e.args.options.collation&&(this.collation=e.args.options.collation),e.args.options.primary&&(this.isPrimary=e.args.options.primary),null===e.args.options.default&&(this.isNullable=!0),void 0!==e.args.options.nullable&&(this.isNullable=e.args.options.nullable),void 0!==e.args.options.select&&(this.isSelect=e.args.options.select),void 0!==e.args.options.insert&&(this.isInsert=e.args.options.insert),void 0!==e.args.options.update&&(this.isUpdate=e.args.options.update),void 0!==e.args.options.readonly&&(this.isUpdate=!e.args.options.readonly),e.args.options.comment&&(this.comment=e.args.options.comment),void 0!==e.args.options.default&&(this.default=e.args.options.default),e.args.options.onUpdate&&(this.onUpdate=e.args.options.onUpdate),e.args.options.generatedIdentity&&(this.generatedIdentity=e.args.options.generatedIdentity),null!==e.args.options.scale&&void 0!==e.args.options.scale&&(this.scale=e.args.options.scale),e.args.options.zerofill&&(this.zerofill=e.args.options.zerofill,this.unsigned=!0),e.args.options.unsigned&&(this.unsigned=e.args.options.unsigned),null!==e.args.options.precision&&(this.precision=e.args.options.precision),e.args.options.enum&&(r.isObject(e.args.options.enum)&&!Array.isArray(e.args.options.enum)?this.enum=Object.keys(e.args.options.enum).filter((t=>isNaN(+t)&&"function"!=typeof e.args.options.enum[t])).map((t=>e.args.options.enum[t])):this.enum=e.args.options.enum),e.args.options.enumName&&(this.enumName=e.args.options.enumName),e.args.options.primaryKeyConstraintName&&(this.primaryKeyConstraintName=e.args.options.primaryKeyConstraintName),e.args.options.foreignKeyConstraintName&&(this.foreignKeyConstraintName=e.args.options.foreignKeyConstraintName),e.args.options.asExpression&&(this.asExpression=e.args.options.asExpression,this.generatedType=e.args.options.generatedType?e.args.options.generatedType:"VIRTUAL"),e.args.options.hstoreType&&(this.hstoreType=e.args.options.hstoreType),e.args.options.array&&(this.isArray=e.args.options.array),e.args.mode&&(this.isVirtualProperty="virtual-property"===e.args.mode,this.isVirtual="virtual"===e.args.mode,this.isTreeLevel="treeLevel"===e.args.mode,this.isCreateDate="createDate"===e.args.mode,this.isUpdateDate="updateDate"===e.args.mode,this.isDeleteDate="deleteDate"===e.args.mode,this.isVersion="version"===e.args.mode,this.isObjectId="objectId"===e.args.mode),this.isVirtualProperty&&(this.isInsert=!1,this.isUpdate=!1),e.args.options.transformer&&(this.transformer=e.args.options.transformer),e.args.options.spatialFeatureType&&(this.spatialFeatureType=e.args.options.spatialFeatureType),void 0!==e.args.options.srid&&(this.srid=e.args.options.srid),e.args.options.query&&(this.query=e.args.options.query),this.isTreeLevel&&(this.type=e.connection.driver.mappedDataTypes.treeLevel),this.isCreateDate&&(this.type||(this.type=e.connection.driver.mappedDataTypes.createDate),this.default||(this.default=()=>e.connection.driver.mappedDataTypes.createDateDefault),void 0===this.precision&&void 0===e.args.options.precision&&e.connection.driver.mappedDataTypes.createDatePrecision&&(this.precision=e.connection.driver.mappedDataTypes.createDatePrecision)),this.isUpdateDate&&(this.type||(this.type=e.connection.driver.mappedDataTypes.updateDate),this.default||(this.default=()=>e.connection.driver.mappedDataTypes.updateDateDefault),this.onUpdate||(this.onUpdate=e.connection.driver.mappedDataTypes.updateDateDefault),void 0===this.precision&&void 0===e.args.options.precision&&e.connection.driver.mappedDataTypes.updateDatePrecision&&(this.precision=e.connection.driver.mappedDataTypes.updateDatePrecision)),this.isDeleteDate&&(this.type||(this.type=e.connection.driver.mappedDataTypes.deleteDate),this.isNullable||(this.isNullable=e.connection.driver.mappedDataTypes.deleteDateNullable),void 0===this.precision&&void 0===e.args.options.precision&&e.connection.driver.mappedDataTypes.deleteDatePrecision&&(this.precision=e.connection.driver.mappedDataTypes.deleteDatePrecision)),this.isVersion&&(this.type=e.connection.driver.mappedDataTypes.version),e.closureType&&(this.closureType=e.closureType),e.nestedSetLeft&&(this.isNestedSetLeft=e.nestedSetLeft),e.nestedSetRight&&(this.isNestedSetRight=e.nestedSetRight),e.materializedPath&&(this.isMaterializedPath=e.materializedPath)}createValueMap(e,t=!1){if(this.embeddedMetadata){const n=[...this.embeddedMetadata.parentPropertyNames],a=(n,i)=>{const r=n.shift();return r?(i[r]={},a(n,i[r]),i):("increment"!==this.generationStrategy&&"rowid"!==this.generationStrategy||"bigint"!==this.type||null===e||(e=String(e)),i[t?this.databaseName:this.propertyName]=e,i)};return a(n,{})}return"increment"!==this.generationStrategy&&"rowid"!==this.generationStrategy||"bigint"!==this.type||null===e||(e=String(e)),{[t?this.databaseName:this.propertyName]:e}}getEntityValueMap(e,t){if(this.embeddedMetadata){const t=[...this.embeddedMetadata.parentPropertyNames],n=this.embeddedMetadata.isArray,a=(e,t)=>{if(void 0===t)return{};const i=e.shift();if(i){const n=a(e,t[i]);return Object.keys(n).length>0?{[i]:n}:{}}return n&&Array.isArray(t)?t.map((e=>({[this.propertyName]:e[this.propertyName]}))):void 0!==t[this.propertyName]?{[this.propertyName]:t[this.propertyName]}:{}},i=a(t,e);return Object.keys(i).length>0?i:void 0}if(this.relationMetadata&&!Object.getOwnPropertyDescriptor(e,this.relationMetadata.propertyName)?.get&&e[this.relationMetadata.propertyName]&&r.isObject(e[this.relationMetadata.propertyName])){const t=this.relationMetadata.joinColumns.reduce(((t,n)=>{const a=n.referencedColumn.getEntityValueMap(e[this.relationMetadata.propertyName]);return void 0===a?t:xe.mergeDeep(t,a)}),{});return Object.keys(t).length>0?{[this.propertyName]:t}:void 0}return void 0!==e[this.propertyName]?{[this.propertyName]:e[this.propertyName]}:void 0}getEntityValue(e,t=!1){if(null==e)return;let n;if(this.embeddedMetadata){const t=[...this.embeddedMetadata.parentPropertyNames],a=this.embeddedMetadata.isArray,i=(e,t)=>{const n=e.shift();return n&&t?i(e,t[n]):t},s=i(t,e);if(s)if(this.relationMetadata&&this.referencedColumn){const e=this.relationMetadata.getEntityValue(s);n=e&&r.isObject(e)&&!g.isFindOperator(e)&&!Buffer.isBuffer(e)?this.referencedColumn.getEntityValue(e):!s[this.propertyName]||!r.isObject(s[this.propertyName])||g.isFindOperator(s[this.propertyName])||Buffer.isBuffer(s[this.propertyName])||s[this.propertyName]instanceof Date?s[this.propertyName]:this.referencedColumn.getEntityValue(s[this.propertyName])}else n=this.referencedColumn?this.referencedColumn.getEntityValue(s[this.propertyName]):a&&Array.isArray(s)?s.map((e=>e[this.propertyName])):s[this.propertyName]}else if(this.relationMetadata&&this.referencedColumn){const t=this.relationMetadata.getEntityValue(e);n=t&&r.isObject(t)&&!g.isFindOperator(t)&&"function"!=typeof t&&!Buffer.isBuffer(t)?this.referencedColumn.getEntityValue(t):!e[this.propertyName]||!r.isObject(e[this.propertyName])||g.isFindOperator(e[this.propertyName])||"function"==typeof e[this.propertyName]||Buffer.isBuffer(e[this.propertyName])||e[this.propertyName]instanceof Date?e[this.propertyName]:this.referencedColumn.getEntityValue(e[this.propertyName])}else n=this.referencedColumn?this.referencedColumn.getEntityValue(e[this.propertyName]):e[this.propertyName];return t&&this.transformer&&(n=ue.transformTo(this.transformer,n)),n}setEntityValue(e,t){if(this.embeddedMetadata){const n=(e,a)=>{const i=e.shift();return i?(a[i.propertyName]||(a[i.propertyName]=i.create()),n(e,a[i.propertyName]),a):(a[this.propertyName]=t,a)};return n([...this.embeddedMetadata.embeddedMetadataTree],e)}!this.entityMetadata.isJunction&&this.isVirtual&&this.referencedColumn&&this.referencedColumn.propertyName!==this.propertyName?(this.propertyName in e||(e[this.propertyName]={}),e[this.propertyName][this.referencedColumn.propertyName]=t):e[this.propertyName]=t}compareEntityValue(e,t){const n=this.getEntityValue(e);return r.isObject(n)?n.equals(t):n===t}build(e){return this.propertyPath=this.buildPropertyPath(),this.propertyAliasName=this.propertyPath.replace(".","_"),this.databaseName=this.buildDatabaseName(e),this.databasePath=this.buildDatabasePath(),this.databaseNameWithoutPrefixes=e.namingStrategy.columnName(this.propertyName,this.givenDatabaseName,[]),this}buildPropertyPath(){let e="";return this.embeddedMetadata&&this.embeddedMetadata.parentPropertyNames.length&&(e=this.embeddedMetadata.parentPropertyNames.join(".")+"."),e+=this.propertyName,!this.entityMetadata.isJunction&&this.isVirtual&&this.referencedColumn&&this.referencedColumn.propertyName!==this.propertyName&&(e+="."+this.referencedColumn.propertyName),e}buildDatabasePath(){let e="";return this.embeddedMetadata&&this.embeddedMetadata.parentPropertyNames.length&&(e=this.embeddedMetadata.parentPropertyNames.join(".")+"."),e+=this.databaseName,!this.entityMetadata.isJunction&&this.isVirtual&&this.referencedColumn&&this.referencedColumn.databaseName!==this.databaseName&&(e+="."+this.referencedColumn.databaseName),e}buildDatabaseName(e){let t=this.embeddedMetadata?this.embeddedMetadata.parentPrefixes:[];return"mongodb"===e.driver.options.type&&(t=[]),e.namingStrategy.columnName(this.propertyName,this.givenDatabaseName,t)}}class Sn{constructor(e){this.isUnique=!1,this.isSpatial=!1,this.isFulltext=!1,this.isNullFiltered=!1,this.synchronize=!0,this.columns=[],this.columnNamesWithOrderingMap={},this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,e.columns&&(this.columns=e.columns),e.args&&(this.target=e.args.target,null!==e.args.synchronize&&void 0!==e.args.synchronize&&(this.synchronize=e.args.synchronize),this.isUnique=!!e.args.unique,this.isSpatial=!!e.args.spatial,this.isFulltext=!!e.args.fulltext,this.isNullFiltered=!!e.args.nullFiltered,this.parser=e.args.parser,this.where=e.args.where,this.isSparse=e.args.sparse,this.isBackground=e.args.background,this.isConcurrent=e.args.concurrent,this.expireAfterSeconds=e.args.expireAfterSeconds,this.givenName=e.args.name,this.givenColumnNames=e.args.columns)}build(e){if(!1===this.synchronize)return this.name=this.givenName,this;const t={};if(this.givenColumnNames){let e=[];if(Array.isArray(this.givenColumnNames))e=this.givenColumnNames.map((e=>this.embeddedMetadata?this.embeddedMetadata.propertyPath+"."+e:e.trim())),e.forEach((e=>t[e]=1));else{const n=this.givenColumnNames(this.entityMetadata.propertiesMap);Array.isArray(n)?(e=n.map((e=>String(e))),e.forEach((e=>t[e]=1))):(e=Object.keys(n).map((e=>String(e))),Object.keys(n).forEach((e=>t[e]=n[e])))}this.columns=e.map((e=>{const t=this.entityMetadata.columns.find((t=>t.propertyPath===e));if(t)return[t];const n=this.entityMetadata.relations.find((t=>t.isWithJoinColumn&&t.propertyName===e));if(n)return n.joinColumns;const a=this.givenName?'"'+this.givenName+'" ':"",i=this.entityMetadata.targetName;throw new s(`Index ${a}contains column that is missing in the entity (${i}): `+e)})).reduce(((e,t)=>e.concat(t)))}return this.columnNamesWithOrderingMap=Object.keys(t).reduce(((e,n)=>{const a=this.entityMetadata.columns.find((e=>e.propertyPath===n));return a&&(e[a.databasePath]=t[n]),e}),{}),this.name=this.givenName?this.givenName:e.indexName(this.entityMetadata.tableName,this.columns.map((e=>e.databaseName)),this.where),this}}class On{constructor(e){this.isTreeParent=!1,this.isTreeChildren=!1,this.isPrimary=!1,this.isLazy=!1,this.isEager=!1,this.persistenceEnabled=!0,this.isCascadeInsert=!1,this.isCascadeUpdate=!1,this.isCascadeRemove=!1,this.isCascadeSoftRemove=!1,this.isCascadeRecover=!1,this.isNullable=!0,this.createForeignKeyConstraints=!0,this.isOwning=!1,this.isOneToOne=!1,this.isOneToOneOwner=!1,this.isWithJoinColumn=!1,this.isOneToOneNotOwner=!1,this.isOneToMany=!1,this.isManyToOne=!1,this.isManyToMany=!1,this.isManyToManyOwner=!1,this.isManyToManyNotOwner=!1,this.foreignKeys=[],this.joinColumns=[],this.inverseJoinColumns=[],this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata;const t=e.args;this.target=t.target,this.propertyName=t.propertyName,this.relationType=t.relationType,t.inverseSideProperty&&(this.givenInverseSidePropertyFactory=t.inverseSideProperty),this.isLazy=t.isLazy||!1,this.isCascadeInsert=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("insert"),this.isCascadeUpdate=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("update"),this.isCascadeRemove=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("remove"),this.isCascadeSoftRemove=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("soft-remove"),this.isCascadeRecover=!0===t.options.cascade||Array.isArray(t.options.cascade)&&-1!==t.options.cascade.indexOf("recover"),this.isNullable=!1!==t.options.nullable&&!this.isPrimary,this.onDelete=t.options.onDelete,this.onUpdate=t.options.onUpdate,this.deferrable=t.options.deferrable,this.createForeignKeyConstraints=!1!==t.options.createForeignKeyConstraints,this.isEager=t.options.eager||!1,this.persistenceEnabled=!1!==t.options.persistence,this.orphanedRowAction=t.options.orphanedRowAction||"nullify",this.isTreeParent=t.isTreeParent||!1,this.isTreeChildren=t.isTreeChildren||!1,"function"==typeof t.type?this.type="function"==typeof t.type?t.type():t.type:g.isEntitySchema(t.type)?this.type=t.type.options.name:r.isObject(t.type)&&"string"==typeof t.type.name?this.type=t.type.name:this.type=t.type,this.isOneToOne="one-to-one"===this.relationType,this.isOneToMany="one-to-many"===this.relationType,this.isManyToOne="many-to-one"===this.relationType,this.isManyToMany="many-to-many"===this.relationType,this.isOneToOneNotOwner=!!this.isOneToOne,this.isManyToManyNotOwner=!!this.isManyToMany}getRelationIdMap(e){const t=(this.isOwning?this.joinColumns:this.inverseRelation.joinColumns).map((e=>e.referencedColumn));return $t.getValueMap(e,t)}ensureRelationIdMap(e){if(r.isObject(e))return e;const t=(this.isOwning?this.joinColumns:this.inverseRelation.joinColumns).map((e=>e.referencedColumn));if(t.length>1)throw new s("Cannot create relation id map for a single value because relation contains multiple referenced columns.");return t[0].createValueMap(e)}getEntityValue(e,t=!1){if(null!=e){if(this.embeddedMetadata){const n=[...this.embeddedMetadata.parentPropertyNames],a=(e,t)=>{const n=e.shift();return n?t[n]?a(e,t[n]):void 0:t},i=a(n,e);return this.isLazy?void 0!==i["__"+this.propertyName+"__"]?i["__"+this.propertyName+"__"]:!0===t?i[this.propertyName]:void 0:i?i[this.isLazy?"__"+this.propertyName+"__":this.propertyName]:void 0}return this.isLazy?void 0!==e["__"+this.propertyName+"__"]?e["__"+this.propertyName+"__"]:!0===t?e[this.propertyName]:void 0:e[this.propertyName]}}setEntityValue(e,t){const n=this.isLazy?"__"+this.propertyName+"__":this.propertyName;if(this.embeddedMetadata){const a=(e,i)=>{const r=e.shift();return r?(i[r.propertyName]||(i[r.propertyName]=r.create()),a(e,i[r.propertyName]),i):(i[n]=t,i)};return a([...this.embeddedMetadata.embeddedMetadataTree],e)}e[n]=t}createValueMap(e){if(this.embeddedMetadata){const t=[...this.embeddedMetadata.parentPropertyNames],n=(t,a)=>{const i=t.shift();return i?(a[i]={},n(t,a[i]),a):(a[this.propertyName]=e,a)};return n(t,{})}return{[this.propertyName]:e}}build(){this.propertyPath=this.buildPropertyPath()}registerForeignKeys(...e){this.foreignKeys.push(...e)}registerJoinColumns(e=[],t=[]){this.joinColumns=e,this.inverseJoinColumns=t,this.isOwning=this.isManyToOne||(this.isManyToMany||this.isOneToOne)&&this.joinColumns.length>0,this.isOneToOneOwner=this.isOneToOne&&this.isOwning,this.isOneToOneNotOwner=this.isOneToOne&&!this.isOwning,this.isManyToManyOwner=this.isManyToMany&&this.isOwning,this.isManyToManyNotOwner=this.isManyToMany&&!this.isOwning,this.isWithJoinColumn=this.isManyToOne||this.isOneToOneOwner}registerJunctionEntityMetadata(e){this.junctionEntityMetadata=e,this.joinTableName=e.tableName,this.inverseRelation&&(this.inverseRelation.junctionEntityMetadata=e,this.joinTableName=e.tableName)}buildInverseSidePropertyPath(){if(this.givenInverseSidePropertyFactory){const e=this.inverseEntityMetadata.propertiesMap;if("function"==typeof this.givenInverseSidePropertyFactory)return this.givenInverseSidePropertyFactory(e);if("string"==typeof this.givenInverseSidePropertyFactory)return this.givenInverseSidePropertyFactory}else{if(this.isTreeParent&&this.entityMetadata.treeChildrenRelation)return this.entityMetadata.treeChildrenRelation.propertyName;if(this.isTreeChildren&&this.entityMetadata.treeParentRelation)return this.entityMetadata.treeParentRelation.propertyName}return""}buildPropertyPath(){return this.embeddedMetadata&&this.embeddedMetadata.parentPropertyNames.length?this.embeddedMetadata.parentPropertyNames.join(".")+"."+this.propertyName:this.propertyName}}class xn{constructor(e){this.columns=[],this.relations=[],this.listeners=[],this.indices=[],this.uniques=[],this.relationIds=[],this.relationCounts=[],this.embeddeds=[],this.isAlwaysUsingConstructor=!0,this.isArray=!1,this.parentPropertyNames=[],this.parentPrefixes=[],this.embeddedMetadataTree=[],this.columnsFromTree=[],this.relationsFromTree=[],this.listenersFromTree=[],this.indicesFromTree=[],this.uniquesFromTree=[],this.relationIdsFromTree=[],this.relationCountsFromTree=[],this.entityMetadata=e.entityMetadata,this.type=e.args.type(),this.propertyName=e.args.propertyName,this.customPrefix=e.args.prefix,this.isArray=e.args.isArray}create(e){return"function"!=typeof this.type?{}:e?.fromDeserializer||!this.isAlwaysUsingConstructor?Object.create(this.type.prototype):new this.type}build(e){return this.embeddeds.forEach((t=>t.build(e))),this.prefix=this.buildPrefix(e),this.parentPropertyNames=this.buildParentPropertyNames(),this.parentPrefixes=this.buildParentPrefixes(),this.propertyPath=this.parentPropertyNames.join("."),this.embeddedMetadataTree=this.buildEmbeddedMetadataTree(),this.columnsFromTree=this.buildColumnsFromTree(),this.relationsFromTree=this.buildRelationsFromTree(),this.listenersFromTree=this.buildListenersFromTree(),this.indicesFromTree=this.buildIndicesFromTree(),this.uniquesFromTree=this.buildUniquesFromTree(),this.relationIdsFromTree=this.buildRelationIdsFromTree(),this.relationCountsFromTree=this.buildRelationCountsFromTree(),e.options.entitySkipConstructor&&(this.isAlwaysUsingConstructor=!e.options.entitySkipConstructor),this}buildPartialPrefix(){if(void 0===this.customPrefix||!0===this.customPrefix)return[this.propertyName];if(""===this.customPrefix||!1===this.customPrefix)return[];if("string"==typeof this.customPrefix)return[this.customPrefix];throw new s(`Invalid prefix option given for ${this.entityMetadata.targetName}#${this.propertyName}`)}buildPrefix(e){if("mongodb"===e.driver.options.type)return this.propertyName;let t=[];return this.parentEmbeddedMetadata&&t.push(this.parentEmbeddedMetadata.buildPrefix(e)),t.push(...this.buildPartialPrefix()),t.join("_")}buildParentPropertyNames(){return this.parentEmbeddedMetadata?this.parentEmbeddedMetadata.buildParentPropertyNames().concat(this.propertyName):[this.propertyName]}buildParentPrefixes(){return this.parentEmbeddedMetadata?this.parentEmbeddedMetadata.buildParentPrefixes().concat(this.buildPartialPrefix()):this.buildPartialPrefix()}buildEmbeddedMetadataTree(){return this.parentEmbeddedMetadata?this.parentEmbeddedMetadata.buildEmbeddedMetadataTree().concat(this):[this]}buildColumnsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildColumnsFromTree())),this.columns)}buildRelationsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildRelationsFromTree())),this.relations)}buildListenersFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildListenersFromTree())),this.listeners)}buildIndicesFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildIndicesFromTree())),this.indices)}buildUniquesFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildUniquesFromTree())),this.uniques)}buildRelationIdsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildRelationIdsFromTree())),this.relationIds)}buildRelationCountsFromTree(){return this.embeddeds.reduce(((e,t)=>e.concat(t.buildRelationCountsFromTree())),this.relationCounts)}}class Pn{constructor(e){this.entityMetadata=e.entityMetadata,this.target=e.args.target,this.propertyName=e.args.propertyName,this.relationNameOrFactory=e.args.relation,this.alias=e.args.alias,this.queryBuilderFactory=e.args.queryBuilderFactory}setValue(e){const t=this.relation.getEntityValue(e);if(Array.isArray(t))e[this.propertyName]=t.map((e=>this.relation.inverseEntityMetadata.getEntityIdMixedMap(e))).filter((e=>null!=e));else{const n=this.relation.inverseEntityMetadata.getEntityIdMixedMap(t);void 0!==n&&(e[this.propertyName]=n)}}build(){const e="function"==typeof this.relationNameOrFactory?this.relationNameOrFactory(this.entityMetadata.propertiesMap):this.relationNameOrFactory,t=this.entityMetadata.findRelationWithPropertyPath(e);if(!t)throw new s(`Cannot find relation ${e}. Wrong relation specified for @RelationId decorator.`);this.relation=t}}class In{constructor(e){this.entityMetadata=e.entityMetadata,this.target=e.args.target,this.propertyName=e.args.propertyName,this.relationNameOrFactory=e.args.relation,this.alias=e.args.alias,this.queryBuilderFactory=e.args.queryBuilderFactory}build(){const e="function"==typeof this.relationNameOrFactory?this.relationNameOrFactory(this.entityMetadata.propertiesMap):this.relationNameOrFactory,t=this.entityMetadata.findRelationWithPropertyPath(e);if(!t)throw new s(`Cannot find relation ${e}. Wrong relation specified for @RelationCount decorator.`);this.relation=t}}class $n{}$n.AFTER_LOAD="after-load",$n.BEFORE_INSERT="before-insert",$n.AFTER_INSERT="after-insert",$n.BEFORE_UPDATE="before-update",$n.AFTER_UPDATE="after-update",$n.BEFORE_REMOVE="before-remove",$n.AFTER_REMOVE="after-remove",$n.BEFORE_SOFT_REMOVE="before-soft-remove",$n.AFTER_SOFT_REMOVE="after-soft-remove",$n.BEFORE_RECOVER="before-recover",$n.AFTER_RECOVER="after-recover";class qn{constructor(e){this.columns=[],this.referencedColumns=[],this.columnNames=[],this.referencedColumnNames=[],this.entityMetadata=e.entityMetadata,this.referencedEntityMetadata=e.referencedEntityMetadata,this.columns=e.columns,this.referencedColumns=e.referencedColumns,this.onDelete=e.onDelete||"NO ACTION",this.onUpdate=e.onUpdate||"NO ACTION",this.deferrable=e.deferrable,this.givenName=e.name,e.namingStrategy&&this.build(e.namingStrategy)}build(e){this.columnNames=this.columns.map((e=>e.databaseName)),this.referencedColumnNames=this.referencedColumns.map((e=>e.databaseName)),this.referencedTablePath=this.referencedEntityMetadata.tablePath,this.name=this.givenName?this.givenName:e.foreignKeyName(this.entityMetadata.tableName,this.columnNames,this.referencedEntityMetadata.tableName,this.referencedColumnNames)}}class Dn{constructor(e){this.connection=e}build(e,t){const n=this.collectReferencedColumns(e,t),a=this.collectInverseReferencedColumns(e,t),i=t.name||this.connection.namingStrategy.joinTableName(e.entityMetadata.tableNameWithoutPrefix,e.inverseEntityMetadata.tableNameWithoutPrefix,e.propertyPath,e.inverseRelation?e.inverseRelation.propertyName:""),r=new $t({connection:this.connection,args:{target:"",name:i,type:"junction",database:t.database||e.entityMetadata.database,schema:t.schema||e.entityMetadata.schema,synchronize:t.synchronize}});r.build();const s=n.map((n=>{const a=t.joinColumns?t.joinColumns.find((e=>!(e.referencedColumnName&&e.referencedColumnName!==n.propertyName||!e.name))):void 0,i=a&&a.name?a.name:this.connection.namingStrategy.joinTableColumnName(e.entityMetadata.tableNameWithoutPrefix,n.propertyName,n.databaseName);return new Rn({connection:this.connection,entityMetadata:r,referencedColumn:n,args:{target:"",mode:"virtual",propertyName:i,options:{name:i,length:n.length||!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||"uuid"===this.connection.driver.normalizeType(n)||"uuid"!==n.generationStrategy&&"uuid"!==n.type?n.length:"36",width:n.width,type:n.type,precision:n.precision,scale:n.scale,charset:n.charset,collation:n.collation,zerofill:n.zerofill,unsigned:!!n.zerofill||n.unsigned,enum:n.enum,enumName:n.enumName,foreignKeyConstraintName:a?.foreignKeyConstraintName,nullable:!1,primary:!0}}})})),o=a.map((n=>{const a=t.inverseJoinColumns?t.inverseJoinColumns.find((e=>!(e.referencedColumnName&&e.referencedColumnName!==n.propertyName||!e.name))):void 0,i=a&&a.name?a.name:this.connection.namingStrategy.joinTableInverseColumnName(e.inverseEntityMetadata.tableNameWithoutPrefix,n.propertyName,n.databaseName);return new Rn({connection:this.connection,entityMetadata:r,referencedColumn:n,args:{target:"",mode:"virtual",propertyName:i,options:{length:n.length||!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||"uuid"===this.connection.driver.normalizeType(n)||"uuid"!==n.generationStrategy&&"uuid"!==n.type?n.length:"36",width:n.width,type:n.type,precision:n.precision,scale:n.scale,charset:n.charset,collation:n.collation,zerofill:n.zerofill,unsigned:!!n.zerofill||n.unsigned,enum:n.enum,enumName:n.enumName,foreignKeyConstraintName:a?.foreignKeyConstraintName,name:i,nullable:!1,primary:!0}}})}));return this.changeDuplicatedColumnNames(s,o),r.ownerColumns=s,r.inverseColumns=o,r.ownColumns=[...s,...o],r.ownColumns.forEach((t=>t.relationMetadata=e)),r.foreignKeys=e.createForeignKeyConstraints?[new qn({entityMetadata:r,referencedEntityMetadata:e.entityMetadata,columns:s,referencedColumns:n,name:s[0]?.foreignKeyConstraintName,onDelete:"spanner"===this.connection.driver.options.type?"NO ACTION":e.onDelete||"CASCADE",onUpdate:"oracle"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?"NO ACTION":e.onUpdate||"CASCADE"}),new qn({entityMetadata:r,referencedEntityMetadata:e.inverseEntityMetadata,columns:o,referencedColumns:a,name:o[0]?.foreignKeyConstraintName,onDelete:"spanner"===this.connection.driver.options.type?"NO ACTION":e.inverseRelation?e.inverseRelation.onDelete:"CASCADE",onUpdate:"oracle"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type?"NO ACTION":e.inverseRelation?e.inverseRelation.onUpdate:"CASCADE"})]:[],r.ownIndices=[new Sn({entityMetadata:r,columns:s,args:{target:r.target,synchronize:!0}}),new Sn({entityMetadata:r,columns:o,args:{target:r.target,synchronize:!0}})],r}collectReferencedColumns(e,t){const n=!!t.joinColumns&&t.joinColumns.find((e=>!!e.referencedColumnName));return!t.joinColumns||t.joinColumns&&!n?e.entityMetadata.columns.filter((e=>e.isPrimary)):t.joinColumns.map((t=>{const n=e.entityMetadata.columns.find((e=>e.propertyName===t.referencedColumnName));if(!n)throw new s(`Referenced column ${t.referencedColumnName} was not found in entity ${e.entityMetadata.name}`);return n}))}collectInverseReferencedColumns(e,t){const n=!!t.inverseJoinColumns,a=!!n&&t.inverseJoinColumns.find((e=>!!e.referencedColumnName));return!n||n&&!a?e.inverseEntityMetadata.primaryColumns:t.inverseJoinColumns.map((t=>{const n=e.inverseEntityMetadata.ownColumns.find((e=>e.propertyName===t.referencedColumnName));if(!n)throw new s(`Referenced column ${t.referencedColumnName} was not found in entity ${e.inverseEntityMetadata.name}`);return n}))}changeDuplicatedColumnNames(e,t){e.forEach((e=>{t.forEach((t=>{if(e.givenDatabaseName===t.givenDatabaseName){const n=this.connection.namingStrategy.joinTableColumnDuplicationPrefix(e.propertyName,1);e.propertyName=n,e.givenDatabaseName=n;const a=this.connection.namingStrategy.joinTableColumnDuplicationPrefix(t.propertyName,2);t.propertyName=a,t.givenDatabaseName=a}}))}))}}class Ln{constructor(e){this.connection=e}build(e){const t=new $t({parentClosureEntityMetadata:e,connection:this.connection,args:{target:"",name:e.treeOptions&&e.treeOptions.closureTableName?e.treeOptions.closureTableName:e.tableNameWithoutPrefix,type:"closure-junction"}});return t.build(),e.primaryColumns.forEach((n=>{t.ownColumns.push(new Rn({connection:this.connection,entityMetadata:t,closureType:"ancestor",referencedColumn:n,args:{target:"",mode:"virtual",propertyName:e.treeOptions&&e.treeOptions.ancestorColumnName?e.treeOptions.ancestorColumnName(n):n.propertyName+"_ancestor",options:{primary:!0,length:n.length,type:n.type}}})),t.ownColumns.push(new Rn({connection:this.connection,entityMetadata:t,closureType:"descendant",referencedColumn:n,args:{target:"",mode:"virtual",propertyName:e.treeOptions&&e.treeOptions.descendantColumnName?e.treeOptions.descendantColumnName(n):n.propertyName+"_descendant",options:{primary:!0,length:n.length,type:n.type}}}))})),t.ownIndices=[new Sn({entityMetadata:t,columns:[t.ownColumns[0]],args:{target:t.target,synchronize:!0}}),new Sn({entityMetadata:t,columns:[t.ownColumns[1]],args:{target:t.target,synchronize:!0}})],e.treeLevelColumn&&t.ownColumns.push(new Rn({connection:this.connection,entityMetadata:t,args:{target:"",mode:"virtual",propertyName:"level",options:{type:this.connection.driver.mappedDataTypes.treeLevel}}})),t.foreignKeys=[new qn({entityMetadata:t,referencedEntityMetadata:e,columns:[t.ownColumns[0]],referencedColumns:e.primaryColumns,onDelete:"mssql"===this.connection.driver.options.type?"NO ACTION":"CASCADE"}),new qn({entityMetadata:t,referencedEntityMetadata:e,columns:[t.ownColumns[1]],referencedColumns:e.primaryColumns,onDelete:"mssql"===this.connection.driver.options.type?"NO ACTION":"CASCADE"})],t}}class _n{constructor(e){this.columns=[],this.columnNamesWithOrderingMap={},this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,e.columns&&(this.columns=e.columns),e.args&&(this.target=e.args.target,this.givenName=e.args.name,this.givenColumnNames=e.args.columns,this.deferrable=e.args.deferrable)}build(e){const t={};if(this.givenColumnNames){let e=[];if(Array.isArray(this.givenColumnNames))e=this.givenColumnNames.map((e=>this.embeddedMetadata?this.embeddedMetadata.propertyPath+"."+e:e.trim())),e.forEach((e=>t[e]=1));else{const n=this.givenColumnNames(this.entityMetadata.propertiesMap);Array.isArray(n)?(e=n.map((e=>String(e))),e.forEach((e=>t[e]=1))):(e=Object.keys(n).map((e=>String(e))),Object.keys(n).forEach((e=>t[e]=n[e])))}this.columns=e.map((e=>{const t=this.entityMetadata.columns.find((t=>t.propertyPath===e));if(t)return[t];const n=this.entityMetadata.relations.find((t=>t.isWithJoinColumn&&t.propertyName===e));if(n)return n.joinColumns;const a=this.givenName?'"'+this.givenName+'" ':"",i=this.entityMetadata.targetName;throw new s(`Unique constraint ${a}contains column that is missing in the entity (${i}): `+e)})).reduce(((e,t)=>e.concat(t)))}return this.columnNamesWithOrderingMap=Object.keys(t).reduce(((e,n)=>{const a=this.entityMetadata.columns.find((e=>e.propertyPath===n));return a&&(e[a.databasePath]=t[n]),e}),{}),this.name=this.givenName?this.givenName:e.uniqueConstraintName(this.entityMetadata.tableName,this.columns.map((e=>e.databaseName))),this}}class Bn{constructor(e){this.connection=e}build(e,t){const n=this.collectReferencedColumns(e,t),a=this.collectColumns(e,t,n);if(!n.length||!t.createForeignKeyConstraints)return{foreignKey:void 0,columns:a,uniqueConstraint:void 0};const i=new qn({name:e[0]?.foreignKeyConstraintName,entityMetadata:t.entityMetadata,referencedEntityMetadata:t.inverseEntityMetadata,namingStrategy:this.connection.namingStrategy,columns:a,referencedColumns:n,onDelete:t.onDelete,onUpdate:t.onUpdate,deferrable:t.deferrable});if(a.every((e=>e.isPrimary))||!t.isOneToOne)return{foreignKey:i,columns:a,uniqueConstraint:void 0};const r=new _n({entityMetadata:t.entityMetadata,columns:i.columns,args:{name:this.connection.namingStrategy.relationConstraintName(t.entityMetadata.tableName,i.columns.map((e=>e.databaseName))),target:t.entityMetadata.target}});return r.build(this.connection.namingStrategy),{foreignKey:i,columns:a,uniqueConstraint:r}}collectReferencedColumns(e,t){const n=e.find((e=>!!e.referencedColumnName)),a=0===e.length&&t.isManyToOne,i=e.length>0&&!n;return a||i?t.inverseEntityMetadata.primaryColumns:e.map((e=>{const n=t.inverseEntityMetadata.ownColumns.find((t=>t.propertyName===e.referencedColumnName));if(!n)throw new s(`Referenced column ${e.referencedColumnName} was not found in entity ${t.inverseEntityMetadata.name}`);return n}))}collectColumns(e,t,n){return n.map((n=>{const a=e.find((e=>!(e.referencedColumnName&&e.referencedColumnName!==n.propertyName||!e.name))),i=a?a.name:this.connection.namingStrategy.joinColumnName(t.propertyName,n.propertyName);let r=(t.embeddedMetadata?t.embeddedMetadata.columns:t.entityMetadata.ownColumns).find((e=>e.databaseNameWithoutPrefixes===i));return r||(r=new Rn({connection:this.connection,entityMetadata:t.entityMetadata,embeddedMetadata:t.embeddedMetadata,args:{target:"",mode:"virtual",propertyName:t.propertyName,options:{name:i,type:n.type,length:n.length||!re.isMySQLFamily(this.connection.driver)&&"aurora-mysql"!==this.connection.driver.options.type||"uuid"===this.connection.driver.normalizeType(n)||"uuid"!==n.generationStrategy&&"uuid"!==n.type?n.length:"36",width:n.width,charset:n.charset,collation:n.collation,precision:n.precision,scale:n.scale,zerofill:n.zerofill,unsigned:n.unsigned,comment:n.comment,enum:n.enum,enumName:n.enumName,primary:t.isPrimary,nullable:t.isNullable}}}),t.entityMetadata.registerColumn(r)),r.referencedColumn=n,r.type=n.type,r.relationMetadata=t,r.build(this.connection),r}))}}class jn{constructor(e){this.entityMetadata=e.entityMetadata,this.embeddedMetadata=e.embeddedMetadata,this.target=e.args.target,this.propertyName=e.args.propertyName,this.type=e.args.type}isAllowed(e){return this.entityMetadata.target===e.constructor||"function"==typeof this.entityMetadata.target&&e.constructor.prototype instanceof this.entityMetadata.target}execute(e){if(!this.embeddedMetadata)return e[this.propertyName]();this.callEntityEmbeddedMethod(e,this.embeddedMetadata.propertyPath.split("."))}callEntityEmbeddedMethod(e,t){const n=t.shift();n&&e[n]&&(0===t.length?Array.isArray(e[n])?e[n].map((e=>e[this.propertyName]())):e[n][this.propertyName]():e[n]&&this.callEntityEmbeddedMethod(e[n],t))}}class Un{constructor(e){this.entityMetadata=e.entityMetadata,e.args&&(this.target=e.args.target,this.expression=e.args.expression,this.givenName=e.args.name)}build(e){return this.name=this.givenName?this.givenName:e.checkConstraintName(this.entityMetadata.tableName,this.expression),this}}class Fn{constructor(e){this.entityMetadata=e.entityMetadata,e.args&&(this.target=e.args.target,this.expression=e.args.expression,this.givenName=e.args.name)}build(e){return this.name=this.givenName?this.givenName:e.exclusionConstraintName(this.entityMetadata.tableName,this.expression),this}}class kn{constructor(e,t){this.connection=e,this.metadataArgsStorage=t,this.junctionEntityMetadataBuilder=new Dn(e),this.closureJunctionEntityMetadataBuilder=new Ln(e),this.relationJoinColumnBuilder=new Bn(e)}build(t){const n=(t?this.metadataArgsStorage.filterTables(t):this.metadataArgsStorage.tables).filter((e=>"regular"===e.type||"closure"===e.type||"entity-child"===e.type||"view"===e.type)).map((e=>this.createEntityMetadata(e)));return n.forEach((e=>this.computeParentEntityMetadata(n,e))),n.forEach((t=>{t.childEntityMetadatas=n.filter((n=>"function"==typeof t.target&&"function"==typeof n.target&&e.isInherited(n.target,t.target)))})),n.filter((e=>"entity-child"!==e.tableType)).forEach((e=>e.build())),n.filter((e=>"entity-child"===e.tableType)).forEach((e=>e.build())),n.filter((e=>"entity-child"!==e.tableType)).forEach((e=>this.computeEntityMetadataStep1(n,e))),n.filter((e=>"entity-child"===e.tableType)).forEach((e=>this.computeEntityMetadataStep1(n,e))),n.forEach((e=>this.computeEntityMetadataStep2(e))),n.forEach((e=>this.computeInverseProperties(e,n))),n.filter((e=>"entity-child"!==e.tableType)).forEach((e=>{e.relations.filter((e=>e.isOneToOne||e.isManyToOne)).forEach((t=>{const n=this.metadataArgsStorage.filterJoinColumns(t.target,t.propertyName),{foreignKey:a,columns:i,uniqueConstraint:r}=this.relationJoinColumnBuilder.build(n,t);if(a&&(t.registerForeignKeys(a),e.foreignKeys.push(a)),i&&t.registerJoinColumns(i),r)if(re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"mssql"===this.connection.driver.options.type||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type){const n=new Sn({entityMetadata:r.entityMetadata,columns:r.columns,args:{target:r.target,name:r.name,unique:!0,synchronize:!0}});"mssql"===this.connection.driver.options.type&&(n.where=n.columns.map((e=>`${this.connection.driver.escape(e.databaseName)} IS NOT NULL`)).join(" AND ")),"spanner"===this.connection.driver.options.type&&(n.isNullFiltered=!0),t.embeddedMetadata?t.embeddedMetadata.indices.push(n):t.entityMetadata.ownIndices.push(n),this.computeEntityMetadataStep2(e)}else t.embeddedMetadata?t.embeddedMetadata.uniques.push(r):t.entityMetadata.ownUniques.push(r),this.computeEntityMetadataStep2(e);if(a&&"cockroachdb"===this.connection.driver.options.type){const n=new Sn({entityMetadata:t.entityMetadata,columns:a.columns,args:{target:t.entityMetadata.target,synchronize:!0}});t.embeddedMetadata?t.embeddedMetadata.indices.push(n):t.entityMetadata.ownIndices.push(n),this.computeEntityMetadataStep2(e)}})),e.relations.filter((e=>e.isManyToMany)).forEach((e=>{const t=this.metadataArgsStorage.findJoinTable(e.target,e.propertyName);if(!t)return;const a=this.junctionEntityMetadataBuilder.build(e,t);e.registerForeignKeys(...a.foreignKeys),e.registerJoinColumns(a.ownIndices[0].columns,a.ownIndices[1].columns),e.registerJunctionEntityMetadata(a),this.computeEntityMetadataStep2(a),this.computeInverseProperties(a,n),n.push(a)}))})),n.forEach((e=>{e.relationsWithJoinColumns=e.relations.filter((e=>e.isWithJoinColumn)),e.hasNonNullableRelations=e.relationsWithJoinColumns.some((e=>!e.isNullable||e.isPrimary))})),n.filter((e=>"closure-table"===e.treeType)).forEach((e=>{const t=this.closureJunctionEntityMetadataBuilder.build(e);e.closureJunctionTable=t,this.computeEntityMetadataStep2(t),this.computeInverseProperties(t,n),n.push(t)})),n.filter((e=>"STI"===e.inheritancePattern&&e.discriminatorColumn)).forEach((e=>this.createKeysForTableInheritance(e))),n.forEach((e=>{e.indices.forEach((e=>e.build(this.connection.namingStrategy)))})),n.forEach((e=>{e.uniques.forEach((e=>e.build(this.connection.namingStrategy)))})),n.forEach((e=>{e.checks.forEach((e=>e.build(this.connection.namingStrategy)))})),n.forEach((e=>{e.exclusions.forEach((e=>e.build(this.connection.namingStrategy)))})),n.filter((e=>"function"==typeof e.target)).forEach((e=>{e.relations.filter((e=>e.isLazy)).forEach((t=>{this.connection.relationLoader.enableLazyLoad(t,e.target.prototype)}))})),n.forEach((e=>{e.columns.forEach((t=>{const n=this.metadataArgsStorage.findGenerated(t.target,t.propertyName);n&&(t.isGenerated=!0,t.generationStrategy=n.strategy,"uuid"===n.strategy?t.type="uuid":"rowid"===n.strategy?t.type="int":t.type=t.type||Number,t.build(this.connection),this.computeEntityMetadataStep2(e))}))})),n}createEntityMetadata(t){const n="function"==typeof t.target?e.getInheritanceTree(t.target):[t.target],a=this.metadataArgsStorage.findInheritanceType(t.target),i=this.metadataArgsStorage.findTree(t.target);let r;return(a&&"STI"===a.pattern||"entity-child"===t.type)&&(r=this.metadataArgsStorage.filterSingleTableChildren(t.target).map((e=>e.target)).filter((e=>"function"==typeof e)),n.push(...r)),new $t({connection:this.connection,args:t,inheritanceTree:n,tableTree:i,inheritancePattern:a?a.pattern:void 0})}computeParentEntityMetadata(e,t){"entity-child"===t.tableType&&(t.parentEntityMetadata=e.find((e=>-1!==e.inheritanceTree.indexOf(t.target)&&"STI"===e.inheritancePattern)))}computeEntityMetadataStep1(e,t){const n=this.metadataArgsStorage.findInheritanceType(t.target),a=this.metadataArgsStorage.findDiscriminatorValue(t.target);if(t.discriminatorValue=void 0!==a?a.value:t.target.name,t.embeddeds=this.createEmbeddedsRecursively(t,this.metadataArgsStorage.filterEmbeddeds(t.inheritanceTree)).map((e=>("STI"===t.inheritancePattern&&(e.columns=e.columns.map((e=>(e.isNullable=!0,e)))),e))),t.ownColumns=this.metadataArgsStorage.filterColumns(t.inheritanceTree).map((n=>{if("entity-child"===t.tableType)return t.parentEntityMetadata.ownColumns.find((e=>e.propertyName===n.propertyName));if("regular"===t.tableType&&n.target!==t.target){const e=this.metadataArgsStorage.columns.find((e=>e.propertyName===n.propertyName&&e.target===t.target));e&&e.options.default&&(n.options.default=e.options.default)}const a=new Rn({connection:this.connection,entityMetadata:t,args:n});return e.find((e=>"entity-child"===e.tableType&&e.target===n.target))&&(a.isNullable=!0),a})),n&&n.column){const e=n.column&&n.column.name?n.column.name:"type";let a=t.ownColumns.find((t=>t.propertyName===e));a?a.isDiscriminator=!0:(a=new Rn({connection:this.connection,entityMetadata:t,args:{target:t.target,mode:"virtual",propertyName:e,options:n.column||{name:e,type:"varchar",nullable:!1}}}),a.isVirtual=!0,a.isDiscriminator=!0,t.ownColumns.push(a))}if("entity-child"===t.tableType){const e=t.parentEntityMetadata.ownColumns.find((e=>e.isDiscriminator));e&&!t.ownColumns.find((t=>t===e))&&t.ownColumns.push(e),t.inheritancePattern=t.parentEntityMetadata.inheritancePattern,!t.treeType&&t.parentEntityMetadata.treeType&&(t.treeType=t.parentEntityMetadata.treeType,t.treeOptions=t.parentEntityMetadata.treeOptions,t.treeParentRelation=t.parentEntityMetadata.treeParentRelation,t.treeLevelColumn=t.parentEntityMetadata.treeLevelColumn)}const{namingStrategy:i}=this.connection;if("materialized-path"===t.treeType)t.ownColumns.push(new Rn({connection:this.connection,entityMetadata:t,materializedPath:!0,args:{target:t.target,mode:"virtual",propertyName:"mpath",options:{name:i.materializedPathColumnName,type:String,nullable:!0,default:""}}}));else if("nested-set"===t.treeType){const{left:e,right:n}=i.nestedSetColumnNames;t.ownColumns.push(new Rn({connection:this.connection,entityMetadata:t,nestedSetLeft:!0,args:{target:t.target,mode:"virtual",propertyName:e,options:{name:e,type:Number,nullable:!1,default:1}}})),t.ownColumns.push(new Rn({connection:this.connection,entityMetadata:t,nestedSetRight:!0,args:{target:t.target,mode:"virtual",propertyName:n,options:{name:n,type:Number,nullable:!1,default:2}}}))}if(t.ownRelations=this.metadataArgsStorage.filterRelations(t.inheritanceTree).map((e=>{if("entity-child"===t.tableType){const n=t.parentEntityMetadata.ownRelations.find((t=>t.propertyName===e.propertyName)),a="function"==typeof e.type?e.type():e.type;if(n.type!==a){const e=Object.create(n);return e.type=a,e}return n}return new On({entityMetadata:t,args:e})})),t.relationIds=this.metadataArgsStorage.filterRelationIds(t.inheritanceTree).map((e=>"entity-child"===t.tableType?t.parentEntityMetadata.relationIds.find((t=>t.propertyName===e.propertyName)):new Pn({entityMetadata:t,args:e}))),t.relationCounts=this.metadataArgsStorage.filterRelationCounts(t.inheritanceTree).map((e=>"entity-child"===t.tableType?t.parentEntityMetadata.relationCounts.find((t=>t.propertyName===e.propertyName)):new In({entityMetadata:t,args:e}))),t.ownListeners=this.metadataArgsStorage.filterListeners(t.inheritanceTree).map((e=>new jn({entityMetadata:t,args:e}))),t.checks=this.metadataArgsStorage.filterChecks(t.inheritanceTree).map((e=>new Un({entityMetadata:t,args:e}))),"postgres"===this.connection.driver.options.type&&(t.exclusions=this.metadataArgsStorage.filterExclusions(t.inheritanceTree).map((e=>new Fn({entityMetadata:t,args:e})))),"cockroachdb"===this.connection.driver.options.type){t.ownIndices=this.metadataArgsStorage.filterIndices(t.inheritanceTree).filter((e=>!e.unique)).map((e=>new Sn({entityMetadata:t,args:e})));const e=this.metadataArgsStorage.filterIndices(t.inheritanceTree).filter((e=>e.unique)).map((e=>new _n({entityMetadata:t,args:{target:e.target,name:e.name,columns:e.columns}})));t.ownUniques.push(...e)}else t.ownIndices=this.metadataArgsStorage.filterIndices(t.inheritanceTree).map((e=>new Sn({entityMetadata:t,args:e})));if(re.isMySQLFamily(this.connection.driver)||"aurora-mysql"===this.connection.driver.options.type||"sap"===this.connection.driver.options.type||"spanner"===this.connection.driver.options.type){const e=this.metadataArgsStorage.filterUniques(t.inheritanceTree).map((e=>new Sn({entityMetadata:t,args:{target:e.target,name:e.name,columns:e.columns,unique:!0,synchronize:!0}})));t.ownIndices.push(...e)}else{const e=this.metadataArgsStorage.filterUniques(t.inheritanceTree).map((e=>new _n({entityMetadata:t,args:e})));t.ownUniques.push(...e)}}createEmbeddedsRecursively(t,n){return n.map((n=>{const a=new xn({entityMetadata:t,args:n}),i="function"==typeof a.type?e.getInheritanceTree(a.type):[a.type];return a.columns=this.metadataArgsStorage.filterColumns(i).map((e=>new Rn({connection:this.connection,entityMetadata:t,embeddedMetadata:a,args:e}))),a.relations=this.metadataArgsStorage.filterRelations(i).map((e=>new On({entityMetadata:t,embeddedMetadata:a,args:e}))),a.listeners=this.metadataArgsStorage.filterListeners(i).map((e=>new jn({entityMetadata:t,embeddedMetadata:a,args:e}))),a.indices=this.metadataArgsStorage.filterIndices(i).map((e=>new Sn({entityMetadata:t,embeddedMetadata:a,args:e}))),a.uniques=this.metadataArgsStorage.filterUniques(i).map((e=>new _n({entityMetadata:t,embeddedMetadata:a,args:e}))),a.relationIds=this.metadataArgsStorage.filterRelationIds(i).map((e=>new Pn({entityMetadata:t,args:e}))),a.relationCounts=this.metadataArgsStorage.filterRelationCounts(i).map((e=>new In({entityMetadata:t,args:e}))),a.embeddeds=this.createEmbeddedsRecursively(t,this.metadataArgsStorage.filterEmbeddeds(i)),a.embeddeds.forEach((e=>e.parentEmbeddedMetadata=a)),t.allEmbeddeds.push(a),a}))}computeEntityMetadataStep2(e){e.embeddeds.forEach((e=>e.build(this.connection))),e.embeddeds.forEach((e=>{e.columnsFromTree.forEach((e=>e.build(this.connection))),e.relationsFromTree.forEach((e=>e.build()))})),e.ownColumns.forEach((e=>e.build(this.connection))),e.ownRelations.forEach((e=>e.build())),e.relations=e.embeddeds.reduce(((e,t)=>e.concat(t.relationsFromTree)),e.ownRelations),e.eagerRelations=e.relations.filter((e=>e.isEager)),e.lazyRelations=e.relations.filter((e=>e.isLazy)),e.oneToOneRelations=e.relations.filter((e=>e.isOneToOne)),e.oneToManyRelations=e.relations.filter((e=>e.isOneToMany)),e.manyToOneRelations=e.relations.filter((e=>e.isManyToOne)),e.manyToManyRelations=e.relations.filter((e=>e.isManyToMany)),e.ownerOneToOneRelations=e.relations.filter((e=>e.isOneToOneOwner)),e.ownerManyToManyRelations=e.relations.filter((e=>e.isManyToManyOwner)),e.treeParentRelation=e.relations.find((e=>e.isTreeParent)),e.treeChildrenRelation=e.relations.find((e=>e.isTreeChildren)),e.columns=e.embeddeds.reduce(((e,t)=>e.concat(t.columnsFromTree)),e.ownColumns),e.listeners=e.embeddeds.reduce(((e,t)=>e.concat(t.listenersFromTree)),e.ownListeners),e.afterLoadListeners=e.listeners.filter((e=>e.type===$n.AFTER_LOAD)),e.afterInsertListeners=e.listeners.filter((e=>e.type===$n.AFTER_INSERT)),e.afterUpdateListeners=e.listeners.filter((e=>e.type===$n.AFTER_UPDATE)),e.afterRemoveListeners=e.listeners.filter((e=>e.type===$n.AFTER_REMOVE)),e.afterSoftRemoveListeners=e.listeners.filter((e=>e.type===$n.AFTER_SOFT_REMOVE)),e.afterRecoverListeners=e.listeners.filter((e=>e.type===$n.AFTER_RECOVER)),e.beforeInsertListeners=e.listeners.filter((e=>e.type===$n.BEFORE_INSERT)),e.beforeUpdateListeners=e.listeners.filter((e=>e.type===$n.BEFORE_UPDATE)),e.beforeRemoveListeners=e.listeners.filter((e=>e.type===$n.BEFORE_REMOVE)),e.beforeSoftRemoveListeners=e.listeners.filter((e=>e.type===$n.BEFORE_SOFT_REMOVE)),e.beforeRecoverListeners=e.listeners.filter((e=>e.type===$n.BEFORE_RECOVER)),e.indices=e.embeddeds.reduce(((e,t)=>e.concat(t.indicesFromTree)),e.ownIndices),e.uniques=e.embeddeds.reduce(((e,t)=>e.concat(t.uniquesFromTree)),e.ownUniques),e.primaryColumns=e.columns.filter((e=>e.isPrimary)),e.nonVirtualColumns=e.columns.filter((e=>!e.isVirtual)),e.ancestorColumns=e.columns.filter((e=>"ancestor"===e.closureType)),e.descendantColumns=e.columns.filter((e=>"descendant"===e.closureType)),e.hasMultiplePrimaryKeys=e.primaryColumns.length>1,e.generatedColumns=e.columns.filter((e=>e.isGenerated||e.isObjectId)),e.hasUUIDGeneratedColumns=e.columns.filter((e=>e.isGenerated||"uuid"===e.generationStrategy)).length>0,e.createDateColumn=e.columns.find((e=>e.isCreateDate)),e.updateDateColumn=e.columns.find((e=>e.isUpdateDate)),e.deleteDateColumn=e.columns.find((e=>e.isDeleteDate)),e.versionColumn=e.columns.find((e=>e.isVersion)),e.discriminatorColumn=e.columns.find((e=>e.isDiscriminator)),e.treeLevelColumn=e.columns.find((e=>e.isTreeLevel)),e.nestedSetLeftColumn=e.columns.find((e=>e.isNestedSetLeft)),e.nestedSetRightColumn=e.columns.find((e=>e.isNestedSetRight)),e.materializedPathColumn=e.columns.find((e=>e.isMaterializedPath)),e.objectIdColumn=e.columns.find((e=>e.isObjectId)),e.foreignKeys.forEach((e=>e.build(this.connection.namingStrategy))),e.propertiesMap=e.createPropertiesMap(),e.relationIds.forEach((e=>e.build())),e.relationCounts.forEach((e=>e.build())),e.embeddeds.forEach((e=>{e.relationIdsFromTree.forEach((e=>e.build())),e.relationCountsFromTree.forEach((e=>e.build()))}))}computeInverseProperties(e,t){e.relations.forEach((n=>{const a=t.find((e=>e.target===n.type||"string"==typeof n.type&&(e.targetName===n.type||e.givenTableName===n.type)));if(!a)throw new s("Entity metadata for "+e.name+"#"+n.propertyPath+" was not found. Check if you specified a correct entity object and if it's connected in the connection options.");n.inverseEntityMetadata=a,n.inverseSidePropertyPath=n.buildInverseSidePropertyPath(),n.inverseRelation=a.relations.find((e=>e.propertyPath===n.inverseSidePropertyPath))}))}createKeysForTableInheritance(e){e.indices.some((({givenColumnNames:t})=>!!t&&Array.isArray(t)&&1===t.length&&t[0]===e.discriminatorColumn?.databaseName))||e.indices.push(new Sn({entityMetadata:e,columns:[e.discriminatorColumn],args:{target:e.target,unique:!1}}))}}class Vn extends s{static createEntitySchemaIsRequiredException(e){return new Vn(`EntitySchema is required for ${e} embedded field`)}static createTargetIsRequired(e){return new Vn(`Target field is required for ${e} embedded EntitySchema`)}constructor(e){super(e)}}class Qn{transform(e){const n=new t;return e.forEach((e=>{const t=e.options,a={target:t.target||t.name,name:t.tableName,database:t.database,schema:t.schema,type:t.type||"regular",orderBy:t.orderBy,synchronize:t.synchronize,withoutRowid:!!t.withoutRowid,expression:t.expression};n.tables.push(a);const{inheritance:i}=t;i&&n.inheritances.push({target:t.target,pattern:i.pattern??"STI",column:i.column?"string"==typeof i.column?{name:i.column}:i.column:void 0});const{discriminatorValue:r}=t;r&&n.discriminatorValues.push({target:t.target||t.name,value:r}),this.transformColumnsRecursive(t,n)})),n}transformColumnsRecursive(e,t){Object.keys(e.columns).forEach((n=>{const a=e.columns[n];let i="regular";a.createDate&&(i="createDate"),a.updateDate&&(i="updateDate"),a.deleteDate&&(i="deleteDate"),a.version&&(i="version"),a.treeChildrenCount&&(i="treeChildrenCount"),a.treeLevel&&(i="treeLevel"),a.objectId&&(i="objectId");const r={target:e.target||e.name,mode:i,propertyName:n,options:{type:a.type,name:a.objectId?"_id":a.name,primaryKeyConstraintName:a.primaryKeyConstraintName,length:a.length,width:a.width,nullable:a.nullable,readonly:a.readonly,update:a.update,select:a.select,insert:a.insert,primary:a.primary,unique:a.unique,comment:a.comment,default:a.default,onUpdate:a.onUpdate,precision:a.precision,scale:a.scale,zerofill:a.zerofill,unsigned:a.unsigned,charset:a.charset,collation:a.collation,enum:a.enum,enumName:a.enumName,asExpression:a.asExpression,generatedType:a.generatedType,hstoreType:a.hstoreType,array:a.array,transformer:a.transformer,spatialFeatureType:a.spatialFeatureType,srid:a.srid}};if(t.columns.push(r),a.generated){const i={target:e.target||e.name,propertyName:n,strategy:"string"==typeof a.generated?a.generated:"increment"};t.generations.push(i)}a.unique&&t.uniques.push({target:e.target||e.name,columns:[n]})})),e.relations&&Object.keys(e.relations).forEach((n=>{const a=e.relations[n],i={target:e.target||e.name,propertyName:n,relationType:a.type,isLazy:a.lazy||!1,type:a.target,inverseSideProperty:a.inverseSide,isTreeParent:a.treeParent,isTreeChildren:a.treeChildren,options:{eager:a.eager||!1,cascade:a.cascade,nullable:a.nullable,onDelete:a.onDelete,onUpdate:a.onUpdate,deferrable:a.deferrable,createForeignKeyConstraints:a.createForeignKeyConstraints,persistence:a.persistence,orphanedRowAction:a.orphanedRowAction}};if(t.relations.push(i),a.joinColumn)if("boolean"==typeof a.joinColumn){const a={target:e.target||e.name,propertyName:n};t.joinColumns.push(a)}else{const i=Array.isArray(a.joinColumn)?a.joinColumn:[a.joinColumn];for(const a of i){const i={target:e.target||e.name,propertyName:n,name:a.name,referencedColumnName:a.referencedColumnName,foreignKeyConstraintName:a.foreignKeyConstraintName};t.joinColumns.push(i)}}if(a.joinTable)if("boolean"==typeof a.joinTable){const a={target:e.target||e.name,propertyName:n};t.joinTables.push(a)}else{const i={target:e.target||e.name,propertyName:n,name:a.joinTable.name,database:a.joinTable.database,schema:a.joinTable.schema,joinColumns:a.joinTable.joinColumn?[a.joinTable.joinColumn]:a.joinTable.joinColumns,inverseJoinColumns:a.joinTable.inverseJoinColumn?[a.joinTable.inverseJoinColumn]:a.joinTable.inverseJoinColumns};t.joinTables.push(i)}})),e.relationIds&&Object.keys(e.relationIds).forEach((n=>{const a=e.relationIds[n],i={propertyName:n,relation:a.relationName,target:e.target||e.name,alias:a.alias,queryBuilderFactory:a.queryBuilderFactory};t.relationIds.push(i)})),e.indices&&e.indices.forEach((n=>{const a={target:e.target||e.name,name:n.name,unique:!0===n.unique,spatial:!0===n.spatial,fulltext:!0===n.fulltext,nullFiltered:!0===n.nullFiltered,parser:n.parser,synchronize:!1!==n.synchronize,where:n.where,sparse:n.sparse,columns:n.columns};t.indices.push(a)})),e.uniques&&e.uniques.forEach((n=>{const a={target:e.target||e.name,name:n.name,columns:n.columns,deferrable:n.deferrable};t.uniques.push(a)})),e.checks&&e.checks.forEach((n=>{const a={target:e.target||e.name,name:n.name,expression:n.expression};t.checks.push(a)})),e.exclusions&&e.exclusions.forEach((n=>{const a={target:e.target||e.name,name:n.name,expression:n.expression};t.exclusions.push(a)})),e.embeddeds&&Object.keys(e.embeddeds).forEach((n=>{const a=e.embeddeds[n];if(!a.schema)throw Vn.createEntitySchemaIsRequiredException(n);const i=a.schema.options;t.embeddeds.push({target:e.target||e.name,propertyName:n,isArray:!0===a.array,prefix:void 0!==a.prefix?a.prefix:void 0,type:()=>i?.target||i.name}),this.transformColumnsRecursive(i,t)}))}}class Wn{constructor(e){this.connection=e}async buildMigrations(e){const[t,n]=xe.splitClassesAndStrings(e);return[...t,...await(this.connection.logger,[])].map((e=>vn(e)))}async buildSubscribers(e){const[t,n]=xe.splitClassesAndStrings(e||[]),a=[...t,...await(this.connection.logger,[])];return ra().filterSubscribers(a).map((e=>vn(e.target)))}async buildEntityMetadatas(e){const[t,n]=xe.splitClassesAndStrings(e||[]),a=t.filter((e=>!g.isEntitySchema(e))),i=t.filter((e=>g.isEntitySchema(e))),r=[...a,...await(this.connection.logger,[])];r.forEach((e=>{g.isEntitySchema(e)&&i.push(e)}));const s=new kn(this.connection,ra()).build(r),o=(new Qn).transform(i);return[...s,...new kn(this.connection,o).build()]}}class Kn{constructor(e){this.options=e}logQuery(e,t,n){this.isLogEnabledFor("query")&&this.writeLog("query",{type:"query",prefix:"query",message:e,format:"sql",parameters:t},n)}logQueryError(e,t,n,a){this.isLogEnabledFor("query-error")&&this.writeLog("warn",[{type:"query-error",prefix:"query failed",message:t,format:"sql",parameters:n},{type:"query-error",prefix:"error",message:e}],a)}logQuerySlow(e,t,n,a){this.isLogEnabledFor("query-slow")&&this.writeLog("warn",[{type:"query-slow",prefix:"query is slow",message:t,format:"sql",parameters:n,additionalInfo:{time:e}},{type:"query-slow",prefix:"execution time",message:e}],a)}logSchemaBuild(e,t){this.isLogEnabledFor("schema-build")&&this.writeLog("schema",{type:"schema-build",message:e},t)}logMigration(e,t){this.isLogEnabledFor("migration")&&this.writeLog("log",{type:"migration",message:e},t)}log(e,t,n){switch(e){case"log":if(!this.isLogEnabledFor("log"))return;this.writeLog("log",{type:"log",message:t},n);break;case"info":if(!this.isLogEnabledFor("info"))return;this.writeLog("info",{type:"info",prefix:"info",message:t},n);break;case"warn":if(!this.isLogEnabledFor("warn"))return;this.writeLog("warn",{type:"warn",message:t},n)}}isLogEnabledFor(e){switch(e){case"query":return"all"===this.options||!0===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("query");case"error":case"query-error":return"all"===this.options||!0===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("error");case"query-slow":case"migration":return!0;case"schema":case"schema-build":return"all"===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("schema");case"log":return"all"===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("log");case"info":return"all"===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("info");case"warn":return"all"===this.options||Array.isArray(this.options)&&-1!==this.options.indexOf("warn");default:return!1}}prepareLogMessages(e,t){t={addColonToPrefix:!0,appendParameterAsComment:!0,highlightSql:!0,...t};const n=Array.isArray(e)?e:[e];for(let e of n){if("object"!=typeof e&&(e={message:e}),"sql"===e.format){let n=String(e.message);t.appendParameterAsComment&&e.parameters&&e.parameters.length&&(n+=` -- PARAMETERS: ${this.stringifyParams(e.parameters)}`),t.highlightSql&&(n=i.highlightSql(n)),e.message=n}t.addColonToPrefix&&e.prefix&&(e.prefix+=":")}return n}stringifyParams(e){try{return JSON.stringify(e)}catch(t){return e}}}class Hn extends Kn{writeLog(e,t,n){const a=this.prepareLogMessages(t,{highlightSql:!1});for(let t of a)switch(t.type??e){case"log":case"schema-build":case"migration":console.log(t.message);break;case"info":case"query":t.prefix?console.info(t.prefix,t.message):console.info(t.message);break;case"warn":case"query-slow":t.prefix?console.warn(t.prefix,t.message):console.warn(t.message);break;case"error":case"query-error":t.prefix?console.error(t.prefix,t.message):console.error(t.message)}}}class Gn extends Kn{writeLog(e,t,n){const a=this.prepareLogMessages(t);for(let t of a)switch(t.type??e){case"log":case"schema-build":case"migration":i.log(String(t.message));break;case"info":case"query":t.prefix?i.logInfo(t.prefix,t.message):i.log(String(t.message));break;case"warn":case"query-slow":t.prefix?i.logWarn(t.prefix,t.message):console.warn(i.warn(String(t.message)));break;case"error":case"query-error":t.prefix?i.logError(t.prefix,String(t.message)):console.error(i.error(String(t.message)))}}}class zn{logQuery(){throw new Error("This logger is not applicable in a browser context")}logQueryError(){throw new Error("This logger is not applicable in a browser context")}logQuerySlow(){throw new Error("This logger is not applicable in a browser context")}logSchemaBuild(){throw new Error("This logger is not applicable in a browser context")}logMigration(){throw new Error("This logger is not applicable in a browser context")}log(){throw new Error("This logger is not applicable in a browser context")}}class Jn extends zn{}var Yn=n(17833);class Xn extends Kn{constructor(){super(...arguments),this.logger={log:(0,Yn.debug)("typeorm:log"),info:(0,Yn.debug)("typeorm:info"),warn:(0,Yn.debug)("typeorm:warn"),error:(0,Yn.debug)("typeorm:error"),query:(0,Yn.debug)("typeorm:query:log"),"query-error":(0,Yn.debug)("typeorm:query:error"),"query-slow":(0,Yn.debug)("typeorm:query:slow"),"schema-build":(0,Yn.debug)("typeorm:schema"),migration:(0,Yn.debug)("typeorm:migration")}}isLogEnabledFor(e){switch(e){case"query":return this.logger.query.enabled;case"query-error":return this.logger["query-error"].enabled;case"query-slow":return!0;case"schema":case"schema-build":return this.logger["schema-build"].enabled;case"migration":return this.logger.migration.enabled;case"log":return this.logger.log.enabled;case"info":return this.logger.info.enabled;case"warn":return this.logger.warn.enabled;default:return!1}}writeLog(e,t,n){const a=this.prepareLogMessages(t,{appendParameterAsComment:!1});for(let t of a){const n=t.type??e;n in this.logger&&(t.prefix?this.logger[n](t.prefix,t.message):this.logger[n](t.message),t.parameters&&t.parameters.length&&this.logger[n]("parameters:",t.parameters))}}}class Zn{create(e,t){if(r.isObject(e))return e;if(e)switch(e){case"simple-console":return new Hn(t);case"file":return new Jn(t);case"advanced-console":return new Gn(t);case"debug":return new Xn}return new Gn(t)}}class ea{constructor(e,t){this.connection=e,this.clientType=t,this.redis=this.loadRedis()}async connect(){const e=this.connection.options.cache;if("redis"===this.clientType)this.client=this.redis.createClient({...e?.options,legacyMode:!0}),"object"==typeof this.connection.options.cache&&this.connection.options.cache.ignoreErrors&&this.client.on("error",(e=>{this.connection.logger.log("warn",e)})),"connect"in this.client&&await this.client.connect();else if("ioredis"===this.clientType)e&&e.port?e.options?this.client=new this.redis(e.port,e.options):this.client=new this.redis(e.port):e&&e.options?this.client=new this.redis(e.options):this.client=new this.redis;else if("ioredis/cluster"===this.clientType)if(e&&e.options&&Array.isArray(e.options))this.client=new this.redis.Cluster(e.options);else{if(!(e&&e.options&&e.options.startupNodes))throw new s(`options.startupNodes required for ${this.clientType}.`);this.client=new this.redis.Cluster(e.options.startupNodes,e.options.options)}}async disconnect(){return new Promise(((e,t)=>{this.client.quit(((n,a)=>{if(n)return t(n);e(),this.client=void 0}))}))}async synchronize(e){}getFromCache(e,t){return new Promise(((t,n)=>{e.identifier?this.client.get(e.identifier,((e,a)=>{if(e)return n(e);t(JSON.parse(a))})):e.query?this.client.get(e.query,((e,a)=>{if(e)return n(e);t(JSON.parse(a))})):t(void 0)}))}isExpired(e){return e.time+e.duration<(new Date).getTime()}async storeInCache(e,t,n){return new Promise(((t,n)=>{e.identifier?this.client.set(e.identifier,JSON.stringify(e),"PX",e.duration,((e,a)=>{if(e)return n(e);t()})):e.query&&this.client.set(e.query,JSON.stringify(e),"PX",e.duration,((e,a)=>{if(e)return n(e);t()}))}))}async clear(e){return new Promise(((e,t)=>{this.client.flushdb(((n,a)=>{if(n)return t(n);e()}))}))}async remove(e,t){await Promise.all(e.map((e=>this.deleteKey(e))))}deleteKey(e){return new Promise(((t,n)=>{this.client.del(e,((e,a)=>{if(e)return n(e);t()}))}))}loadRedis(){try{return"ioredis/cluster"===this.clientType?i.load("ioredis"):i.load(this.clientType)}catch(e){throw new s(`Cannot use cache because ${this.clientType} is not installed. Please run "npm i ${this.clientType} --save".`)}}}class ta{constructor(e){this.connection=e;const{schema:t}=this.connection.driver.options,n=this.connection.driver.database,a=("object"==typeof this.connection.options.cache?this.connection.options.cache:{}).tableName||"query-result-cache";this.queryResultCacheDatabase=n,this.queryResultCacheSchema=t,this.queryResultCacheTable=this.connection.driver.buildTableName(a,t,n)}async connect(){}async disconnect(){}async synchronize(e){e=this.getQueryRunner(e);const t=this.connection.driver;await e.hasTable(this.queryResultCacheTable)||await e.createTable(new Xe({database:this.queryResultCacheDatabase,schema:this.queryResultCacheSchema,name:this.queryResultCacheTable,columns:[{name:"id",isPrimary:!0,isNullable:!1,type:t.normalizeType({type:t.mappedDataTypes.cacheId}),generationStrategy:"spanner"===t.options.type?"uuid":"increment",isGenerated:!0},{name:"identifier",type:t.normalizeType({type:t.mappedDataTypes.cacheIdentifier}),isNullable:!0},{name:"time",type:t.normalizeType({type:t.mappedDataTypes.cacheTime}),isPrimary:!1,isNullable:!1},{name:"duration",type:t.normalizeType({type:t.mappedDataTypes.cacheDuration}),isPrimary:!1,isNullable:!1},{name:"query",type:t.normalizeType({type:t.mappedDataTypes.cacheQuery}),isPrimary:!1,isNullable:!1},{name:"result",type:t.normalizeType({type:t.mappedDataTypes.cacheResult}),isNullable:!1}]}))}getFromCache(e,t){t=this.getQueryRunner(t);const n=this.connection.createQueryBuilder(t).select().from(this.queryResultCacheTable,"cache");return e.identifier?n.where(`${n.escape("cache")}.${n.escape("identifier")} = :identifier`).setParameters({identifier:"mssql"===this.connection.driver.options.type?new et(e.identifier,"nvarchar"):e.identifier}).cache(!1).getRawOne():e.query?"oracle"===this.connection.driver.options.type?n.where(`dbms_lob.compare(${n.escape("cache")}.${n.escape("query")}, :query) = 0`,{query:e.query}).cache(!1).getRawOne():n.where(`${n.escape("cache")}.${n.escape("query")} = :query`).setParameters({query:"mssql"===this.connection.driver.options.type?new et(e.query,"nvarchar"):e.query}).cache(!1).getRawOne():Promise.resolve(void 0)}isExpired(e){const t="string"==typeof e.duration?parseInt(e.duration):e.duration;return("string"==typeof e.time?parseInt(e.time):e.time)+t<(new Date).getTime()}async storeInCache(e,t,n){const a=void 0===n||"slave"===n?.getReplicationMode();(void 0===n||a)&&(n=this.connection.createQueryRunner("master"));let i=e;if("mssql"===this.connection.driver.options.type&&(i={identifier:new et(e.identifier,"nvarchar"),time:new et(e.time,"bigint"),duration:new et(e.duration,"int"),query:new et(e.query,"nvarchar"),result:new et(e.result,"nvarchar")}),t&&t.identifier){const e=n.manager.createQueryBuilder().update(this.queryResultCacheTable).set(i);e.where(`${e.escape("identifier")} = :condition`,{condition:i.identifier}),await e.execute()}else if(t&&t.query){const e=n.manager.createQueryBuilder().update(this.queryResultCacheTable).set(i);"oracle"===this.connection.driver.options.type?e.where('dbms_lob.compare("query", :condition) = 0',{condition:i.query}):e.where(`${e.escape("query")} = :condition`,{condition:i.query}),await e.execute()}else"spanner"!==this.connection.driver.options.type||i.id||(i.id=Ne()),await n.manager.createQueryBuilder().insert().into(this.queryResultCacheTable).values(i).execute();a&&await n.release()}async clear(e){return this.getQueryRunner(e).clearTable(this.queryResultCacheTable)}async remove(e,t){let n=t||this.getQueryRunner();await Promise.all(e.map((e=>{const t=n.manager.createQueryBuilder();return t.delete().from(this.queryResultCacheTable).where(`${t.escape("identifier")} = :identifier`,{identifier:e}).execute()}))),t||await n.release()}getQueryRunner(e){return e||this.connection.createQueryRunner()}}class na{constructor(e){this.connection=e}create(){if(!this.connection.options.cache)throw new s("To use cache you need to enable it in connection options by setting cache: true or providing some caching options. Example: { host: ..., username: ..., cache: true }");const e=this.connection.options.cache;return e.provider&&"function"==typeof e.provider?e.provider(this.connection):"redis"===e.type||"ioredis"===e.type||"ioredis/cluster"===e.type?new ea(this.connection,e.type):new ta(this.connection)}}class aa{constructor(e){this.connection=e}load(e,t,n,a){return n&&n.isReleased&&(n=void 0),e.isManyToOne||e.isOneToOneOwner?this.loadManyToOneOrOneToOneOwner(e,t,n,a):e.isOneToMany||e.isOneToOneNotOwner?this.loadOneToManyOrOneToOneNotOwner(e,t,n,a):e.isManyToManyOwner?this.loadManyToManyOwner(e,t,n,a):this.loadManyToManyNotOwner(e,t,n,a)}loadManyToOneOrOneToOneOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],r=e.entityMetadata.name,s=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.type,e.propertyName),o=s.expressionMap.mainAlias.name,c=e.entityMetadata.primaryColumns,h=(e.isOwning?e.joinColumns:e.inverseRelation.joinColumns).map((t=>`${e.entityMetadata.name}.${t.propertyName} = ${o}.${t.referencedColumn.propertyName}`)).join(" AND ");if(s.innerJoin(e.entityMetadata.target,r,h),1===c.length)s.where(`${r}.${c[0].propertyPath} IN (:...${r+"_"+c[0].propertyName})`),s.setParameter(r+"_"+c[0].propertyName,i.map((e=>c[0].getEntityValue(e,!0))));else{const e=i.map(((e,t)=>c.map(((n,a)=>{const i=r+"_entity_"+t+"_"+a;return s.setParameter(i,n.getEntityValue(e,!0)),r+"."+n.propertyPath+" = :"+i})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");s.where(e)}return _e.joinEagerRelations(s,s.alias,s.expressionMap.mainAlias.metadata),s.getMany()}loadOneToManyOrOneToOneNotOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],r=e.inverseRelation.joinColumns,s=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.inverseRelation.entityMetadata.target,e.propertyName),o=s.expressionMap.mainAlias.name;if(1===r.length)s.where(`${o}.${r[0].propertyPath} IN (:...${o+"_"+r[0].propertyName})`),s.setParameter(o+"_"+r[0].propertyName,i.map((e=>r[0].referencedColumn.getEntityValue(e,!0))));else{const e=i.map(((e,t)=>r.map(((n,a)=>{const i=o+"_entity_"+t+"_"+a;return s.setParameter(i,n.referencedColumn.getEntityValue(e,!0)),o+"."+n.propertyPath+" = :"+i})).join(" AND "))).map((e=>"("+e+")")).join(" OR ");s.where(e)}return _e.joinEagerRelations(s,s.alias,s.expressionMap.mainAlias.metadata),s.getMany()}loadManyToManyOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],r=e.joinColumns.reduce(((e,t)=>(e[t.propertyName]=i.map((e=>t.referencedColumn.getEntityValue(e,!0))),e)),{}),s=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.type,e.propertyName),o=s.expressionMap.mainAlias.name,c=e.junctionEntityMetadata.tableName,h=e.joinColumns.map((e=>`${c}.${e.propertyName} IN (:...${e.propertyName})`)),l=e.inverseJoinColumns.map((e=>`${c}.${e.propertyName}=${o}.${e.referencedColumn.propertyName}`));return s.innerJoin(c,c,[...h,...l].join(" AND ")).setParameters(r),_e.joinEagerRelations(s,s.alias,s.expressionMap.mainAlias.metadata),s.getMany()}loadManyToManyNotOwner(e,t,n,a){const i=Array.isArray(t)?t:[t],r=a||this.connection.createQueryBuilder(n).select(e.propertyName).from(e.type,e.propertyName),s=r.expressionMap.mainAlias.name,o=e.junctionEntityMetadata.tableName,c=e.inverseRelation.joinColumns.map((e=>`${o}.${e.propertyName} = ${s}.${e.referencedColumn.propertyName}`)),h=e.inverseRelation.inverseJoinColumns.map((e=>`${o}.${e.propertyName} IN (:...${e.propertyName})`)),l=e.inverseRelation.inverseJoinColumns.reduce(((e,t)=>(e[t.propertyName]=i.map((e=>t.referencedColumn.getEntityValue(e,!0))),e)),{});return r.innerJoin(o,o,[...c,...h].join(" AND ")).setParameters(l),_e.joinEagerRelations(r,r.alias,r.expressionMap.mainAlias.metadata),r.getMany()}enableLazyLoad(e,t,n){const a=this,i="__"+e.propertyName+"__",r="__promise_"+e.propertyName+"__",s="__has_"+e.propertyName+"__",o=(e,t)=>(e[i]=t,e[s]=!0,delete e[r],t),c=(e,t)=>(delete e[s],delete e[i],e[r]=t,t.then((n=>e[r]===t?o(e,n):n)),t);Object.defineProperty(t,e.propertyName,{get:function(){if(!0===this[s]||void 0!==this[i])return Promise.resolve(this[i]);if(this[r])return this[r];const t=a.load(e,this,n).then((t=>e.isOneToOne||e.isManyToOne?0===t.length?null:t[0]:t));return c(this,t)},set:function(e){e instanceof Promise?c(this,e):o(this,e)},configurable:!0,enumerable:!1})}}ke();class ia{constructor(e){this["@instanceof"]=Symbol.for("DataSource"),this.migrations=[],this.subscribers=[],this.entityMetadatas=[],this.entityMetadatasMap=new Map,ke(),this.name=e.name||"default",this.options=e,this.logger=(new Zn).create(this.options.logger,this.options.logging),this.driver=(new Cn).create(this),this.manager=this.createEntityManager(),this.namingStrategy=e.namingStrategy||new Qe,this.metadataTableName=e.metadataTableName||"typeorm_metadata",this.queryResultCache=e.cache?new na(this).create():void 0,this.relationLoader=new aa(this),this.relationIdLoader=new $e(this),this.isInitialized=!1}get isConnected(){return this.isInitialized}get mongoManager(){if(!g.isMongoEntityManager(this.manager))throw new s("MongoEntityManager is only available for MongoDB databases.");return this.manager}get sqljsManager(){if(!g.isSqljsEntityManager(this.manager))throw new s("SqljsEntityManager is only available for Sqljs databases.");return this.manager}setOptions(e){return Object.assign(this.options,e),(e.logger||e.logging)&&(this.logger=(new Zn).create(e.logger||this.options.logger,e.logging||this.options.logging)),e.namingStrategy&&(this.namingStrategy=e.namingStrategy),e.cache&&(this.queryResultCache=new na(this).create()),e.database&&(this.driver.database=re.buildDriverOptions(this.options).database),this}async initialize(){if(this.isInitialized)throw new c(this.name);await this.driver.connect(),this.queryResultCache&&await this.queryResultCache.connect(),r.assign(this,{isInitialized:!0});try{await this.buildMetadatas(),await this.driver.afterConnect(),this.options.dropSchema&&await this.dropDatabase(),this.options.migrationsRun&&await this.runMigrations({transaction:this.options.migrationsTransactionMode}),this.options.synchronize&&await this.synchronize()}catch(e){throw await this.destroy(),e}return this}async connect(){return this.initialize()}async destroy(){if(!this.isInitialized)throw new H(this.name);await this.driver.disconnect(),this.queryResultCache&&await this.queryResultCache.disconnect(),r.assign(this,{isInitialized:!1})}async close(){return this.destroy()}async synchronize(e=!1){if(!this.isInitialized)throw new H(this.name);e&&await this.dropDatabase();const t=this.driver.createSchemaBuilder();await t.build()}async dropDatabase(){const e=this.createQueryRunner();try{if("mssql"===this.driver.options.type||re.isMySQLFamily(this.driver)||"aurora-mysql"===this.driver.options.type||re.isSQLiteFamily(this.driver)){const t=[];if(this.entityMetadatas.forEach((e=>{e.database&&-1===t.indexOf(e.database)&&t.push(e.database)})),0===t.length&&this.driver.database&&t.push(this.driver.database),0===t.length)await e.clearDatabase();else for(const n of t)await e.clearDatabase(n)}else await e.clearDatabase()}finally{await e.release()}}async runMigrations(e){if(!this.isInitialized)throw new H(this.name);const t=new tt(this);return t.transaction=e?.transaction||this.options?.migrationsTransactionMode||"all",t.fake=e&&e.fake||!1,await t.executePendingMigrations()}async undoLastMigration(e){if(!this.isInitialized)throw new H(this.name);const t=new tt(this);t.transaction=e&&e.transaction||"all",t.fake=e&&e.fake||!1,await t.undoLastMigration()}async showMigrations(){if(!this.isInitialized)throw new H(this.name);const e=new tt(this);return await e.showMigrations()}hasMetadata(e){return!!this.findMetadata(e)}getMetadata(e){const t=this.findMetadata(e);if(!t)throw new b(e);return t}getRepository(e){return this.manager.getRepository(e)}getTreeRepository(e){return this.manager.getTreeRepository(e)}getMongoRepository(e){if("mongodb"!==this.driver.options.type)throw new s("You can use getMongoRepository only for MongoDB connections.");return this.manager.getRepository(e)}getCustomRepository(e){return this.manager.getCustomRepository(e)}async transaction(e,t){return this.manager.transaction(e,t)}async query(e,t,n){if(g.isMongoEntityManager(this.manager))throw new s("Queries aren't supported by MongoDB.");if(n&&n.isReleased)throw new C;const a=n||this.createQueryRunner();try{return await a.query(e,t)}finally{n||await a.release()}}createQueryBuilder(e,t,n){if(g.isMongoEntityManager(this.manager))throw new s("Query Builder is not supported by MongoDB.");if(t){t=re.buildAlias(this.driver,void 0,t);const a=this.getMetadata(e);return new Be(this,n).select(t).from(a.target,t)}return new Be(this,e)}createQueryRunner(e="master"){const t=this.driver.createQueryRunner(e),n=this.createEntityManager(t);return Object.assign(t,{manager:n}),t}getManyToManyMetadata(e,t){const n=this.getMetadata(e).findRelationWithPropertyPath(t);if(!n)throw new s(`Relation "${t}" was not found in ${e} entity.`);if(!n.isManyToMany)throw new s(`Relation "${e}#${t}" does not have a many-to-many relationship.You can use this method only on many-to-many relations.`);return n.junctionEntityMetadata}createEntityManager(e){return(new Wt).create(this,e)}findMetadata(e){const t=this.entityMetadatasMap.get(e);if(t)return t;for(let[t,n]of this.entityMetadatasMap){if(g.isEntitySchema(e)&&n.name===e.options.name)return n;if("string"==typeof e)if(-1!==e.indexOf(".")){if(n.tablePath===e)return n}else if(n.name===e||n.tableName===e)return n;if(r.isObjectWithName(e)&&"string"==typeof e.name)if(-1!==e.name.indexOf(".")){if(n.tablePath===e.name)return n}else if(n.name===e.name||n.tableName===e.name)return n}}async buildMetadatas(){const e=new Wn(this),t=new it,n=r.mixedListToArray(this.options.subscribers||[]),a=await e.buildSubscribers(n);r.assign(this,{subscribers:a});const i=r.mixedListToArray(this.options.entities||[]),s=await e.buildEntityMetadatas(i);r.assign(this,{entityMetadatas:s,entityMetadatasMap:new Map(s.map((e=>[e.target,e])))});const o=r.mixedListToArray(this.options.migrations||[]),c=await e.buildMigrations(o);r.assign(this,{migrations:c}),t.validateMany(this.entityMetadatas.filter((e=>"view"!==e.tableType)),this.driver);for(let e of s)g.isBaseEntityConstructor(e.target)&&e.target.useDataSource(this)}defaultReplicationModeForReads(){if("replication"in this.driver.options){const e=this.driver.options.replication.defaultMode;if(e)return e}return"slave"}}function ra(){const e=i.getGlobalVariable();return e.typeormMetadataArgsStorage||(e.typeormMetadataArgsStorage=new t),e.typeormMetadataArgsStorage}class sa{async connect(){this.client=new ia({type:"postgres",host:"localhost",port:5432,username:"postgres",password:"1234"}),this.client.initialize().then((()=>{console.log("Conectado a la base de datos")})).catch((e=>{console.log("Error al conectar con la BD",e)}))}async query(e){return null}}async function oa(){try{await Excel.run((async e=>{const t=document.getElementById("desc_input").nodeValue||"",n=new sa;n.connect(),function(e,t){e.query(`SELECT * FROM public.materiales_sap WHERE materiales_sap.descripcion LIKE *${t}*`).then((e=>{e.rows.forEach((e=>{console.log(e.join(", "))}))}))}(n,t)}))}catch(e){console.error(e)}}Office.onReady((()=>{document.getElementById("sideload-msg").style.display="none",document.getElementById("app-body").style.display="flex",document.getElementById("run").onclick=oa}))}(),function(){"use strict";var e=n(14385),t=n.n(e),a=new URL(n(58394),n.b),i=new URL(n(75198),n.b);t()(a),t()(i)}()}();
//# sourceMappingURL=taskpane.js.map